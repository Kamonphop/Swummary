<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\LogProxy.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<namespace pos:line="11" pos:column="1">namespace <name pos:line="11" pos:column="11">OpenRA</name>
<block pos:line="12" pos:column="1">{
	<class type="interface"><specifier pos:line="13" pos:column="9">public</specifier> interface <name pos:line="13" pos:column="26">ILog</name>
	<block pos:line="14" pos:column="9">{
		<function_decl><type><name pos:line="15" pos:column="17">void</name></type> <name pos:line="15" pos:column="22">Write</name><parameter_list pos:line="15" pos:column="27">(<param><decl><type><name pos:line="15" pos:column="28">string</name></type> <name pos:line="15" pos:column="35">channel</name></decl></param>, <param><decl><type><name pos:line="15" pos:column="44">string</name></type> <name pos:line="15" pos:column="51">format</name></decl></param>, <param><decl><type><specifier pos:line="15" pos:column="59">params</specifier> <name><name pos:line="15" pos:column="66">object</name><index pos:line="15" pos:column="72">[]</index></name></type> <name pos:line="15" pos:column="75">args</name></decl></param>)</parameter_list>;</function_decl>
	}</block></class>

	<class><specifier pos:line="18" pos:column="9">public</specifier> class <name pos:line="18" pos:column="22">LogProxy</name> <super pos:line="18" pos:column="31">: <name pos:line="18" pos:column="33">ILog</name></super>
	<block pos:line="19" pos:column="9">{
		<function><type><specifier pos:line="20" pos:column="17">public</specifier> <name pos:line="20" pos:column="24">void</name></type> <name pos:line="20" pos:column="29">Write</name><parameter_list pos:line="20" pos:column="34">(<param><decl><type><name pos:line="20" pos:column="35">string</name></type> <name pos:line="20" pos:column="42">channel</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="51">string</name></type> <name pos:line="20" pos:column="58">format</name></decl></param>, <param><decl><type><specifier pos:line="20" pos:column="66">params</specifier> <name><name pos:line="20" pos:column="73">object</name><index pos:line="20" pos:column="79">[]</index></name></type> <name pos:line="20" pos:column="82">args</name></decl></param>)</parameter_list>
		<block pos:line="21" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="22" pos:column="25">Log</name><op:operator pos:line="22" pos:column="28">.</op:operator><name pos:line="22" pos:column="29">Write</name></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">channel</name></expr></argument>, <argument><expr><name pos:line="22" pos:column="44">format</name></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>
	}</block></class>
}</block></namespace>
</unit>
