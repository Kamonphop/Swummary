<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\WRot.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>

<namespace pos:line="13" pos:column="1">namespace <name pos:line="13" pos:column="11">OpenRA</name>
<block pos:line="14" pos:column="1">{
	<comment type="line" pos:line="15" pos:column="9">/// &lt;summary&gt;</comment>
	<comment type="line" pos:line="16" pos:column="9">/// 3d World rotation.</comment>
	<comment type="line" pos:line="17" pos:column="9">/// &lt;/summary&gt;</comment>
	<struct><specifier pos:line="18" pos:column="9">public</specifier> struct <name pos:line="18" pos:column="23">WRot</name> <super pos:line="18" pos:column="28">: <name><name pos:line="18" pos:column="30">IEquatable</name><argument_list pos:line="18" pos:column="40">&lt;<argument><name pos:line="18" pos:column="41">WRot</name></argument>&gt;</argument_list></name></super>
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="20" pos:column="17">public</specifier> <specifier pos:line="20" pos:column="24">readonly</specifier> <name pos:line="20" pos:column="33">WAngle</name></type> <name pos:line="20" pos:column="40">Roll</name></decl><op:operator pos:line="20" pos:column="44">,</op:operator> <decl><type ref="prev"/><name pos:line="20" pos:column="46">Pitch</name></decl><op:operator pos:line="20" pos:column="51">,</op:operator> <decl><type ref="prev"/><name pos:line="20" pos:column="53">Yaw</name></decl>;</decl_stmt>

		<constructor><specifier pos:line="22" pos:column="17">public</specifier> <name pos:line="22" pos:column="24">WRot</name><parameter_list pos:line="22" pos:column="28">(<param><decl><type><name pos:line="22" pos:column="29">WAngle</name></type> <name pos:line="22" pos:column="36">roll</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="42">WAngle</name></type> <name pos:line="22" pos:column="49">pitch</name></decl></param>, <param><decl><type><name pos:line="22" pos:column="56">WAngle</name></type> <name pos:line="22" pos:column="63">yaw</name></decl></param>)</parameter_list> <block pos:line="22" pos:column="68">{ <expr_stmt><expr><name pos:line="22" pos:column="70">Roll</name> <op:operator pos:line="22" pos:column="75">=</op:operator> <name pos:line="22" pos:column="77">roll</name></expr>;</expr_stmt> <expr_stmt><expr><name pos:line="22" pos:column="83">Pitch</name> <op:operator pos:line="22" pos:column="89">=</op:operator> <name pos:line="22" pos:column="91">pitch</name></expr>;</expr_stmt> <expr_stmt><expr><name pos:line="22" pos:column="98">Yaw</name> <op:operator pos:line="22" pos:column="102">=</op:operator> <name pos:line="22" pos:column="104">yaw</name></expr>;</expr_stmt> }</block></constructor>
		<decl_stmt><decl><type><specifier pos:line="23" pos:column="17">public</specifier> <specifier pos:line="23" pos:column="24">static</specifier> <specifier pos:line="23" pos:column="31">readonly</specifier> <name pos:line="23" pos:column="40">WRot</name></type> <name pos:line="23" pos:column="45">Zero</name> <init pos:line="23" pos:column="50">= <expr><op:operator pos:line="23" pos:column="52">new</op:operator> <call><name pos:line="23" pos:column="56">WRot</name><argument_list pos:line="23" pos:column="60">(<argument><expr><name><name pos:line="23" pos:column="61">WAngle</name><op:operator pos:line="23" pos:column="67">.</op:operator><name pos:line="23" pos:column="68">Zero</name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="74">WAngle</name><op:operator pos:line="23" pos:column="80">.</op:operator><name pos:line="23" pos:column="81">Zero</name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="87">WAngle</name><op:operator pos:line="23" pos:column="93">.</op:operator><name pos:line="23" pos:column="94">Zero</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<function><type><specifier pos:line="25" pos:column="17">public</specifier> <specifier pos:line="25" pos:column="24">static</specifier> <name pos:line="25" pos:column="31">WRot</name></type> <name pos:line="25" pos:column="36">FromFacing</name><parameter_list pos:line="25" pos:column="46">(<param><decl><type><name pos:line="25" pos:column="47">int</name></type> <name pos:line="25" pos:column="51">facing</name></decl></param>)</parameter_list> <block pos:line="25" pos:column="59">{ <return pos:line="25" pos:column="61">return <expr><op:operator pos:line="25" pos:column="68">new</op:operator> <call><name pos:line="25" pos:column="72">WRot</name><argument_list pos:line="25" pos:column="76">(<argument><expr><name><name pos:line="25" pos:column="77">WAngle</name><op:operator pos:line="25" pos:column="83">.</op:operator><name pos:line="25" pos:column="84">Zero</name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="90">WAngle</name><op:operator pos:line="25" pos:column="96">.</op:operator><name pos:line="25" pos:column="97">Zero</name></name></expr></argument>, <argument><expr><call><name><name pos:line="25" pos:column="103">WAngle</name><op:operator pos:line="25" pos:column="109">.</op:operator><name pos:line="25" pos:column="110">FromFacing</name></name><argument_list pos:line="25" pos:column="120">(<argument><expr><name pos:line="25" pos:column="121">facing</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="26" pos:column="17">public</specifier> <specifier pos:line="26" pos:column="24">static</specifier> <name pos:line="26" pos:column="31">WRot</name></type> <name pos:line="26" pos:column="36">FromYaw</name><parameter_list pos:line="26" pos:column="43">(<param><decl><type><name pos:line="26" pos:column="44">WAngle</name></type> <name pos:line="26" pos:column="51">yaw</name></decl></param>)</parameter_list> <block pos:line="26" pos:column="56">{ <return pos:line="26" pos:column="58">return <expr><op:operator pos:line="26" pos:column="65">new</op:operator> <call><name pos:line="26" pos:column="69">WRot</name><argument_list pos:line="26" pos:column="73">(<argument><expr><name><name pos:line="26" pos:column="74">WAngle</name><op:operator pos:line="26" pos:column="80">.</op:operator><name pos:line="26" pos:column="81">Zero</name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="87">WAngle</name><op:operator pos:line="26" pos:column="93">.</op:operator><name pos:line="26" pos:column="94">Zero</name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="100">yaw</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="27" pos:column="17">public</specifier> <specifier pos:line="27" pos:column="24">static</specifier> <name pos:line="27" pos:column="31">WRot</name></type> <name pos:line="27" pos:column="36">operator +</name><parameter_list pos:line="27" pos:column="46">(<param><decl><type><name pos:line="27" pos:column="47">WRot</name></type> <name pos:line="27" pos:column="52">a</name></decl></param>, <param><decl><type><name pos:line="27" pos:column="55">WRot</name></type> <name pos:line="27" pos:column="60">b</name></decl></param>)</parameter_list> <block pos:line="27" pos:column="63">{ <return pos:line="27" pos:column="65">return <expr><op:operator pos:line="27" pos:column="72">new</op:operator> <call><name pos:line="27" pos:column="76">WRot</name><argument_list pos:line="27" pos:column="80">(<argument><expr><name><name pos:line="27" pos:column="81">a</name><op:operator pos:line="27" pos:column="82">.</op:operator><name pos:line="27" pos:column="83">Roll</name></name> <op:operator pos:line="27" pos:column="88">+</op:operator> <name><name pos:line="27" pos:column="90">b</name><op:operator pos:line="27" pos:column="91">.</op:operator><name pos:line="27" pos:column="92">Roll</name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="98">a</name><op:operator pos:line="27" pos:column="99">.</op:operator><name pos:line="27" pos:column="100">Pitch</name></name> <op:operator pos:line="27" pos:column="106">+</op:operator> <name><name pos:line="27" pos:column="108">b</name><op:operator pos:line="27" pos:column="109">.</op:operator><name pos:line="27" pos:column="110">Pitch</name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="117">a</name><op:operator pos:line="27" pos:column="118">.</op:operator><name pos:line="27" pos:column="119">Yaw</name></name> <op:operator pos:line="27" pos:column="123">+</op:operator> <name><name pos:line="27" pos:column="125">b</name><op:operator pos:line="27" pos:column="126">.</op:operator><name pos:line="27" pos:column="127">Yaw</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="28" pos:column="17">public</specifier> <specifier pos:line="28" pos:column="24">static</specifier> <name pos:line="28" pos:column="31">WRot</name></type> <name pos:line="28" pos:column="36">operator -</name><parameter_list pos:line="28" pos:column="46">(<param><decl><type><name pos:line="28" pos:column="47">WRot</name></type> <name pos:line="28" pos:column="52">a</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="55">WRot</name></type> <name pos:line="28" pos:column="60">b</name></decl></param>)</parameter_list> <block pos:line="28" pos:column="63">{ <return pos:line="28" pos:column="65">return <expr><op:operator pos:line="28" pos:column="72">new</op:operator> <call><name pos:line="28" pos:column="76">WRot</name><argument_list pos:line="28" pos:column="80">(<argument><expr><name><name pos:line="28" pos:column="81">a</name><op:operator pos:line="28" pos:column="82">.</op:operator><name pos:line="28" pos:column="83">Roll</name></name> <op:operator pos:line="28" pos:column="88">-</op:operator> <name><name pos:line="28" pos:column="90">b</name><op:operator pos:line="28" pos:column="91">.</op:operator><name pos:line="28" pos:column="92">Roll</name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="98">a</name><op:operator pos:line="28" pos:column="99">.</op:operator><name pos:line="28" pos:column="100">Pitch</name></name> <op:operator pos:line="28" pos:column="106">-</op:operator> <name><name pos:line="28" pos:column="108">b</name><op:operator pos:line="28" pos:column="109">.</op:operator><name pos:line="28" pos:column="110">Pitch</name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="117">a</name><op:operator pos:line="28" pos:column="118">.</op:operator><name pos:line="28" pos:column="119">Yaw</name></name> <op:operator pos:line="28" pos:column="123">-</op:operator> <name><name pos:line="28" pos:column="125">b</name><op:operator pos:line="28" pos:column="126">.</op:operator><name pos:line="28" pos:column="127">Yaw</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="29" pos:column="17">public</specifier> <specifier pos:line="29" pos:column="24">static</specifier> <name pos:line="29" pos:column="31">WRot</name></type> <name pos:line="29" pos:column="36">operator -</name><parameter_list pos:line="29" pos:column="46">(<param><decl><type><name pos:line="29" pos:column="47">WRot</name></type> <name pos:line="29" pos:column="52">a</name></decl></param>)</parameter_list> <block pos:line="29" pos:column="55">{ <return pos:line="29" pos:column="57">return <expr><op:operator pos:line="29" pos:column="64">new</op:operator> <call><name pos:line="29" pos:column="68">WRot</name><argument_list pos:line="29" pos:column="72">(<argument><expr><op:operator pos:line="29" pos:column="73">-</op:operator><name><name pos:line="29" pos:column="74">a</name><op:operator pos:line="29" pos:column="75">.</op:operator><name pos:line="29" pos:column="76">Roll</name></name></expr></argument>, <argument><expr><op:operator pos:line="29" pos:column="82">-</op:operator><name><name pos:line="29" pos:column="83">a</name><op:operator pos:line="29" pos:column="84">.</op:operator><name pos:line="29" pos:column="85">Pitch</name></name></expr></argument>, <argument><expr><op:operator pos:line="29" pos:column="92">-</op:operator><name><name pos:line="29" pos:column="93">a</name><op:operator pos:line="29" pos:column="94">.</op:operator><name pos:line="29" pos:column="95">Yaw</name></name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>

		<function><type><specifier pos:line="31" pos:column="17">public</specifier> <specifier pos:line="31" pos:column="24">static</specifier> <name pos:line="31" pos:column="31">bool</name></type> <name pos:line="31" pos:column="36">operator ==</name><parameter_list pos:line="31" pos:column="47">(<param><decl><type><name pos:line="31" pos:column="48">WRot</name></type> <name pos:line="31" pos:column="53">me</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="57">WRot</name></type> <name pos:line="31" pos:column="62">other</name></decl></param>)</parameter_list>
		<block pos:line="32" pos:column="17">{
			<return pos:line="33" pos:column="25">return <expr><name><name pos:line="33" pos:column="32">me</name><op:operator pos:line="33" pos:column="34">.</op:operator><name pos:line="33" pos:column="35">Roll</name></name> <op:operator pos:line="33" pos:column="40">==</op:operator> <name><name pos:line="33" pos:column="43">other</name><op:operator pos:line="33" pos:column="48">.</op:operator><name pos:line="33" pos:column="49">Roll</name> <type:modifier pos:line="33" pos:column="54">&amp;&amp;</type:modifier></name> <name><name pos:line="33" pos:column="57">me</name><op:operator pos:line="33" pos:column="59">.</op:operator><name pos:line="33" pos:column="60">Pitch</name></name> <op:operator pos:line="33" pos:column="66">==</op:operator> <name><name pos:line="33" pos:column="69">other</name><op:operator pos:line="33" pos:column="74">.</op:operator><name pos:line="33" pos:column="75">Pitch</name> <type:modifier pos:line="33" pos:column="81">&amp;&amp;</type:modifier></name> <name><name pos:line="33" pos:column="84">me</name><op:operator pos:line="33" pos:column="86">.</op:operator><name pos:line="33" pos:column="87">Yaw</name></name> <op:operator pos:line="33" pos:column="91">==</op:operator> <name><name pos:line="33" pos:column="94">other</name><op:operator pos:line="33" pos:column="99">.</op:operator><name pos:line="33" pos:column="100">Yaw</name></name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="36" pos:column="17">public</specifier> <specifier pos:line="36" pos:column="24">static</specifier> <name pos:line="36" pos:column="31">bool</name></type> <name pos:line="36" pos:column="36">operator !=</name><parameter_list pos:line="36" pos:column="47">(<param><decl><type><name pos:line="36" pos:column="48">WRot</name></type> <name pos:line="36" pos:column="53">me</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="57">WRot</name></type> <name pos:line="36" pos:column="62">other</name></decl></param>)</parameter_list> <block pos:line="36" pos:column="69">{ <return pos:line="36" pos:column="71">return <expr><op:operator pos:line="36" pos:column="78">!</op:operator><op:operator pos:line="36" pos:column="79">(</op:operator><name pos:line="36" pos:column="80">me</name> <op:operator pos:line="36" pos:column="83">==</op:operator> <name pos:line="36" pos:column="86">other</name><op:operator pos:line="36" pos:column="91">)</op:operator></expr>;</return> }</block></function>

		<function><type><specifier pos:line="38" pos:column="17">public</specifier> <name pos:line="38" pos:column="24">WRot</name></type> <name pos:line="38" pos:column="29">WithYaw</name><parameter_list pos:line="38" pos:column="36">(<param><decl><type><name pos:line="38" pos:column="37">WAngle</name></type> <name pos:line="38" pos:column="44">yaw</name></decl></param>)</parameter_list>
		<block pos:line="39" pos:column="17">{
			<return pos:line="40" pos:column="25">return <expr><op:operator pos:line="40" pos:column="32">new</op:operator> <call><name pos:line="40" pos:column="36">WRot</name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">Roll</name></expr></argument>, <argument><expr><name pos:line="40" pos:column="47">Pitch</name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">yaw</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="43" pos:column="17">public</specifier> <name pos:line="43" pos:column="24">int</name><index pos:line="43" pos:column="27">[]</index></type> <name pos:line="43" pos:column="30">AsQuarternion</name><parameter_list pos:line="43" pos:column="43">()</parameter_list>
		<block pos:line="44" pos:column="17">{
			<comment type="line" pos:line="45" pos:column="25">// Angles increase clockwise</comment>
			<decl_stmt><decl><type><name pos:line="46" pos:column="25">var</name></type> <name pos:line="46" pos:column="29">r</name> <init pos:line="46" pos:column="31">= <expr><op:operator pos:line="46" pos:column="33">new</op:operator> <call><name pos:line="46" pos:column="37">WAngle</name><argument_list pos:line="46" pos:column="43">(<argument><expr><op:operator pos:line="46" pos:column="44">-</op:operator><name><name pos:line="46" pos:column="45">Roll</name><op:operator pos:line="46" pos:column="49">.</op:operator><name pos:line="46" pos:column="50">Angle</name></name> <op:operator pos:line="46" pos:column="56">/</op:operator> <lit:literal type="number" pos:line="46" pos:column="58">2</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="47" pos:column="25">var</name></type> <name pos:line="47" pos:column="29">p</name> <init pos:line="47" pos:column="31">= <expr><op:operator pos:line="47" pos:column="33">new</op:operator> <call><name pos:line="47" pos:column="37">WAngle</name><argument_list pos:line="47" pos:column="43">(<argument><expr><op:operator pos:line="47" pos:column="44">-</op:operator><name><name pos:line="47" pos:column="45">Pitch</name><op:operator pos:line="47" pos:column="50">.</op:operator><name pos:line="47" pos:column="51">Angle</name></name> <op:operator pos:line="47" pos:column="57">/</op:operator> <lit:literal type="number" pos:line="47" pos:column="59">2</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="48" pos:column="25">var</name></type> <name pos:line="48" pos:column="29">y</name> <init pos:line="48" pos:column="31">= <expr><op:operator pos:line="48" pos:column="33">new</op:operator> <call><name pos:line="48" pos:column="37">WAngle</name><argument_list pos:line="48" pos:column="43">(<argument><expr><op:operator pos:line="48" pos:column="44">-</op:operator><name><name pos:line="48" pos:column="45">Yaw</name><op:operator pos:line="48" pos:column="48">.</op:operator><name pos:line="48" pos:column="49">Angle</name></name> <op:operator pos:line="48" pos:column="55">/</op:operator> <lit:literal type="number" pos:line="48" pos:column="57">2</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="49" pos:column="25">var</name></type> <name pos:line="49" pos:column="29">cr</name> <init pos:line="49" pos:column="32">= <expr><op:operator pos:line="49" pos:column="34">(</op:operator><name pos:line="49" pos:column="35">long</name><op:operator pos:line="49" pos:column="39">)</op:operator><call><name><name pos:line="49" pos:column="40">r</name><op:operator pos:line="49" pos:column="41">.</op:operator><name pos:line="49" pos:column="42">Cos</name></name><argument_list pos:line="49" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="50" pos:column="25">var</name></type> <name pos:line="50" pos:column="29">sr</name> <init pos:line="50" pos:column="32">= <expr><op:operator pos:line="50" pos:column="34">(</op:operator><name pos:line="50" pos:column="35">long</name><op:operator pos:line="50" pos:column="39">)</op:operator><call><name><name pos:line="50" pos:column="40">r</name><op:operator pos:line="50" pos:column="41">.</op:operator><name pos:line="50" pos:column="42">Sin</name></name><argument_list pos:line="50" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="51" pos:column="25">var</name></type> <name pos:line="51" pos:column="29">cp</name> <init pos:line="51" pos:column="32">= <expr><op:operator pos:line="51" pos:column="34">(</op:operator><name pos:line="51" pos:column="35">long</name><op:operator pos:line="51" pos:column="39">)</op:operator><call><name><name pos:line="51" pos:column="40">p</name><op:operator pos:line="51" pos:column="41">.</op:operator><name pos:line="51" pos:column="42">Cos</name></name><argument_list pos:line="51" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="52" pos:column="25">var</name></type> <name pos:line="52" pos:column="29">sp</name> <init pos:line="52" pos:column="32">= <expr><op:operator pos:line="52" pos:column="34">(</op:operator><name pos:line="52" pos:column="35">long</name><op:operator pos:line="52" pos:column="39">)</op:operator><call><name><name pos:line="52" pos:column="40">p</name><op:operator pos:line="52" pos:column="41">.</op:operator><name pos:line="52" pos:column="42">Sin</name></name><argument_list pos:line="52" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="53" pos:column="25">var</name></type> <name pos:line="53" pos:column="29">cy</name> <init pos:line="53" pos:column="32">= <expr><op:operator pos:line="53" pos:column="34">(</op:operator><name pos:line="53" pos:column="35">long</name><op:operator pos:line="53" pos:column="39">)</op:operator><call><name><name pos:line="53" pos:column="40">y</name><op:operator pos:line="53" pos:column="41">.</op:operator><name pos:line="53" pos:column="42">Cos</name></name><argument_list pos:line="53" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="54" pos:column="25">var</name></type> <name pos:line="54" pos:column="29">sy</name> <init pos:line="54" pos:column="32">= <expr><op:operator pos:line="54" pos:column="34">(</op:operator><name pos:line="54" pos:column="35">long</name><op:operator pos:line="54" pos:column="39">)</op:operator><call><name><name pos:line="54" pos:column="40">y</name><op:operator pos:line="54" pos:column="41">.</op:operator><name pos:line="54" pos:column="42">Sin</name></name><argument_list pos:line="54" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="56" pos:column="25">// Normalized to 1024 == 1.0</comment>
			<return pos:line="57" pos:column="25">return <expr><op:operator pos:line="57" pos:column="32">new</op:operator> <name><name pos:line="57" pos:column="36">int</name><index pos:line="57" pos:column="39">[<expr><lit:literal type="number" pos:line="57" pos:column="40">4</lit:literal></expr>]</index></name>
			<block pos:line="58" pos:column="25">{
				<expr><call pos:line="59" pos:column="33">(<name pos:line="59" pos:column="34">int</name>)<argument_list pos:line="59" pos:column="38">(<argument><expr><op:operator pos:line="59" pos:column="39">(</op:operator><name pos:line="59" pos:column="40">sr</name> <op:operator pos:line="59" pos:column="43">*</op:operator> <name pos:line="59" pos:column="45">cp</name> <op:operator pos:line="59" pos:column="48">*</op:operator> <name pos:line="59" pos:column="50">cy</name> <op:operator pos:line="59" pos:column="53">-</op:operator> <name pos:line="59" pos:column="55">cr</name> <op:operator pos:line="59" pos:column="58">*</op:operator> <name pos:line="59" pos:column="60">sp</name> <op:operator pos:line="59" pos:column="63">*</op:operator> <name pos:line="59" pos:column="65">sy</name><op:operator pos:line="59" pos:column="67">)</op:operator> <op:operator pos:line="59" pos:column="69">/</op:operator> <lit:literal type="number" pos:line="59" pos:column="71">1048576</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="59" pos:column="79">,</op:operator> <comment type="line" pos:line="59" pos:column="81">// x</comment>
				<expr><call pos:line="60" pos:column="33">(<name pos:line="60" pos:column="34">int</name>)<argument_list pos:line="60" pos:column="38">(<argument><expr><op:operator pos:line="60" pos:column="39">(</op:operator><name pos:line="60" pos:column="40">cr</name> <op:operator pos:line="60" pos:column="43">*</op:operator> <name pos:line="60" pos:column="45">sp</name> <op:operator pos:line="60" pos:column="48">*</op:operator> <name pos:line="60" pos:column="50">cy</name> <op:operator pos:line="60" pos:column="53">+</op:operator> <name pos:line="60" pos:column="55">sr</name> <op:operator pos:line="60" pos:column="58">*</op:operator> <name pos:line="60" pos:column="60">cp</name> <op:operator pos:line="60" pos:column="63">*</op:operator> <name pos:line="60" pos:column="65">sy</name><op:operator pos:line="60" pos:column="67">)</op:operator> <op:operator pos:line="60" pos:column="69">/</op:operator> <lit:literal type="number" pos:line="60" pos:column="71">1048576</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="60" pos:column="79">,</op:operator> <comment type="line" pos:line="60" pos:column="81">// y</comment>
				<expr><call pos:line="61" pos:column="33">(<name pos:line="61" pos:column="34">int</name>)<argument_list pos:line="61" pos:column="38">(<argument><expr><op:operator pos:line="61" pos:column="39">(</op:operator><name pos:line="61" pos:column="40">cr</name> <op:operator pos:line="61" pos:column="43">*</op:operator> <name pos:line="61" pos:column="45">cp</name> <op:operator pos:line="61" pos:column="48">*</op:operator> <name pos:line="61" pos:column="50">sy</name> <op:operator pos:line="61" pos:column="53">-</op:operator> <name pos:line="61" pos:column="55">sr</name> <op:operator pos:line="61" pos:column="58">*</op:operator> <name pos:line="61" pos:column="60">sp</name> <op:operator pos:line="61" pos:column="63">*</op:operator> <name pos:line="61" pos:column="65">cy</name><op:operator pos:line="61" pos:column="67">)</op:operator> <op:operator pos:line="61" pos:column="69">/</op:operator> <lit:literal type="number" pos:line="61" pos:column="71">1048576</lit:literal></expr></argument>)</argument_list></call></expr><op:operator pos:line="61" pos:column="79">,</op:operator> <comment type="line" pos:line="61" pos:column="81">// z</comment>
				<expr><call pos:line="62" pos:column="33">(<name pos:line="62" pos:column="34">int</name>)<argument_list pos:line="62" pos:column="38">(<argument><expr><op:operator pos:line="62" pos:column="39">(</op:operator><name pos:line="62" pos:column="40">cr</name> <op:operator pos:line="62" pos:column="43">*</op:operator> <name pos:line="62" pos:column="45">cp</name> <op:operator pos:line="62" pos:column="48">*</op:operator> <name pos:line="62" pos:column="50">cy</name> <op:operator pos:line="62" pos:column="53">+</op:operator> <name pos:line="62" pos:column="55">sr</name> <op:operator pos:line="62" pos:column="58">*</op:operator> <name pos:line="62" pos:column="60">sp</name> <op:operator pos:line="62" pos:column="63">*</op:operator> <name pos:line="62" pos:column="65">sy</name><op:operator pos:line="62" pos:column="67">)</op:operator> <op:operator pos:line="62" pos:column="69">/</op:operator> <lit:literal type="number" pos:line="62" pos:column="71">1048576</lit:literal></expr></argument>)</argument_list></call></expr>  <comment type="line" pos:line="62" pos:column="81">// w</comment>
			}</block></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="66" pos:column="17">public</specifier> <name pos:line="66" pos:column="24">int</name><index pos:line="66" pos:column="27">[]</index></type> <name pos:line="66" pos:column="30">AsMatrix</name><parameter_list pos:line="66" pos:column="38">()</parameter_list>
		<block pos:line="67" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="68" pos:column="25">var</name></type> <name pos:line="68" pos:column="29">q</name> <init pos:line="68" pos:column="31">= <expr><call><name pos:line="68" pos:column="33">AsQuarternion</name><argument_list pos:line="68" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="70" pos:column="25">// Theoretically 1024 *  * 2, but may differ slightly due to rounding</comment>
			<decl_stmt><decl><type><name pos:line="71" pos:column="25">var</name></type> <name pos:line="71" pos:column="29">lsq</name> <init pos:line="71" pos:column="33">= <expr><name><name pos:line="71" pos:column="35">q</name><index pos:line="71" pos:column="36">[<expr><lit:literal type="number" pos:line="71" pos:column="37">0</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="40">*</op:operator> <name><name pos:line="71" pos:column="42">q</name><index pos:line="71" pos:column="43">[<expr><lit:literal type="number" pos:line="71" pos:column="44">0</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="47">+</op:operator> <name><name pos:line="71" pos:column="49">q</name><index pos:line="71" pos:column="50">[<expr><lit:literal type="number" pos:line="71" pos:column="51">1</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="54">*</op:operator> <name><name pos:line="71" pos:column="56">q</name><index pos:line="71" pos:column="57">[<expr><lit:literal type="number" pos:line="71" pos:column="58">1</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="61">+</op:operator> <name><name pos:line="71" pos:column="63">q</name><index pos:line="71" pos:column="64">[<expr><lit:literal type="number" pos:line="71" pos:column="65">2</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="68">*</op:operator> <name><name pos:line="71" pos:column="70">q</name><index pos:line="71" pos:column="71">[<expr><lit:literal type="number" pos:line="71" pos:column="72">2</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="75">+</op:operator> <name><name pos:line="71" pos:column="77">q</name><index pos:line="71" pos:column="78">[<expr><lit:literal type="number" pos:line="71" pos:column="79">3</lit:literal></expr>]</index></name> <op:operator pos:line="71" pos:column="82">*</op:operator> <name><name pos:line="71" pos:column="84">q</name><index pos:line="71" pos:column="85">[<expr><lit:literal type="number" pos:line="71" pos:column="86">3</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="73" pos:column="25">// Quarternion components use 10 bits, so there's no risk of overflow</comment>
			<decl_stmt><decl><type><name pos:line="74" pos:column="25">var</name></type> <name pos:line="74" pos:column="29">mtx</name> <init pos:line="74" pos:column="33">= <expr><op:operator pos:line="74" pos:column="35">new</op:operator> <name><name pos:line="74" pos:column="39">int</name><index pos:line="74" pos:column="42">[<expr><lit:literal type="number" pos:line="74" pos:column="43">16</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="75" pos:column="25">mtx</name><index pos:line="75" pos:column="28">[<expr><lit:literal type="number" pos:line="75" pos:column="29">0</lit:literal></expr>]</index></name> <op:operator pos:line="75" pos:column="32">=</op:operator> <name pos:line="75" pos:column="34">lsq</name> <op:operator pos:line="75" pos:column="38">-</op:operator> <lit:literal type="number" pos:line="75" pos:column="40">2</lit:literal> <op:operator pos:line="75" pos:column="42">*</op:operator> <op:operator pos:line="75" pos:column="44">(</op:operator><name><name pos:line="75" pos:column="45">q</name><index pos:line="75" pos:column="46">[<expr><lit:literal type="number" pos:line="75" pos:column="47">1</lit:literal></expr>]</index></name> <op:operator pos:line="75" pos:column="50">*</op:operator> <name><name pos:line="75" pos:column="52">q</name><index pos:line="75" pos:column="53">[<expr><lit:literal type="number" pos:line="75" pos:column="54">1</lit:literal></expr>]</index></name> <op:operator pos:line="75" pos:column="57">+</op:operator> <name><name pos:line="75" pos:column="59">q</name><index pos:line="75" pos:column="60">[<expr><lit:literal type="number" pos:line="75" pos:column="61">2</lit:literal></expr>]</index></name> <op:operator pos:line="75" pos:column="64">*</op:operator> <name><name pos:line="75" pos:column="66">q</name><index pos:line="75" pos:column="67">[<expr><lit:literal type="number" pos:line="75" pos:column="68">2</lit:literal></expr>]</index></name><op:operator pos:line="75" pos:column="70">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="76" pos:column="25">mtx</name><index pos:line="76" pos:column="28">[<expr><lit:literal type="number" pos:line="76" pos:column="29">1</lit:literal></expr>]</index></name> <op:operator pos:line="76" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="76" pos:column="34">2</lit:literal> <op:operator pos:line="76" pos:column="36">*</op:operator> <op:operator pos:line="76" pos:column="38">(</op:operator><name><name pos:line="76" pos:column="39">q</name><index pos:line="76" pos:column="40">[<expr><lit:literal type="number" pos:line="76" pos:column="41">0</lit:literal></expr>]</index></name> <op:operator pos:line="76" pos:column="44">*</op:operator> <name><name pos:line="76" pos:column="46">q</name><index pos:line="76" pos:column="47">[<expr><lit:literal type="number" pos:line="76" pos:column="48">1</lit:literal></expr>]</index></name> <op:operator pos:line="76" pos:column="51">+</op:operator> <name><name pos:line="76" pos:column="53">q</name><index pos:line="76" pos:column="54">[<expr><lit:literal type="number" pos:line="76" pos:column="55">2</lit:literal></expr>]</index></name> <op:operator pos:line="76" pos:column="58">*</op:operator> <name><name pos:line="76" pos:column="60">q</name><index pos:line="76" pos:column="61">[<expr><lit:literal type="number" pos:line="76" pos:column="62">3</lit:literal></expr>]</index></name><op:operator pos:line="76" pos:column="64">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="77" pos:column="25">mtx</name><index pos:line="77" pos:column="28">[<expr><lit:literal type="number" pos:line="77" pos:column="29">2</lit:literal></expr>]</index></name> <op:operator pos:line="77" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="77" pos:column="34">2</lit:literal> <op:operator pos:line="77" pos:column="36">*</op:operator> <op:operator pos:line="77" pos:column="38">(</op:operator><name><name pos:line="77" pos:column="39">q</name><index pos:line="77" pos:column="40">[<expr><lit:literal type="number" pos:line="77" pos:column="41">0</lit:literal></expr>]</index></name> <op:operator pos:line="77" pos:column="44">*</op:operator> <name><name pos:line="77" pos:column="46">q</name><index pos:line="77" pos:column="47">[<expr><lit:literal type="number" pos:line="77" pos:column="48">2</lit:literal></expr>]</index></name> <op:operator pos:line="77" pos:column="51">-</op:operator> <name><name pos:line="77" pos:column="53">q</name><index pos:line="77" pos:column="54">[<expr><lit:literal type="number" pos:line="77" pos:column="55">1</lit:literal></expr>]</index></name> <op:operator pos:line="77" pos:column="58">*</op:operator> <name><name pos:line="77" pos:column="60">q</name><index pos:line="77" pos:column="61">[<expr><lit:literal type="number" pos:line="77" pos:column="62">3</lit:literal></expr>]</index></name><op:operator pos:line="77" pos:column="64">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="78" pos:column="25">mtx</name><index pos:line="78" pos:column="28">[<expr><lit:literal type="number" pos:line="78" pos:column="29">3</lit:literal></expr>]</index></name> <op:operator pos:line="78" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="78" pos:column="34">0</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="80" pos:column="25">mtx</name><index pos:line="80" pos:column="28">[<expr><lit:literal type="number" pos:line="80" pos:column="29">4</lit:literal></expr>]</index></name> <op:operator pos:line="80" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="80" pos:column="34">2</lit:literal> <op:operator pos:line="80" pos:column="36">*</op:operator> <op:operator pos:line="80" pos:column="38">(</op:operator><name><name pos:line="80" pos:column="39">q</name><index pos:line="80" pos:column="40">[<expr><lit:literal type="number" pos:line="80" pos:column="41">0</lit:literal></expr>]</index></name> <op:operator pos:line="80" pos:column="44">*</op:operator> <name><name pos:line="80" pos:column="46">q</name><index pos:line="80" pos:column="47">[<expr><lit:literal type="number" pos:line="80" pos:column="48">1</lit:literal></expr>]</index></name> <op:operator pos:line="80" pos:column="51">-</op:operator> <name><name pos:line="80" pos:column="53">q</name><index pos:line="80" pos:column="54">[<expr><lit:literal type="number" pos:line="80" pos:column="55">2</lit:literal></expr>]</index></name> <op:operator pos:line="80" pos:column="58">*</op:operator> <name><name pos:line="80" pos:column="60">q</name><index pos:line="80" pos:column="61">[<expr><lit:literal type="number" pos:line="80" pos:column="62">3</lit:literal></expr>]</index></name><op:operator pos:line="80" pos:column="64">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="81" pos:column="25">mtx</name><index pos:line="81" pos:column="28">[<expr><lit:literal type="number" pos:line="81" pos:column="29">5</lit:literal></expr>]</index></name> <op:operator pos:line="81" pos:column="32">=</op:operator> <name pos:line="81" pos:column="34">lsq</name> <op:operator pos:line="81" pos:column="38">-</op:operator> <lit:literal type="number" pos:line="81" pos:column="40">2</lit:literal> <op:operator pos:line="81" pos:column="42">*</op:operator> <op:operator pos:line="81" pos:column="44">(</op:operator><name><name pos:line="81" pos:column="45">q</name><index pos:line="81" pos:column="46">[<expr><lit:literal type="number" pos:line="81" pos:column="47">0</lit:literal></expr>]</index></name> <op:operator pos:line="81" pos:column="50">*</op:operator> <name><name pos:line="81" pos:column="52">q</name><index pos:line="81" pos:column="53">[<expr><lit:literal type="number" pos:line="81" pos:column="54">0</lit:literal></expr>]</index></name> <op:operator pos:line="81" pos:column="57">+</op:operator> <name><name pos:line="81" pos:column="59">q</name><index pos:line="81" pos:column="60">[<expr><lit:literal type="number" pos:line="81" pos:column="61">2</lit:literal></expr>]</index></name> <op:operator pos:line="81" pos:column="64">*</op:operator> <name><name pos:line="81" pos:column="66">q</name><index pos:line="81" pos:column="67">[<expr><lit:literal type="number" pos:line="81" pos:column="68">2</lit:literal></expr>]</index></name><op:operator pos:line="81" pos:column="70">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="82" pos:column="25">mtx</name><index pos:line="82" pos:column="28">[<expr><lit:literal type="number" pos:line="82" pos:column="29">6</lit:literal></expr>]</index></name> <op:operator pos:line="82" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="82" pos:column="34">2</lit:literal> <op:operator pos:line="82" pos:column="36">*</op:operator> <op:operator pos:line="82" pos:column="38">(</op:operator><name><name pos:line="82" pos:column="39">q</name><index pos:line="82" pos:column="40">[<expr><lit:literal type="number" pos:line="82" pos:column="41">1</lit:literal></expr>]</index></name> <op:operator pos:line="82" pos:column="44">*</op:operator> <name><name pos:line="82" pos:column="46">q</name><index pos:line="82" pos:column="47">[<expr><lit:literal type="number" pos:line="82" pos:column="48">2</lit:literal></expr>]</index></name> <op:operator pos:line="82" pos:column="51">+</op:operator> <name><name pos:line="82" pos:column="53">q</name><index pos:line="82" pos:column="54">[<expr><lit:literal type="number" pos:line="82" pos:column="55">0</lit:literal></expr>]</index></name> <op:operator pos:line="82" pos:column="58">*</op:operator> <name><name pos:line="82" pos:column="60">q</name><index pos:line="82" pos:column="61">[<expr><lit:literal type="number" pos:line="82" pos:column="62">3</lit:literal></expr>]</index></name><op:operator pos:line="82" pos:column="64">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="83" pos:column="25">mtx</name><index pos:line="83" pos:column="28">[<expr><lit:literal type="number" pos:line="83" pos:column="29">7</lit:literal></expr>]</index></name> <op:operator pos:line="83" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="83" pos:column="34">0</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="85" pos:column="25">mtx</name><index pos:line="85" pos:column="28">[<expr><lit:literal type="number" pos:line="85" pos:column="29">8</lit:literal></expr>]</index></name> <op:operator pos:line="85" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="85" pos:column="34">2</lit:literal> <op:operator pos:line="85" pos:column="36">*</op:operator> <op:operator pos:line="85" pos:column="38">(</op:operator><name><name pos:line="85" pos:column="39">q</name><index pos:line="85" pos:column="40">[<expr><lit:literal type="number" pos:line="85" pos:column="41">0</lit:literal></expr>]</index></name> <op:operator pos:line="85" pos:column="44">*</op:operator> <name><name pos:line="85" pos:column="46">q</name><index pos:line="85" pos:column="47">[<expr><lit:literal type="number" pos:line="85" pos:column="48">2</lit:literal></expr>]</index></name> <op:operator pos:line="85" pos:column="51">+</op:operator> <name><name pos:line="85" pos:column="53">q</name><index pos:line="85" pos:column="54">[<expr><lit:literal type="number" pos:line="85" pos:column="55">1</lit:literal></expr>]</index></name> <op:operator pos:line="85" pos:column="58">*</op:operator> <name><name pos:line="85" pos:column="60">q</name><index pos:line="85" pos:column="61">[<expr><lit:literal type="number" pos:line="85" pos:column="62">3</lit:literal></expr>]</index></name><op:operator pos:line="85" pos:column="64">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="86" pos:column="25">mtx</name><index pos:line="86" pos:column="28">[<expr><lit:literal type="number" pos:line="86" pos:column="29">9</lit:literal></expr>]</index></name> <op:operator pos:line="86" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="86" pos:column="34">2</lit:literal> <op:operator pos:line="86" pos:column="36">*</op:operator> <op:operator pos:line="86" pos:column="38">(</op:operator><name><name pos:line="86" pos:column="39">q</name><index pos:line="86" pos:column="40">[<expr><lit:literal type="number" pos:line="86" pos:column="41">1</lit:literal></expr>]</index></name> <op:operator pos:line="86" pos:column="44">*</op:operator> <name><name pos:line="86" pos:column="46">q</name><index pos:line="86" pos:column="47">[<expr><lit:literal type="number" pos:line="86" pos:column="48">2</lit:literal></expr>]</index></name> <op:operator pos:line="86" pos:column="51">-</op:operator> <name><name pos:line="86" pos:column="53">q</name><index pos:line="86" pos:column="54">[<expr><lit:literal type="number" pos:line="86" pos:column="55">0</lit:literal></expr>]</index></name> <op:operator pos:line="86" pos:column="58">*</op:operator> <name><name pos:line="86" pos:column="60">q</name><index pos:line="86" pos:column="61">[<expr><lit:literal type="number" pos:line="86" pos:column="62">3</lit:literal></expr>]</index></name><op:operator pos:line="86" pos:column="64">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="87" pos:column="25">mtx</name><index pos:line="87" pos:column="28">[<expr><lit:literal type="number" pos:line="87" pos:column="29">10</lit:literal></expr>]</index></name> <op:operator pos:line="87" pos:column="33">=</op:operator> <name pos:line="87" pos:column="35">lsq</name> <op:operator pos:line="87" pos:column="39">-</op:operator> <lit:literal type="number" pos:line="87" pos:column="41">2</lit:literal> <op:operator pos:line="87" pos:column="43">*</op:operator> <op:operator pos:line="87" pos:column="45">(</op:operator><name><name pos:line="87" pos:column="46">q</name><index pos:line="87" pos:column="47">[<expr><lit:literal type="number" pos:line="87" pos:column="48">0</lit:literal></expr>]</index></name> <op:operator pos:line="87" pos:column="51">*</op:operator> <name><name pos:line="87" pos:column="53">q</name><index pos:line="87" pos:column="54">[<expr><lit:literal type="number" pos:line="87" pos:column="55">0</lit:literal></expr>]</index></name> <op:operator pos:line="87" pos:column="58">+</op:operator> <name><name pos:line="87" pos:column="60">q</name><index pos:line="87" pos:column="61">[<expr><lit:literal type="number" pos:line="87" pos:column="62">1</lit:literal></expr>]</index></name> <op:operator pos:line="87" pos:column="65">*</op:operator> <name><name pos:line="87" pos:column="67">q</name><index pos:line="87" pos:column="68">[<expr><lit:literal type="number" pos:line="87" pos:column="69">1</lit:literal></expr>]</index></name><op:operator pos:line="87" pos:column="71">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="88" pos:column="25">mtx</name><index pos:line="88" pos:column="28">[<expr><lit:literal type="number" pos:line="88" pos:column="29">11</lit:literal></expr>]</index></name> <op:operator pos:line="88" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="88" pos:column="35">0</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="90" pos:column="25">mtx</name><index pos:line="90" pos:column="28">[<expr><lit:literal type="number" pos:line="90" pos:column="29">12</lit:literal></expr>]</index></name> <op:operator pos:line="90" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="90" pos:column="35">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="91" pos:column="25">mtx</name><index pos:line="91" pos:column="28">[<expr><lit:literal type="number" pos:line="91" pos:column="29">13</lit:literal></expr>]</index></name> <op:operator pos:line="91" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="91" pos:column="35">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="92" pos:column="25">mtx</name><index pos:line="92" pos:column="28">[<expr><lit:literal type="number" pos:line="92" pos:column="29">14</lit:literal></expr>]</index></name> <op:operator pos:line="92" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="92" pos:column="35">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="93" pos:column="25">mtx</name><index pos:line="93" pos:column="28">[<expr><lit:literal type="number" pos:line="93" pos:column="29">15</lit:literal></expr>]</index></name> <op:operator pos:line="93" pos:column="33">=</op:operator> <name pos:line="93" pos:column="35">lsq</name></expr>;</expr_stmt>

			<return pos:line="95" pos:column="25">return <expr><name pos:line="95" pos:column="32">mtx</name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="98" pos:column="17">public</specifier> <specifier pos:line="98" pos:column="24">override</specifier> <name pos:line="98" pos:column="33">int</name></type> <name pos:line="98" pos:column="37">GetHashCode</name><parameter_list pos:line="98" pos:column="48">()</parameter_list> <block pos:line="98" pos:column="51">{ <return pos:line="98" pos:column="53">return <expr><call><name><name pos:line="98" pos:column="60">Roll</name><op:operator pos:line="98" pos:column="64">.</op:operator><name pos:line="98" pos:column="65">GetHashCode</name></name><argument_list pos:line="98" pos:column="76">()</argument_list></call> <op:operator pos:line="98" pos:column="79">^</op:operator> <call><name><name pos:line="98" pos:column="81">Pitch</name><op:operator pos:line="98" pos:column="86">.</op:operator><name pos:line="98" pos:column="87">GetHashCode</name></name><argument_list pos:line="98" pos:column="98">()</argument_list></call> <op:operator pos:line="98" pos:column="101">^</op:operator> <call><name><name pos:line="98" pos:column="103">Yaw</name><op:operator pos:line="98" pos:column="106">.</op:operator><name pos:line="98" pos:column="107">GetHashCode</name></name><argument_list pos:line="98" pos:column="118">()</argument_list></call></expr>;</return> }</block></function>

		<function><type><specifier pos:line="100" pos:column="17">public</specifier> <name pos:line="100" pos:column="24">bool</name></type> <name pos:line="100" pos:column="29">Equals</name><parameter_list pos:line="100" pos:column="35">(<param><decl><type><name pos:line="100" pos:column="36">WRot</name></type> <name pos:line="100" pos:column="41">other</name></decl></param>)</parameter_list> <block pos:line="100" pos:column="48">{ <return pos:line="100" pos:column="50">return <expr><name pos:line="100" pos:column="57">other</name> <op:operator pos:line="100" pos:column="63">==</op:operator> <name pos:line="100" pos:column="66">this</name></expr>;</return> }</block></function>
		<function><type><specifier pos:line="101" pos:column="17">public</specifier> <specifier pos:line="101" pos:column="24">override</specifier> <name pos:line="101" pos:column="33">bool</name></type> <name pos:line="101" pos:column="38">Equals</name><parameter_list pos:line="101" pos:column="44">(<param><decl><type><name pos:line="101" pos:column="45">object</name></type> <name pos:line="101" pos:column="52">obj</name></decl></param>)</parameter_list> <block pos:line="101" pos:column="57">{ <return pos:line="101" pos:column="59">return <expr><name pos:line="101" pos:column="66">obj</name> <op:operator pos:line="101" pos:column="70">is</op:operator> <name pos:line="101" pos:column="73">WRot</name> <op:operator pos:line="101" pos:column="78">&amp;&amp;</op:operator> <call><name pos:line="101" pos:column="81">Equals</name><argument_list pos:line="101" pos:column="87">(<argument><expr><op:operator pos:line="101" pos:column="88">(</op:operator><name pos:line="101" pos:column="89">WRot</name><op:operator pos:line="101" pos:column="93">)</op:operator><name pos:line="101" pos:column="94">obj</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>

		<function><type><specifier pos:line="103" pos:column="17">public</specifier> <specifier pos:line="103" pos:column="24">override</specifier> <name pos:line="103" pos:column="33">string</name></type> <name pos:line="103" pos:column="40">ToString</name><parameter_list pos:line="103" pos:column="48">()</parameter_list> <block pos:line="103" pos:column="51">{ <return pos:line="103" pos:column="53">return <expr><name pos:line="103" pos:column="60">Roll</name> <op:operator pos:line="103" pos:column="65">+</op:operator> <lit:literal type="string" pos:line="103" pos:column="67">","</lit:literal> <op:operator pos:line="103" pos:column="71">+</op:operator> <name pos:line="103" pos:column="73">Pitch</name> <op:operator pos:line="103" pos:column="79">+</op:operator> <lit:literal type="string" pos:line="103" pos:column="81">","</lit:literal> <op:operator pos:line="103" pos:column="85">+</op:operator> <name pos:line="103" pos:column="87">Yaw</name></expr>;</return> }</block></function>
	}</block></struct>
}</block></namespace>
</unit>
