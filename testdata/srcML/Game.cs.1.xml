<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\Game.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Diagnostics</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Drawing</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">System</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Drawing</name><op:operator pos:line="14" pos:column="21">.</op:operator><name pos:line="14" pos:column="22">Imaging</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">System</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">IO</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">System</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Linq</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">System</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Net</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">System</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Threading</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">OpenRA</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">FileSystem</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">OpenRA</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Graphics</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">OpenRA</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">Network</name></name>;</using>
<using pos:line="22" pos:column="1">using <name><name pos:line="22" pos:column="7">OpenRA</name><op:operator pos:line="22" pos:column="13">.</op:operator><name pos:line="22" pos:column="14">Primitives</name></name>;</using>
<using pos:line="23" pos:column="1">using <name><name pos:line="23" pos:column="7">OpenRA</name><op:operator pos:line="23" pos:column="13">.</op:operator><name pos:line="23" pos:column="14">Support</name></name>;</using>
<using pos:line="24" pos:column="1">using <name><name pos:line="24" pos:column="7">OpenRA</name><op:operator pos:line="24" pos:column="13">.</op:operator><name pos:line="24" pos:column="14">Widgets</name></name>;</using>

<namespace pos:line="26" pos:column="1">namespace <name pos:line="26" pos:column="11">OpenRA</name>
<block pos:line="27" pos:column="1">{
	<class><specifier pos:line="28" pos:column="9">public</specifier> <specifier pos:line="28" pos:column="16">static</specifier> class <name pos:line="28" pos:column="29">Game</name>
	<block pos:line="29" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="30" pos:column="17">public</specifier> <specifier pos:line="30" pos:column="24">const</specifier> <name pos:line="30" pos:column="30">int</name></type> <name pos:line="30" pos:column="34">NetTickScale</name> <init pos:line="30" pos:column="47">= <expr><lit:literal type="number" pos:line="30" pos:column="49">3</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="30" pos:column="52">// 120 ms net tick for 40 ms local tick</comment>
		<decl_stmt><decl><type><specifier pos:line="31" pos:column="17">public</specifier> <specifier pos:line="31" pos:column="24">const</specifier> <name pos:line="31" pos:column="30">int</name></type> <name pos:line="31" pos:column="34">Timestep</name> <init pos:line="31" pos:column="43">= <expr><lit:literal type="number" pos:line="31" pos:column="45">40</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="32" pos:column="17">public</specifier> <specifier pos:line="32" pos:column="24">const</specifier> <name pos:line="32" pos:column="30">int</name></type> <name pos:line="32" pos:column="34">TimestepJankThreshold</name> <init pos:line="32" pos:column="56">= <expr><lit:literal type="number" pos:line="32" pos:column="58">250</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="32" pos:column="63">// Don't catch up for delays larger than 250ms</comment>

		<decl_stmt><decl><type><specifier pos:line="34" pos:column="17">public</specifier> <specifier pos:line="34" pos:column="24">static</specifier> <name pos:line="34" pos:column="31">ModData</name></type> <name pos:line="34" pos:column="39">ModData</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">public</specifier> <specifier pos:line="35" pos:column="24">static</specifier> <name pos:line="35" pos:column="31">Settings</name></type> <name pos:line="35" pos:column="40">Settings</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="36" pos:column="17">public</specifier> <specifier pos:line="36" pos:column="24">static</specifier> <name pos:line="36" pos:column="31">ICursor</name></type> <name pos:line="36" pos:column="39">Cursor</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="37" pos:column="17">static</specifier> <name pos:line="37" pos:column="24">WorldRenderer</name></type> <name pos:line="37" pos:column="38">worldRenderer</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="39" pos:column="17">internal</specifier> <specifier pos:line="39" pos:column="26">static</specifier> <name pos:line="39" pos:column="33">OrderManager</name></type> <name pos:line="39" pos:column="46">OrderManager</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="40" pos:column="17">static</specifier> <name><name pos:line="40" pos:column="24">Server</name><op:operator pos:line="40" pos:column="30">.</op:operator><name pos:line="40" pos:column="31">Server</name></name></type> <name pos:line="40" pos:column="38">server</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="42" pos:column="17">public</specifier> <specifier pos:line="42" pos:column="24">static</specifier> <name pos:line="42" pos:column="31">MersenneTwister</name></type> <name pos:line="42" pos:column="47">CosmeticRandom</name> <init pos:line="42" pos:column="62">= <expr><op:operator pos:line="42" pos:column="64">new</op:operator> <call><name pos:line="42" pos:column="68">MersenneTwister</name><argument_list pos:line="42" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="42" pos:column="87">// not synced</comment>

		<decl_stmt><decl><type><specifier pos:line="44" pos:column="17">public</specifier> <specifier pos:line="44" pos:column="24">static</specifier> <name pos:line="44" pos:column="31">Renderer</name></type> <name pos:line="44" pos:column="40">Renderer</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="45" pos:column="17">public</specifier> <specifier pos:line="45" pos:column="24">static</specifier> <name pos:line="45" pos:column="31">bool</name></type> <name pos:line="45" pos:column="36">HasInputFocus</name> <init pos:line="45" pos:column="50">= <expr><lit:literal type="boolean" pos:line="45" pos:column="52">false</lit:literal></expr></init></decl>;</decl_stmt>

		<function><type><specifier pos:line="47" pos:column="17">public</specifier> <specifier pos:line="47" pos:column="24">static</specifier> <name pos:line="47" pos:column="31">OrderManager</name></type> <name pos:line="47" pos:column="44">JoinServer</name><parameter_list pos:line="47" pos:column="54">(<param><decl><type><name pos:line="47" pos:column="55">string</name></type> <name pos:line="47" pos:column="62">host</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="68">int</name></type> <name pos:line="47" pos:column="72">port</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="78">string</name></type> <name pos:line="47" pos:column="85">password</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="95">bool</name></type> <name pos:line="47" pos:column="100">recordReplay</name> <init pos:line="47" pos:column="113">= <expr><lit:literal type="boolean" pos:line="47" pos:column="115">true</lit:literal></expr></init></decl></param>)</parameter_list>
		<block pos:line="48" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="49" pos:column="25">IConnection</name></type> <name pos:line="49" pos:column="37">connection</name> <init pos:line="49" pos:column="48">= <expr><op:operator pos:line="49" pos:column="50">new</op:operator> <call><name pos:line="49" pos:column="54">NetworkConnection</name><argument_list pos:line="49" pos:column="71">(<argument><expr><name pos:line="49" pos:column="72">host</name></expr></argument>, <argument><expr><name pos:line="49" pos:column="78">port</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">recordReplay</name></expr>)</condition><then pos:line="50" pos:column="42">
				<expr_stmt><expr><name pos:line="51" pos:column="33">connection</name> <op:operator pos:line="51" pos:column="44">=</op:operator> <op:operator pos:line="51" pos:column="46">new</op:operator> <call><name pos:line="51" pos:column="50">ReplayRecorderConnection</name><argument_list pos:line="51" pos:column="74">(<argument><expr><name pos:line="51" pos:column="75">connection</name></expr></argument>, <argument><expr><name pos:line="51" pos:column="87">TimestampedFilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><name pos:line="53" pos:column="25">var</name></type> <name pos:line="53" pos:column="29">om</name> <init pos:line="53" pos:column="32">= <expr><op:operator pos:line="53" pos:column="34">new</op:operator> <call><name pos:line="53" pos:column="38">OrderManager</name><argument_list pos:line="53" pos:column="50">(<argument><expr><name pos:line="53" pos:column="51">host</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="57">port</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="63">password</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="73">connection</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="54" pos:column="25">JoinInner</name><argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">om</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="55" pos:column="25">return <expr><name pos:line="55" pos:column="32">om</name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="58" pos:column="17">static</specifier> <name pos:line="58" pos:column="24">string</name></type> <name pos:line="58" pos:column="31">TimestampedFilename</name><parameter_list pos:line="58" pos:column="50">()</parameter_list>
		<block pos:line="59" pos:column="17">{
			<return pos:line="60" pos:column="25">return <expr><call><name><name pos:line="60" pos:column="32">DateTime</name><op:operator pos:line="60" pos:column="40">.</op:operator><name pos:line="60" pos:column="41">UtcNow</name><op:operator pos:line="60" pos:column="47">.</op:operator><name pos:line="60" pos:column="48">ToString</name></name><argument_list pos:line="60" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="60" pos:column="57">"OpenRA-yyyy-MM-ddTHHmmssZ"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="63" pos:column="17">static</specifier> <name pos:line="63" pos:column="24">void</name></type> <name pos:line="63" pos:column="29">JoinInner</name><parameter_list pos:line="63" pos:column="38">(<param><decl><type><name pos:line="63" pos:column="39">OrderManager</name></type> <name pos:line="63" pos:column="52">om</name></decl></param>)</parameter_list>
		<block pos:line="64" pos:column="17">{
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">OrderManager</name> <op:operator pos:line="65" pos:column="42">!=</op:operator> <name pos:line="65" pos:column="45">null</name></expr>)</condition><then pos:line="65" pos:column="50"> <expr_stmt><expr><call><name><name pos:line="65" pos:column="51">OrderManager</name><op:operator pos:line="65" pos:column="63">.</op:operator><name pos:line="65" pos:column="64">Dispose</name></name><argument_list pos:line="65" pos:column="71">()</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="66" pos:column="25">OrderManager</name> <op:operator pos:line="66" pos:column="38">=</op:operator> <name pos:line="66" pos:column="40">om</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="67" pos:column="25">lastConnectionState</name> <op:operator pos:line="67" pos:column="45">=</op:operator> <name><name pos:line="67" pos:column="47">ConnectionState</name><op:operator pos:line="67" pos:column="62">.</op:operator><name pos:line="67" pos:column="63">PreConnecting</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="68" pos:column="25">ConnectionStateChanged</name><argument_list pos:line="68" pos:column="47">(<argument><expr><name pos:line="68" pos:column="48">OrderManager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="71" pos:column="17">public</specifier> <specifier pos:line="71" pos:column="24">static</specifier> <name pos:line="71" pos:column="31">void</name></type> <name pos:line="71" pos:column="36">JoinReplay</name><parameter_list pos:line="71" pos:column="46">(<param><decl><type><name pos:line="71" pos:column="47">string</name></type> <name pos:line="71" pos:column="54">replayFile</name></decl></param>)</parameter_list>
		<block pos:line="72" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="73" pos:column="25">JoinInner</name><argument_list pos:line="73" pos:column="34">(<argument><expr><op:operator pos:line="73" pos:column="35">new</op:operator> <call><name pos:line="73" pos:column="39">OrderManager</name><argument_list pos:line="73" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="52">"&lt;no server&gt;"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="73" pos:column="67">-</op:operator><lit:literal type="number" pos:line="73" pos:column="68">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="73" pos:column="71">""</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="73" pos:column="75">new</op:operator> <call><name pos:line="73" pos:column="79">ReplayConnection</name><argument_list pos:line="73" pos:column="95">(<argument><expr><name pos:line="73" pos:column="96">replayFile</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="76" pos:column="17">static</specifier> <name pos:line="76" pos:column="24">void</name></type> <name pos:line="76" pos:column="29">JoinLocal</name><parameter_list pos:line="76" pos:column="38">()</parameter_list>
		<block pos:line="77" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">JoinInner</name><argument_list pos:line="78" pos:column="34">(<argument><expr><op:operator pos:line="78" pos:column="35">new</op:operator> <call><name pos:line="78" pos:column="39">OrderManager</name><argument_list pos:line="78" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="52">"&lt;no server&gt;"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="78" pos:column="67">-</op:operator><lit:literal type="number" pos:line="78" pos:column="68">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="78" pos:column="71">""</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="78" pos:column="75">new</op:operator> <call><name pos:line="78" pos:column="79">EchoConnection</name><argument_list pos:line="78" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<comment type="line" pos:line="81" pos:column="17">// More accurate replacement for Environment.TickCount</comment>
		<decl_stmt><decl><type><specifier pos:line="82" pos:column="17">static</specifier> <name pos:line="82" pos:column="24">Stopwatch</name></type> <name pos:line="82" pos:column="34">stopwatch</name> <init pos:line="82" pos:column="44">= <expr><call><name><name pos:line="82" pos:column="46">Stopwatch</name><op:operator pos:line="82" pos:column="55">.</op:operator><name pos:line="82" pos:column="56">StartNew</name></name><argument_list pos:line="82" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="83" pos:column="17">public</specifier> <specifier pos:line="83" pos:column="24">static</specifier> <name pos:line="83" pos:column="31">int</name></type> <name pos:line="83" pos:column="35">RunTime</name> <block pos:line="83" pos:column="43">{ <function><name pos:line="83" pos:column="45">get</name> <block pos:line="83" pos:column="49">{ <return pos:line="83" pos:column="51">return <expr><op:operator pos:line="83" pos:column="58">(</op:operator><name pos:line="83" pos:column="59">int</name><op:operator pos:line="83" pos:column="62">)</op:operator><name><name pos:line="83" pos:column="63">Game</name><op:operator pos:line="83" pos:column="67">.</op:operator><name pos:line="83" pos:column="68">stopwatch</name><op:operator pos:line="83" pos:column="77">.</op:operator><name pos:line="83" pos:column="78">ElapsedMilliseconds</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="85" pos:column="17">public</specifier> <specifier pos:line="85" pos:column="24">static</specifier> <name pos:line="85" pos:column="31">int</name></type> <name pos:line="85" pos:column="35">RenderFrame</name> <init pos:line="85" pos:column="47">= <expr><lit:literal type="number" pos:line="85" pos:column="49">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="86" pos:column="17">public</specifier> <specifier pos:line="86" pos:column="24">static</specifier> <name pos:line="86" pos:column="31">int</name></type> <name pos:line="86" pos:column="35">NetFrameNumber</name> <block pos:line="86" pos:column="50">{ <function><name pos:line="86" pos:column="52">get</name> <block pos:line="86" pos:column="56">{ <return pos:line="86" pos:column="58">return <expr><name><name pos:line="86" pos:column="65">OrderManager</name><op:operator pos:line="86" pos:column="77">.</op:operator><name pos:line="86" pos:column="78">NetFrameNumber</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="87" pos:column="17">public</specifier> <specifier pos:line="87" pos:column="24">static</specifier> <name pos:line="87" pos:column="31">int</name></type> <name pos:line="87" pos:column="35">LocalTick</name> <block pos:line="87" pos:column="45">{ <function><name pos:line="87" pos:column="47">get</name> <block pos:line="87" pos:column="51">{ <return pos:line="87" pos:column="53">return <expr><name><name pos:line="87" pos:column="60">OrderManager</name><op:operator pos:line="87" pos:column="72">.</op:operator><name pos:line="87" pos:column="73">LocalFrameNumber</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="89" pos:column="17">public</specifier> <specifier pos:line="89" pos:column="24">static</specifier> <specifier pos:line="89" pos:column="31">event</specifier> <name><name pos:line="89" pos:column="37">Action</name><argument_list pos:line="89" pos:column="43">&lt;<argument><name pos:line="89" pos:column="44">string</name></argument>, <argument><name pos:line="89" pos:column="52">int</name></argument>&gt;</argument_list></name></type> <name pos:line="89" pos:column="57">OnRemoteDirectConnect</name> <init pos:line="89" pos:column="79">= <expr><lambda><parameter_list pos:line="89" pos:column="81">(<param><decl><name pos:line="89" pos:column="82">a</name></decl></param>, <param><decl><name pos:line="89" pos:column="85">b</name></decl></param>)</parameter_list> <op:operator pos:line="89" pos:column="88">=&gt;</op:operator> <block pos:line="89" pos:column="91">{ }</block></lambda></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="90" pos:column="17">public</specifier> <specifier pos:line="90" pos:column="24">static</specifier> <specifier pos:line="90" pos:column="31">event</specifier> <name><name pos:line="90" pos:column="37">Action</name><argument_list pos:line="90" pos:column="43">&lt;<argument><name pos:line="90" pos:column="44">OrderManager</name></argument>&gt;</argument_list></name></type> <name pos:line="90" pos:column="58">ConnectionStateChanged</name> <init pos:line="90" pos:column="81">= <expr><lambda><name pos:line="90" pos:column="83">_</name> <op:operator pos:line="90" pos:column="85">=&gt;</op:operator> <block pos:line="90" pos:column="88">{ }</block></lambda></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="91" pos:column="17">static</specifier> <name pos:line="91" pos:column="24">ConnectionState</name></type> <name pos:line="91" pos:column="40">lastConnectionState</name> <init pos:line="91" pos:column="60">= <expr><name><name pos:line="91" pos:column="62">ConnectionState</name><op:operator pos:line="91" pos:column="77">.</op:operator><name pos:line="91" pos:column="78">PreConnecting</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="92" pos:column="17">public</specifier> <specifier pos:line="92" pos:column="24">static</specifier> <name pos:line="92" pos:column="31">int</name></type> <name pos:line="92" pos:column="35">LocalClientId</name> <block pos:line="92" pos:column="49">{ <function><name pos:line="92" pos:column="51">get</name> <block pos:line="92" pos:column="55">{ <return pos:line="92" pos:column="57">return <expr><name><name pos:line="92" pos:column="64">OrderManager</name><op:operator pos:line="92" pos:column="76">.</op:operator><name pos:line="92" pos:column="77">Connection</name><op:operator pos:line="92" pos:column="87">.</op:operator><name pos:line="92" pos:column="88">LocalClientId</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>

		<function><type><specifier pos:line="94" pos:column="17">public</specifier> <specifier pos:line="94" pos:column="24">static</specifier> <name pos:line="94" pos:column="31">void</name></type> <name pos:line="94" pos:column="36">RemoteDirectConnect</name><parameter_list pos:line="94" pos:column="55">(<param><decl><type><name pos:line="94" pos:column="56">string</name></type> <name pos:line="94" pos:column="63">host</name></decl></param>, <param><decl><type><name pos:line="94" pos:column="69">int</name></type> <name pos:line="94" pos:column="73">port</name></decl></param>)</parameter_list>
		<block pos:line="95" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="96" pos:column="25">OnRemoteDirectConnect</name><argument_list pos:line="96" pos:column="46">(<argument><expr><name pos:line="96" pos:column="47">host</name></expr></argument>, <argument><expr><name pos:line="96" pos:column="53">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<comment type="line" pos:line="99" pos:column="17">// Hacky workaround for orderManager visibility</comment>
		<function><type><specifier pos:line="100" pos:column="17">public</specifier> <specifier pos:line="100" pos:column="24">static</specifier> <name pos:line="100" pos:column="31">Widget</name></type> <name pos:line="100" pos:column="38">OpenWindow</name><parameter_list pos:line="100" pos:column="48">(<param><decl><type><name pos:line="100" pos:column="49">World</name></type> <name pos:line="100" pos:column="55">world</name></decl></param>, <param><decl><type><name pos:line="100" pos:column="62">string</name></type> <name pos:line="100" pos:column="69">widget</name></decl></param>)</parameter_list>
		<block pos:line="101" pos:column="17">{
			<return pos:line="102" pos:column="25">return <expr><call><name><name pos:line="102" pos:column="32">Ui</name><op:operator pos:line="102" pos:column="34">.</op:operator><name pos:line="102" pos:column="35">OpenWindow</name></name><argument_list pos:line="102" pos:column="45">(<argument><expr><name pos:line="102" pos:column="46">widget</name></expr></argument>, <argument><expr><op:operator pos:line="102" pos:column="54">new</op:operator> <call><name pos:line="102" pos:column="58">WidgetArgs</name><argument_list pos:line="102" pos:column="68">()</argument_list></call> <block pos:line="102" pos:column="71">{ <expr><block pos:line="102" pos:column="73">{ <expr><lit:literal type="string" pos:line="102" pos:column="75">"world"</lit:literal></expr><op:operator pos:line="102" pos:column="82">,</op:operator> <expr><name pos:line="102" pos:column="84">world</name></expr> }</block></expr><op:operator pos:line="102" pos:column="91">,</op:operator> <expr><block pos:line="102" pos:column="93">{ <expr><lit:literal type="string" pos:line="102" pos:column="95">"orderManager"</lit:literal></expr><op:operator pos:line="102" pos:column="109">,</op:operator> <expr><name pos:line="102" pos:column="111">OrderManager</name></expr> }</block></expr><op:operator pos:line="102" pos:column="125">,</op:operator> <expr><block pos:line="102" pos:column="127">{ <expr><lit:literal type="string" pos:line="102" pos:column="129">"worldRenderer"</lit:literal></expr><op:operator pos:line="102" pos:column="144">,</op:operator> <expr><name pos:line="102" pos:column="146">worldRenderer</name></expr> }</block></expr> }</block></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<comment type="line" pos:line="105" pos:column="17">// Who came up with the great idea of making these things</comment>
		<comment type="line" pos:line="106" pos:column="17">// impossible for the things that want them to access them directly?</comment>
		<function><type><specifier pos:line="107" pos:column="17">public</specifier> <specifier pos:line="107" pos:column="24">static</specifier> <name pos:line="107" pos:column="31">Widget</name></type> <name pos:line="107" pos:column="38">OpenWindow</name><parameter_list pos:line="107" pos:column="48">(<param><decl><type><name pos:line="107" pos:column="49">string</name></type> <name pos:line="107" pos:column="56">widget</name></decl></param>, <param><decl><type><name pos:line="107" pos:column="64">WidgetArgs</name></type> <name pos:line="107" pos:column="75">args</name></decl></param>)</parameter_list>
		<block pos:line="108" pos:column="17">{
			<return pos:line="109" pos:column="25">return <expr><call><name><name pos:line="109" pos:column="32">Ui</name><op:operator pos:line="109" pos:column="34">.</op:operator><name pos:line="109" pos:column="35">OpenWindow</name></name><argument_list pos:line="109" pos:column="45">(<argument><expr><name pos:line="109" pos:column="46">widget</name></expr></argument>, <argument><expr><op:operator pos:line="109" pos:column="54">new</op:operator> <call><name pos:line="109" pos:column="58">WidgetArgs</name><argument_list pos:line="109" pos:column="68">(<argument><expr><name pos:line="109" pos:column="69">args</name></expr></argument>)</argument_list></call>
			<block pos:line="110" pos:column="25">{
				<expr><block pos:line="111" pos:column="33">{ <expr><lit:literal type="string" pos:line="111" pos:column="35">"world"</lit:literal></expr><op:operator pos:line="111" pos:column="42">,</op:operator> <expr><name><name pos:line="111" pos:column="44">worldRenderer</name><op:operator pos:line="111" pos:column="57">.</op:operator><name pos:line="111" pos:column="58">World</name></name></expr> }</block></expr><op:operator pos:line="111" pos:column="65">,</op:operator>
				<expr><block pos:line="112" pos:column="33">{ <expr><lit:literal type="string" pos:line="112" pos:column="35">"orderManager"</lit:literal></expr><op:operator pos:line="112" pos:column="49">,</op:operator> <expr><name pos:line="112" pos:column="51">OrderManager</name></expr> }</block></expr><op:operator pos:line="112" pos:column="65">,</op:operator>
				<expr><block pos:line="113" pos:column="33">{ <expr><lit:literal type="string" pos:line="113" pos:column="35">"worldRenderer"</lit:literal></expr><op:operator pos:line="113" pos:column="50">,</op:operator> <expr><name pos:line="113" pos:column="52">worldRenderer</name></expr> }</block></expr><op:operator pos:line="113" pos:column="67">,</op:operator>
			}</block></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<comment type="line" pos:line="117" pos:column="17">// Load a widget with world, orderManager, worldRenderer args, without adding it to the widget tree</comment>
		<function><type><specifier pos:line="118" pos:column="17">public</specifier> <specifier pos:line="118" pos:column="24">static</specifier> <name pos:line="118" pos:column="31">Widget</name></type> <name pos:line="118" pos:column="38">LoadWidget</name><parameter_list pos:line="118" pos:column="48">(<param><decl><type><name pos:line="118" pos:column="49">World</name></type> <name pos:line="118" pos:column="55">world</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="62">string</name></type> <name pos:line="118" pos:column="69">id</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="73">Widget</name></type> <name pos:line="118" pos:column="80">parent</name></decl></param>, <param><decl><type><name pos:line="118" pos:column="88">WidgetArgs</name></type> <name pos:line="118" pos:column="99">args</name></decl></param>)</parameter_list>
		<block pos:line="119" pos:column="17">{
			<return pos:line="120" pos:column="25">return <expr><call><name><name pos:line="120" pos:column="32">ModData</name><op:operator pos:line="120" pos:column="39">.</op:operator><name pos:line="120" pos:column="40">WidgetLoader</name><op:operator pos:line="120" pos:column="52">.</op:operator><name pos:line="120" pos:column="53">LoadWidget</name></name><argument_list pos:line="120" pos:column="63">(<argument><expr><op:operator pos:line="120" pos:column="64">new</op:operator> <call><name pos:line="120" pos:column="68">WidgetArgs</name><argument_list pos:line="120" pos:column="78">(<argument><expr><name pos:line="120" pos:column="79">args</name></expr></argument>)</argument_list></call>
			<block pos:line="121" pos:column="25">{
				<expr><block pos:line="122" pos:column="33">{ <expr><lit:literal type="string" pos:line="122" pos:column="35">"world"</lit:literal></expr><op:operator pos:line="122" pos:column="42">,</op:operator> <expr><name pos:line="122" pos:column="44">world</name></expr> }</block></expr><op:operator pos:line="122" pos:column="51">,</op:operator>
				<expr><block pos:line="123" pos:column="33">{ <expr><lit:literal type="string" pos:line="123" pos:column="35">"orderManager"</lit:literal></expr><op:operator pos:line="123" pos:column="49">,</op:operator> <expr><name pos:line="123" pos:column="51">OrderManager</name></expr> }</block></expr><op:operator pos:line="123" pos:column="65">,</op:operator>
				<expr><block pos:line="124" pos:column="33">{ <expr><lit:literal type="string" pos:line="124" pos:column="35">"worldRenderer"</lit:literal></expr><op:operator pos:line="124" pos:column="50">,</op:operator> <expr><name pos:line="124" pos:column="52">worldRenderer</name></expr> }</block></expr><op:operator pos:line="124" pos:column="67">,</op:operator>
			}</block></expr></argument>, <argument><expr><name pos:line="125" pos:column="28">parent</name></expr></argument>, <argument><expr><name pos:line="125" pos:column="36">id</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="128" pos:column="17">public</specifier> <specifier pos:line="128" pos:column="24">static</specifier> <specifier pos:line="128" pos:column="31">event</specifier> <name pos:line="128" pos:column="37">Action</name></type> <name pos:line="128" pos:column="44">LobbyInfoChanged</name> <init pos:line="128" pos:column="61">= <expr><lambda><parameter_list pos:line="128" pos:column="63">()</parameter_list> <op:operator pos:line="128" pos:column="66">=&gt;</op:operator> <block pos:line="128" pos:column="69">{ }</block></lambda></expr></init></decl>;</decl_stmt>

		<function><type><specifier pos:line="130" pos:column="17">internal</specifier> <specifier pos:line="130" pos:column="26">static</specifier> <name pos:line="130" pos:column="33">void</name></type> <name pos:line="130" pos:column="38">SyncLobbyInfo</name><parameter_list pos:line="130" pos:column="51">()</parameter_list>
		<block pos:line="131" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="132" pos:column="25">LobbyInfoChanged</name><argument_list pos:line="132" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="135" pos:column="17">public</specifier> <specifier pos:line="135" pos:column="24">static</specifier> <specifier pos:line="135" pos:column="31">event</specifier> <name pos:line="135" pos:column="37">Action</name></type> <name pos:line="135" pos:column="44">BeforeGameStart</name> <init pos:line="135" pos:column="60">= <expr><lambda><parameter_list pos:line="135" pos:column="62">()</parameter_list> <op:operator pos:line="135" pos:column="65">=&gt;</op:operator> <block pos:line="135" pos:column="68">{ }</block></lambda></expr></init></decl>;</decl_stmt>
		<function><type><specifier pos:line="136" pos:column="17">internal</specifier> <specifier pos:line="136" pos:column="26">static</specifier> <name pos:line="136" pos:column="33">void</name></type> <name pos:line="136" pos:column="38">StartGame</name><parameter_list pos:line="136" pos:column="47">(<param><decl><type><name pos:line="136" pos:column="48">string</name></type> <name pos:line="136" pos:column="55">mapUID</name></decl></param>, <param><decl><type><name pos:line="136" pos:column="63">WorldType</name></type> <name pos:line="136" pos:column="73">type</name></decl></param>)</parameter_list>
		<block pos:line="137" pos:column="17">{
			<comment type="line" pos:line="138" pos:column="25">// Dispose of the old world before creating a new one.</comment>
			<if pos:line="139" pos:column="25">if <condition pos:line="139" pos:column="28">(<expr><name pos:line="139" pos:column="29">worldRenderer</name> <op:operator pos:line="139" pos:column="43">!=</op:operator> <name pos:line="139" pos:column="46">null</name></expr>)</condition><then pos:line="139" pos:column="51">
				<expr_stmt><expr><call><name><name pos:line="140" pos:column="33">worldRenderer</name><op:operator pos:line="140" pos:column="46">.</op:operator><name pos:line="140" pos:column="47">Dispose</name></name><argument_list pos:line="140" pos:column="54">()</argument_list></call></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="142" pos:column="25">Cursor</name><op:operator pos:line="142" pos:column="31">.</op:operator><name pos:line="142" pos:column="32">SetCursor</name></name><argument_list pos:line="142" pos:column="41">(<argument><expr><name pos:line="142" pos:column="42">null</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="143" pos:column="25">BeforeGameStart</name><argument_list pos:line="143" pos:column="40">()</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="145" pos:column="25">Map</name></type> <name pos:line="145" pos:column="29">map</name></decl>;</decl_stmt>

			<using pos:line="147" pos:column="25">using (<expr><op:operator pos:line="147" pos:column="32">new</op:operator> <call><name pos:line="147" pos:column="36">PerfTimer</name><argument_list pos:line="147" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="147" pos:column="46">"PrepareMap"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<expr_stmt><expr><name pos:line="148" pos:column="33">map</name> <op:operator pos:line="148" pos:column="37">=</op:operator> <call><name><name pos:line="148" pos:column="39">ModData</name><op:operator pos:line="148" pos:column="46">.</op:operator><name pos:line="148" pos:column="47">PrepareMap</name></name><argument_list pos:line="148" pos:column="57">(<argument><expr><name pos:line="148" pos:column="58">mapUID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>
			<using pos:line="149" pos:column="25">using (<expr><op:operator pos:line="149" pos:column="32">new</op:operator> <call><name pos:line="149" pos:column="36">PerfTimer</name><argument_list pos:line="149" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="149" pos:column="46">"NewWorld"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<expr_stmt><expr><name><name pos:line="150" pos:column="33">OrderManager</name><op:operator pos:line="150" pos:column="45">.</op:operator><name pos:line="150" pos:column="46">World</name></name> <op:operator pos:line="150" pos:column="52">=</op:operator> <op:operator pos:line="150" pos:column="54">new</op:operator> <call><name pos:line="150" pos:column="58">World</name><argument_list pos:line="150" pos:column="63">(<argument><expr><name pos:line="150" pos:column="64">map</name></expr></argument>, <argument><expr><name pos:line="150" pos:column="69">OrderManager</name></expr></argument>, <argument><expr><name pos:line="150" pos:column="83">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>

			<expr_stmt><expr><name pos:line="152" pos:column="25">worldRenderer</name> <op:operator pos:line="152" pos:column="39">=</op:operator> <op:operator pos:line="152" pos:column="41">new</op:operator> <call><name pos:line="152" pos:column="45">WorldRenderer</name><argument_list pos:line="152" pos:column="58">(<argument><expr><name><name pos:line="152" pos:column="59">OrderManager</name><op:operator pos:line="152" pos:column="71">.</op:operator><name pos:line="152" pos:column="72">World</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<using pos:line="154" pos:column="25">using (<expr><op:operator pos:line="154" pos:column="32">new</op:operator> <call><name pos:line="154" pos:column="36">PerfTimer</name><argument_list pos:line="154" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="154" pos:column="46">"LoadComplete"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<expr_stmt><expr><call><name><name pos:line="155" pos:column="33">OrderManager</name><op:operator pos:line="155" pos:column="45">.</op:operator><name pos:line="155" pos:column="46">World</name><op:operator pos:line="155" pos:column="51">.</op:operator><name pos:line="155" pos:column="52">LoadComplete</name></name><argument_list pos:line="155" pos:column="64">(<argument><expr><name pos:line="155" pos:column="65">worldRenderer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>

			<if pos:line="157" pos:column="25">if <condition pos:line="157" pos:column="28">(<expr><name><name pos:line="157" pos:column="29">OrderManager</name><op:operator pos:line="157" pos:column="41">.</op:operator><name pos:line="157" pos:column="42">GameStarted</name></name></expr>)</condition><then pos:line="157" pos:column="54">
				<return pos:line="158" pos:column="33">return;</return></then></if>

			<expr_stmt><expr><name><name pos:line="160" pos:column="25">Ui</name><op:operator pos:line="160" pos:column="27">.</op:operator><name pos:line="160" pos:column="28">MouseFocusWidget</name></name> <op:operator pos:line="160" pos:column="45">=</op:operator> <name pos:line="160" pos:column="47">null</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="161" pos:column="25">Ui</name><op:operator pos:line="161" pos:column="27">.</op:operator><name pos:line="161" pos:column="28">KeyboardFocusWidget</name></name> <op:operator pos:line="161" pos:column="48">=</op:operator> <name pos:line="161" pos:column="50">null</name></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="163" pos:column="25">OrderManager</name><op:operator pos:line="163" pos:column="37">.</op:operator><name pos:line="163" pos:column="38">LocalFrameNumber</name></name> <op:operator pos:line="163" pos:column="55">=</op:operator> <lit:literal type="number" pos:line="163" pos:column="57">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="164" pos:column="25">OrderManager</name><op:operator pos:line="164" pos:column="37">.</op:operator><name pos:line="164" pos:column="38">LastTickTime</name></name> <op:operator pos:line="164" pos:column="51">=</op:operator> <name pos:line="164" pos:column="53">RunTime</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="165" pos:column="25">OrderManager</name><op:operator pos:line="165" pos:column="37">.</op:operator><name pos:line="165" pos:column="38">StartGame</name></name><argument_list pos:line="165" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="166" pos:column="25">worldRenderer</name><op:operator pos:line="166" pos:column="38">.</op:operator><name pos:line="166" pos:column="39">RefreshPalette</name></name><argument_list pos:line="166" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="167" pos:column="25">Cursor</name><op:operator pos:line="167" pos:column="31">.</op:operator><name pos:line="167" pos:column="32">SetCursor</name></name><argument_list pos:line="167" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="167" pos:column="42">"default"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="169" pos:column="25">GC</name><op:operator pos:line="169" pos:column="27">.</op:operator><name pos:line="169" pos:column="28">Collect</name></name><argument_list pos:line="169" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="172" pos:column="17">public</specifier> <specifier pos:line="172" pos:column="24">static</specifier> <name pos:line="172" pos:column="31">bool</name></type> <name pos:line="172" pos:column="36">IsHost</name>
		<block pos:line="173" pos:column="17">{
			<function><name pos:line="174" pos:column="25">get</name>
			<block pos:line="175" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="176" pos:column="33">var</name></type> <name pos:line="176" pos:column="37">id</name> <init pos:line="176" pos:column="40">= <expr><name><name pos:line="176" pos:column="42">OrderManager</name><op:operator pos:line="176" pos:column="54">.</op:operator><name pos:line="176" pos:column="55">Connection</name><op:operator pos:line="176" pos:column="65">.</op:operator><name pos:line="176" pos:column="66">LocalClientId</name></name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="177" pos:column="33">var</name></type> <name pos:line="177" pos:column="37">client</name> <init pos:line="177" pos:column="44">= <expr><call><name><name pos:line="177" pos:column="46">OrderManager</name><op:operator pos:line="177" pos:column="58">.</op:operator><name pos:line="177" pos:column="59">LobbyInfo</name><op:operator pos:line="177" pos:column="68">.</op:operator><name pos:line="177" pos:column="69">ClientWithIndex</name></name><argument_list pos:line="177" pos:column="84">(<argument><expr><name pos:line="177" pos:column="85">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<return pos:line="178" pos:column="33">return <expr><name pos:line="178" pos:column="40">client</name> <op:operator pos:line="178" pos:column="47">!=</op:operator> <name pos:line="178" pos:column="50">null</name> <op:operator pos:line="178" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="178" pos:column="58">client</name><op:operator pos:line="178" pos:column="64">.</op:operator><name pos:line="178" pos:column="65">IsAdmin</name></name></expr>;</return>
			}</block></function>
		}</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="182" pos:column="17">static</specifier> <name pos:line="182" pos:column="24">Modifiers</name></type> <name pos:line="182" pos:column="34">modifiers</name></decl>;</decl_stmt>
		<function><type><specifier pos:line="183" pos:column="17">public</specifier> <specifier pos:line="183" pos:column="24">static</specifier> <name pos:line="183" pos:column="31">Modifiers</name></type> <name pos:line="183" pos:column="41">GetModifierKeys</name><parameter_list pos:line="183" pos:column="56">()</parameter_list> <block pos:line="183" pos:column="59">{ <return pos:line="183" pos:column="61">return <expr><name pos:line="183" pos:column="68">modifiers</name></expr>;</return> }</block></function>
		<function><type><specifier pos:line="184" pos:column="17">internal</specifier> <specifier pos:line="184" pos:column="26">static</specifier> <name pos:line="184" pos:column="33">void</name></type> <name pos:line="184" pos:column="38">HandleModifierKeys</name><parameter_list pos:line="184" pos:column="56">(<param><decl><type><name pos:line="184" pos:column="57">Modifiers</name></type> <name pos:line="184" pos:column="67">mods</name></decl></param>)</parameter_list> <block pos:line="184" pos:column="73">{ <expr_stmt><expr><name pos:line="184" pos:column="75">modifiers</name> <op:operator pos:line="184" pos:column="85">=</op:operator> <name pos:line="184" pos:column="87">mods</name></expr>;</expr_stmt> }</block></function>

		<function><type><specifier pos:line="186" pos:column="17">public</specifier> <specifier pos:line="186" pos:column="24">static</specifier> <name pos:line="186" pos:column="31">void</name></type> <name pos:line="186" pos:column="36">InitializeSettings</name><parameter_list pos:line="186" pos:column="54">(<param><decl><type><name pos:line="186" pos:column="55">Arguments</name></type> <name pos:line="186" pos:column="65">args</name></decl></param>)</parameter_list>
		<block pos:line="187" pos:column="17">{
			<expr_stmt><expr><name pos:line="188" pos:column="25">Settings</name> <op:operator pos:line="188" pos:column="34">=</op:operator> <op:operator pos:line="188" pos:column="36">new</op:operator> <call><name pos:line="188" pos:column="40">Settings</name><argument_list pos:line="188" pos:column="48">(<argument><expr><call><name><name pos:line="188" pos:column="49">Platform</name><op:operator pos:line="188" pos:column="57">.</op:operator><name pos:line="188" pos:column="58">ResolvePath</name></name><argument_list pos:line="188" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="188" pos:column="70">"^"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="188" pos:column="75">"settings.yaml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="188" pos:column="93">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="191" pos:column="17">internal</specifier> <specifier pos:line="191" pos:column="26">static</specifier> <name pos:line="191" pos:column="33">void</name></type> <name pos:line="191" pos:column="38">Initialize</name><parameter_list pos:line="191" pos:column="48">(<param><decl><type><name pos:line="191" pos:column="49">Arguments</name></type> <name pos:line="191" pos:column="59">args</name></decl></param>)</parameter_list>
		<block pos:line="192" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="193" pos:column="25">Console</name><op:operator pos:line="193" pos:column="32">.</op:operator><name pos:line="193" pos:column="33">WriteLine</name></name><argument_list pos:line="193" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="193" pos:column="43">"Platform is {0}"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="193" pos:column="62">Platform</name><op:operator pos:line="193" pos:column="70">.</op:operator><name pos:line="193" pos:column="71">CurrentPlatform</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="195" pos:column="25">AppDomain</name><op:operator pos:line="195" pos:column="34">.</op:operator><name pos:line="195" pos:column="35">CurrentDomain</name><op:operator pos:line="195" pos:column="48">.</op:operator><name pos:line="195" pos:column="49">AssemblyResolve</name></name> <op:operator pos:line="195" pos:column="65">+=</op:operator> <name><name pos:line="195" pos:column="68">GlobalFileSystem</name><op:operator pos:line="195" pos:column="84">.</op:operator><name pos:line="195" pos:column="85">ResolveAssembly</name></name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="197" pos:column="25">InitializeSettings</name><argument_list pos:line="197" pos:column="43">(<argument><expr><name pos:line="197" pos:column="44">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="199" pos:column="25">Log</name><op:operator pos:line="199" pos:column="28">.</op:operator><name pos:line="199" pos:column="29">AddChannel</name></name><argument_list pos:line="199" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="199" pos:column="40">"perf"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="199" pos:column="48">"perf.log"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="200" pos:column="25">Log</name><op:operator pos:line="200" pos:column="28">.</op:operator><name pos:line="200" pos:column="29">AddChannel</name></name><argument_list pos:line="200" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="200" pos:column="40">"debug"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="200" pos:column="49">"debug.log"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="201" pos:column="25">Log</name><op:operator pos:line="201" pos:column="28">.</op:operator><name pos:line="201" pos:column="29">AddChannel</name></name><argument_list pos:line="201" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="201" pos:column="40">"sync"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="201" pos:column="48">"syncreport.log"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="202" pos:column="25">Log</name><op:operator pos:line="202" pos:column="28">.</op:operator><name pos:line="202" pos:column="29">AddChannel</name></name><argument_list pos:line="202" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="202" pos:column="40">"server"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="202" pos:column="50">"server.log"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="203" pos:column="25">Log</name><op:operator pos:line="203" pos:column="28">.</op:operator><name pos:line="203" pos:column="29">AddChannel</name></name><argument_list pos:line="203" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="203" pos:column="40">"sound"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="203" pos:column="49">"sound.log"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="204" pos:column="25">Log</name><op:operator pos:line="204" pos:column="28">.</op:operator><name pos:line="204" pos:column="29">AddChannel</name></name><argument_list pos:line="204" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="204" pos:column="40">"graphics"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="204" pos:column="52">"graphics.log"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="205" pos:column="25">Log</name><op:operator pos:line="205" pos:column="28">.</op:operator><name pos:line="205" pos:column="29">AddChannel</name></name><argument_list pos:line="205" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="205" pos:column="40">"geoip"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="205" pos:column="49">"geoip.log"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="207" pos:column="25">if <condition pos:line="207" pos:column="28">(<expr><name><name pos:line="207" pos:column="29">Settings</name><op:operator pos:line="207" pos:column="37">.</op:operator><name pos:line="207" pos:column="38">Server</name><op:operator pos:line="207" pos:column="44">.</op:operator><name pos:line="207" pos:column="45">DiscoverNatDevices</name></name></expr>)</condition><then pos:line="207" pos:column="64">
				<expr_stmt><expr><call><name><name pos:line="208" pos:column="33">UPnP</name><op:operator pos:line="208" pos:column="37">.</op:operator><name pos:line="208" pos:column="38">TryNatDiscovery</name></name><argument_list pos:line="208" pos:column="53">()</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="209" pos:column="25">else
			<block pos:line="210" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="211" pos:column="33">Settings</name><op:operator pos:line="211" pos:column="41">.</op:operator><name pos:line="211" pos:column="42">Server</name><op:operator pos:line="211" pos:column="48">.</op:operator><name pos:line="211" pos:column="49">NatDeviceAvailable</name></name> <op:operator pos:line="211" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="211" pos:column="70">false</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="212" pos:column="33">Settings</name><op:operator pos:line="212" pos:column="41">.</op:operator><name pos:line="212" pos:column="42">Server</name><op:operator pos:line="212" pos:column="48">.</op:operator><name pos:line="212" pos:column="49">AllowPortForward</name></name> <op:operator pos:line="212" pos:column="66">=</op:operator> <lit:literal type="boolean" pos:line="212" pos:column="68">false</lit:literal></expr>;</expr_stmt>
			}</block></else></if>

			<expr_stmt><expr><call><name><name pos:line="215" pos:column="25">GeoIP</name><op:operator pos:line="215" pos:column="30">.</op:operator><name pos:line="215" pos:column="31">Initialize</name></name><argument_list pos:line="215" pos:column="41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="217" pos:column="25">GlobalFileSystem</name><op:operator pos:line="217" pos:column="41">.</op:operator><name pos:line="217" pos:column="42">Mount</name></name><argument_list pos:line="217" pos:column="47">(<argument><expr><name><name pos:line="217" pos:column="48">Platform</name><op:operator pos:line="217" pos:column="56">.</op:operator><name pos:line="217" pos:column="57">GameDir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="217" pos:column="67">// Needed to access shaders</comment>
			<decl_stmt><decl><type><name pos:line="218" pos:column="25">var</name></type> <name pos:line="218" pos:column="29">renderers</name> <init pos:line="218" pos:column="39">= <expr><op:operator pos:line="218" pos:column="41">new</op:operator><index pos:line="218" pos:column="44">[]</index> <block pos:line="218" pos:column="47">{ <expr><name><name pos:line="218" pos:column="49">Settings</name><op:operator pos:line="218" pos:column="57">.</op:operator><name pos:line="218" pos:column="58">Graphics</name><op:operator pos:line="218" pos:column="66">.</op:operator><name pos:line="218" pos:column="67">Renderer</name></name></expr>, <expr><lit:literal type="string" pos:line="218" pos:column="77">"Default"</lit:literal></expr>, <expr><name pos:line="218" pos:column="88">null</name></expr> }</block></expr></init></decl>;</decl_stmt>
			<foreach pos:line="219" pos:column="25">foreach (<init><decl><type><name pos:line="219" pos:column="34">var</name></type> <name pos:line="219" pos:column="38">r</name> <range pos:line="219" pos:column="40">in <expr><name pos:line="219" pos:column="43">renderers</name></expr></range></decl></init>)
			<block pos:line="220" pos:column="25">{
				<if pos:line="221" pos:column="33">if <condition pos:line="221" pos:column="36">(<expr><name pos:line="221" pos:column="37">r</name> <op:operator pos:line="221" pos:column="39">==</op:operator> <name pos:line="221" pos:column="42">null</name></expr>)</condition><then pos:line="221" pos:column="47">
					<throw pos:line="222" pos:column="41">throw <expr><op:operator pos:line="222" pos:column="47">new</op:operator> <call><name pos:line="222" pos:column="51">InvalidOperationException</name><argument_list pos:line="222" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="222" pos:column="77">"No suitable renderers were found. Check graphics.log for details."</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

				<expr_stmt><expr><name><name pos:line="224" pos:column="33">Settings</name><op:operator pos:line="224" pos:column="41">.</op:operator><name pos:line="224" pos:column="42">Graphics</name><op:operator pos:line="224" pos:column="50">.</op:operator><name pos:line="224" pos:column="51">Renderer</name></name> <op:operator pos:line="224" pos:column="60">=</op:operator> <name pos:line="224" pos:column="62">r</name></expr>;</expr_stmt>
				<try pos:line="225" pos:column="33">try
				<block pos:line="226" pos:column="33">{
					<expr_stmt><expr><name pos:line="227" pos:column="41">Renderer</name> <op:operator pos:line="227" pos:column="50">=</op:operator> <op:operator pos:line="227" pos:column="52">new</op:operator> <call><name pos:line="227" pos:column="56">Renderer</name><argument_list pos:line="227" pos:column="64">(<argument><expr><name><name pos:line="227" pos:column="65">Settings</name><op:operator pos:line="227" pos:column="73">.</op:operator><name pos:line="227" pos:column="74">Graphics</name></name></expr></argument>, <argument><expr><name><name pos:line="227" pos:column="84">Settings</name><op:operator pos:line="227" pos:column="92">.</op:operator><name pos:line="227" pos:column="93">Server</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="228" pos:column="41">break;</break>
				}</block>
				<catch pos:line="230" pos:column="33">catch <parameter_list pos:line="230" pos:column="39">(<param><decl><type><name pos:line="230" pos:column="40">Exception</name></type> <name pos:line="230" pos:column="50">e</name></decl></param>)</parameter_list>
				<block pos:line="231" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="232" pos:column="41">Log</name><op:operator pos:line="232" pos:column="44">.</op:operator><name pos:line="232" pos:column="45">Write</name></name><argument_list pos:line="232" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="232" pos:column="51">"graphics"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="232" pos:column="63">"{0}"</lit:literal></expr></argument>, <argument><expr><name pos:line="232" pos:column="70">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="233" pos:column="41">Console</name><op:operator pos:line="233" pos:column="48">.</op:operator><name pos:line="233" pos:column="49">WriteLine</name></name><argument_list pos:line="233" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="59">"Renderer initialization failed. Fallback in place. Check graphics.log for details."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></foreach>

			<expr_stmt><expr><call><name><name pos:line="237" pos:column="25">Sound</name><op:operator pos:line="237" pos:column="30">.</op:operator><name pos:line="237" pos:column="31">Create</name></name><argument_list pos:line="237" pos:column="37">(<argument><expr><name><name pos:line="237" pos:column="38">Settings</name><op:operator pos:line="237" pos:column="46">.</op:operator><name pos:line="237" pos:column="47">Server</name><op:operator pos:line="237" pos:column="53">.</op:operator><name pos:line="237" pos:column="54">Dedicated</name> <type:modifier pos:line="237" pos:column="64">?</type:modifier></name> <lit:literal type="string" pos:line="237" pos:column="66">"Null"</lit:literal> <op:operator pos:line="237" pos:column="73">:</op:operator> <name><name pos:line="237" pos:column="75">Settings</name><op:operator pos:line="237" pos:column="83">.</op:operator><name pos:line="237" pos:column="84">Sound</name><op:operator pos:line="237" pos:column="89">.</op:operator><name pos:line="237" pos:column="90">Engine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="239" pos:column="25">Console</name><op:operator pos:line="239" pos:column="32">.</op:operator><name pos:line="239" pos:column="33">WriteLine</name></name><argument_list pos:line="239" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="239" pos:column="43">"Available mods:"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<foreach pos:line="240" pos:column="25">foreach (<init><decl><type><name pos:line="240" pos:column="34">var</name></type> <name pos:line="240" pos:column="38">mod</name> <range pos:line="240" pos:column="42">in <expr><name><name pos:line="240" pos:column="45">ModMetadata</name><op:operator pos:line="240" pos:column="56">.</op:operator><name pos:line="240" pos:column="57">AllMods</name></name></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="241" pos:column="33">Console</name><op:operator pos:line="241" pos:column="40">.</op:operator><name pos:line="241" pos:column="41">WriteLine</name></name><argument_list pos:line="241" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="241" pos:column="51">"\t{0}: {1} ({2})"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="71">mod</name><op:operator pos:line="241" pos:column="74">.</op:operator><name pos:line="241" pos:column="75">Key</name></name></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="80">mod</name><op:operator pos:line="241" pos:column="83">.</op:operator><name pos:line="241" pos:column="84">Value</name><op:operator pos:line="241" pos:column="89">.</op:operator><name pos:line="241" pos:column="90">Title</name></name></expr></argument>, <argument><expr><name><name pos:line="241" pos:column="97">mod</name><op:operator pos:line="241" pos:column="100">.</op:operator><name pos:line="241" pos:column="101">Value</name><op:operator pos:line="241" pos:column="106">.</op:operator><name pos:line="241" pos:column="107">Version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>

			<expr_stmt><expr><call><name pos:line="243" pos:column="25">InitializeMod</name><argument_list pos:line="243" pos:column="38">(<argument><expr><name><name pos:line="243" pos:column="39">Settings</name><op:operator pos:line="243" pos:column="47">.</op:operator><name pos:line="243" pos:column="48">Game</name><op:operator pos:line="243" pos:column="52">.</op:operator><name pos:line="243" pos:column="53">Mod</name></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="58">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="245" pos:column="25">if <condition pos:line="245" pos:column="28">(<expr><name><name pos:line="245" pos:column="29">Settings</name><op:operator pos:line="245" pos:column="37">.</op:operator><name pos:line="245" pos:column="38">Server</name><op:operator pos:line="245" pos:column="44">.</op:operator><name pos:line="245" pos:column="45">DiscoverNatDevices</name></name></expr>)</condition><then pos:line="245" pos:column="64">
				<expr_stmt><expr><call><name pos:line="246" pos:column="33">RunAfterDelay</name><argument_list pos:line="246" pos:column="46">(<argument><expr><name><name pos:line="246" pos:column="47">Settings</name><op:operator pos:line="246" pos:column="55">.</op:operator><name pos:line="246" pos:column="56">Server</name><op:operator pos:line="246" pos:column="62">.</op:operator><name pos:line="246" pos:column="63">NatDiscoveryTimeout</name></name></expr></argument>, <argument><expr><name><name pos:line="246" pos:column="84">UPnP</name><op:operator pos:line="246" pos:column="88">.</op:operator><name pos:line="246" pos:column="89">StoppingNatDiscovery</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></function>

		<function><type><specifier pos:line="249" pos:column="17">public</specifier> <specifier pos:line="249" pos:column="24">static</specifier> <name pos:line="249" pos:column="31">void</name></type> <name pos:line="249" pos:column="36">InitializeMod</name><parameter_list pos:line="249" pos:column="49">(<param><decl><type><name pos:line="249" pos:column="50">string</name></type> <name pos:line="249" pos:column="57">mod</name></decl></param>, <param><decl><type><name pos:line="249" pos:column="62">Arguments</name></type> <name pos:line="249" pos:column="72">args</name></decl></param>)</parameter_list>
		<block pos:line="250" pos:column="17">{
			<comment type="line" pos:line="251" pos:column="25">// Clear static state if we have switched mods</comment>
			<expr_stmt><expr><name pos:line="252" pos:column="25">LobbyInfoChanged</name> <op:operator pos:line="252" pos:column="42">=</op:operator> <lambda><parameter_list pos:line="252" pos:column="44">()</parameter_list> <op:operator pos:line="252" pos:column="47">=&gt;</op:operator> <block pos:line="252" pos:column="50">{ }</block></lambda></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="253" pos:column="25">ConnectionStateChanged</name> <op:operator pos:line="253" pos:column="48">=</op:operator> <lambda><name pos:line="253" pos:column="50">om</name> <op:operator pos:line="253" pos:column="53">=&gt;</op:operator> <block pos:line="253" pos:column="56">{ }</block></lambda></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="254" pos:column="25">BeforeGameStart</name> <op:operator pos:line="254" pos:column="41">=</op:operator> <lambda><parameter_list pos:line="254" pos:column="43">()</parameter_list> <op:operator pos:line="254" pos:column="46">=&gt;</op:operator> <block pos:line="254" pos:column="49">{ }</block></lambda></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="255" pos:column="25">OnRemoteDirectConnect</name> <op:operator pos:line="255" pos:column="47">=</op:operator> <lambda><parameter_list pos:line="255" pos:column="49">(<param><decl><name pos:line="255" pos:column="50">a</name></decl></param>, <param><decl><name pos:line="255" pos:column="53">b</name></decl></param>)</parameter_list> <op:operator pos:line="255" pos:column="56">=&gt;</op:operator> <block pos:line="255" pos:column="59">{ }</block></lambda></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="256" pos:column="25">delayedActions</name> <op:operator pos:line="256" pos:column="40">=</op:operator> <op:operator pos:line="256" pos:column="42">new</op:operator> <call><name pos:line="256" pos:column="46">ActionQueue</name><argument_list pos:line="256" pos:column="57">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="258" pos:column="25">Ui</name><op:operator pos:line="258" pos:column="27">.</op:operator><name pos:line="258" pos:column="28">ResetAll</name></name><argument_list pos:line="258" pos:column="36">()</argument_list></call></expr>;</expr_stmt>

			<if pos:line="260" pos:column="25">if <condition pos:line="260" pos:column="28">(<expr><name pos:line="260" pos:column="29">worldRenderer</name> <op:operator pos:line="260" pos:column="43">!=</op:operator> <name pos:line="260" pos:column="46">null</name></expr>)</condition><then pos:line="260" pos:column="51">
				<expr_stmt><expr><call><name><name pos:line="261" pos:column="33">worldRenderer</name><op:operator pos:line="261" pos:column="46">.</op:operator><name pos:line="261" pos:column="47">Dispose</name></name><argument_list pos:line="261" pos:column="54">()</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="262" pos:column="25">worldRenderer</name> <op:operator pos:line="262" pos:column="39">=</op:operator> <name pos:line="262" pos:column="41">null</name></expr>;</expr_stmt>
			<if pos:line="263" pos:column="25">if <condition pos:line="263" pos:column="28">(<expr><name pos:line="263" pos:column="29">server</name> <op:operator pos:line="263" pos:column="36">!=</op:operator> <name pos:line="263" pos:column="39">null</name></expr>)</condition><then pos:line="263" pos:column="44">
				<expr_stmt><expr><call><name><name pos:line="264" pos:column="33">server</name><op:operator pos:line="264" pos:column="39">.</op:operator><name pos:line="264" pos:column="40">Shutdown</name></name><argument_list pos:line="264" pos:column="48">()</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="265" pos:column="25">if <condition pos:line="265" pos:column="28">(<expr><name pos:line="265" pos:column="29">OrderManager</name> <op:operator pos:line="265" pos:column="42">!=</op:operator> <name pos:line="265" pos:column="45">null</name></expr>)</condition><then pos:line="265" pos:column="50">
				<expr_stmt><expr><call><name><name pos:line="266" pos:column="33">OrderManager</name><op:operator pos:line="266" pos:column="45">.</op:operator><name pos:line="266" pos:column="46">Dispose</name></name><argument_list pos:line="266" pos:column="53">()</argument_list></call></expr>;</expr_stmt></then></if>

			<if pos:line="268" pos:column="25">if <condition pos:line="268" pos:column="28">(<expr><name pos:line="268" pos:column="29">ModData</name> <op:operator pos:line="268" pos:column="37">!=</op:operator> <name pos:line="268" pos:column="40">null</name></expr>)</condition><then pos:line="268" pos:column="45">
				<expr_stmt><expr><call><name><name pos:line="269" pos:column="33">ModData</name><op:operator pos:line="269" pos:column="40">.</op:operator><name pos:line="269" pos:column="41">Dispose</name></name><argument_list pos:line="269" pos:column="48">()</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="270" pos:column="25">ModData</name> <op:operator pos:line="270" pos:column="33">=</op:operator> <name pos:line="270" pos:column="35">null</name></expr>;</expr_stmt>

			<comment type="line" pos:line="272" pos:column="25">// Fall back to default if the mod doesn't exist</comment>
			<if pos:line="273" pos:column="25">if <condition pos:line="273" pos:column="28">(<expr><op:operator pos:line="273" pos:column="29">!</op:operator><call><name><name pos:line="273" pos:column="30">ModMetadata</name><op:operator pos:line="273" pos:column="41">.</op:operator><name pos:line="273" pos:column="42">AllMods</name><op:operator pos:line="273" pos:column="49">.</op:operator><name pos:line="273" pos:column="50">ContainsKey</name></name><argument_list pos:line="273" pos:column="61">(<argument><expr><name pos:line="273" pos:column="62">mod</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="273" pos:column="67">
				<expr_stmt><expr><name pos:line="274" pos:column="33">mod</name> <op:operator pos:line="274" pos:column="37">=</op:operator> <op:operator pos:line="274" pos:column="39">new</op:operator> <call><name pos:line="274" pos:column="43">GameSettings</name><argument_list pos:line="274" pos:column="55">()</argument_list></call><op:operator pos:line="274" pos:column="57">.</op:operator><name pos:line="274" pos:column="58">Mod</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="276" pos:column="25">Console</name><op:operator pos:line="276" pos:column="32">.</op:operator><name pos:line="276" pos:column="33">WriteLine</name></name><argument_list pos:line="276" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="276" pos:column="43">"Loading mod: {0}"</lit:literal></expr></argument>, <argument><expr><name pos:line="276" pos:column="63">mod</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="277" pos:column="25">Settings</name><op:operator pos:line="277" pos:column="33">.</op:operator><name pos:line="277" pos:column="34">Game</name><op:operator pos:line="277" pos:column="38">.</op:operator><name pos:line="277" pos:column="39">Mod</name></name> <op:operator pos:line="277" pos:column="43">=</op:operator> <name pos:line="277" pos:column="45">mod</name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="279" pos:column="25">Sound</name><op:operator pos:line="279" pos:column="30">.</op:operator><name pos:line="279" pos:column="31">StopVideo</name></name><argument_list pos:line="279" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="280" pos:column="25">Sound</name><op:operator pos:line="280" pos:column="30">.</op:operator><name pos:line="280" pos:column="31">Initialize</name></name><argument_list pos:line="280" pos:column="41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="282" pos:column="25">ModData</name> <op:operator pos:line="282" pos:column="33">=</op:operator> <op:operator pos:line="282" pos:column="35">new</op:operator> <call><name pos:line="282" pos:column="39">ModData</name><argument_list pos:line="282" pos:column="46">(<argument><expr><name pos:line="282" pos:column="47">mod</name></expr></argument>, <argument><expr><op:operator pos:line="282" pos:column="52">!</op:operator><name><name pos:line="282" pos:column="53">Settings</name><op:operator pos:line="282" pos:column="61">.</op:operator><name pos:line="282" pos:column="62">Server</name><op:operator pos:line="282" pos:column="68">.</op:operator><name pos:line="282" pos:column="69">Dedicated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="283" pos:column="25">ModData</name><op:operator pos:line="283" pos:column="32">.</op:operator><name pos:line="283" pos:column="33">InitializeLoaders</name></name><argument_list pos:line="283" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			<if pos:line="284" pos:column="25">if <condition pos:line="284" pos:column="28">(<expr><op:operator pos:line="284" pos:column="29">!</op:operator><name><name pos:line="284" pos:column="30">Settings</name><op:operator pos:line="284" pos:column="38">.</op:operator><name pos:line="284" pos:column="39">Server</name><op:operator pos:line="284" pos:column="45">.</op:operator><name pos:line="284" pos:column="46">Dedicated</name></name></expr>)</condition><then pos:line="284" pos:column="56">
				<expr_stmt><expr><call><name><name pos:line="285" pos:column="33">Renderer</name><op:operator pos:line="285" pos:column="41">.</op:operator><name pos:line="285" pos:column="42">InitializeFonts</name></name><argument_list pos:line="285" pos:column="57">(<argument><expr><name><name pos:line="285" pos:column="58">ModData</name><op:operator pos:line="285" pos:column="65">.</op:operator><name pos:line="285" pos:column="66">Manifest</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<using pos:line="287" pos:column="25">using (<expr><op:operator pos:line="287" pos:column="32">new</op:operator> <call><name pos:line="287" pos:column="36">PerfTimer</name><argument_list pos:line="287" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="287" pos:column="46">"LoadMaps"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<expr_stmt><expr><call><name><name pos:line="288" pos:column="33">ModData</name><op:operator pos:line="288" pos:column="40">.</op:operator><name pos:line="288" pos:column="41">MapCache</name><op:operator pos:line="288" pos:column="49">.</op:operator><name pos:line="288" pos:column="50">LoadMaps</name></name><argument_list pos:line="288" pos:column="58">()</argument_list></call></expr>;</expr_stmt></using>

			<if pos:line="290" pos:column="25">if <condition pos:line="290" pos:column="28">(<expr><name pos:line="290" pos:column="29">Cursor</name> <op:operator pos:line="290" pos:column="36">!=</op:operator> <name pos:line="290" pos:column="39">null</name></expr>)</condition><then pos:line="290" pos:column="44">
				<expr_stmt><expr><call><name><name pos:line="291" pos:column="33">Cursor</name><op:operator pos:line="291" pos:column="39">.</op:operator><name pos:line="291" pos:column="40">Dispose</name></name><argument_list pos:line="291" pos:column="47">()</argument_list></call></expr>;</expr_stmt></then></if>

			<if pos:line="293" pos:column="25">if <condition pos:line="293" pos:column="28">(<expr><name><name pos:line="293" pos:column="29">Settings</name><op:operator pos:line="293" pos:column="37">.</op:operator><name pos:line="293" pos:column="38">Graphics</name><op:operator pos:line="293" pos:column="46">.</op:operator><name pos:line="293" pos:column="47">HardwareCursors</name></name></expr>)</condition><then pos:line="293" pos:column="63">
			<block pos:line="294" pos:column="25">{
				<try pos:line="295" pos:column="33">try
				<block pos:line="296" pos:column="33">{
					<expr_stmt><expr><name pos:line="297" pos:column="41">Cursor</name> <op:operator pos:line="297" pos:column="48">=</op:operator> <op:operator pos:line="297" pos:column="50">new</op:operator> <call><name pos:line="297" pos:column="54">HardwareCursor</name><argument_list pos:line="297" pos:column="68">(<argument><expr><name><name pos:line="297" pos:column="69">ModData</name><op:operator pos:line="297" pos:column="76">.</op:operator><name pos:line="297" pos:column="77">CursorProvider</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block>
				<catch pos:line="299" pos:column="33">catch <parameter_list pos:line="299" pos:column="39">(<param><decl><type><name pos:line="299" pos:column="40">Exception</name></type> <name pos:line="299" pos:column="50">e</name></decl></param>)</parameter_list>
				<block pos:line="300" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="301" pos:column="41">Log</name><op:operator pos:line="301" pos:column="44">.</op:operator><name pos:line="301" pos:column="45">Write</name></name><argument_list pos:line="301" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="301" pos:column="51">"debug"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="301" pos:column="60">"Failed to initialize hardware cursors. Falling back to software cursors."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="302" pos:column="41">Log</name><op:operator pos:line="302" pos:column="44">.</op:operator><name pos:line="302" pos:column="45">Write</name></name><argument_list pos:line="302" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="51">"debug"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="302" pos:column="60">"Error was: "</lit:literal> <op:operator pos:line="302" pos:column="74">+</op:operator> <name><name pos:line="302" pos:column="76">e</name><op:operator pos:line="302" pos:column="77">.</op:operator><name pos:line="302" pos:column="78">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><name pos:line="304" pos:column="41">Console</name><op:operator pos:line="304" pos:column="48">.</op:operator><name pos:line="304" pos:column="49">WriteLine</name></name><argument_list pos:line="304" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="304" pos:column="59">"Failed to initialize hardware cursors. Falling back to software cursors."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="305" pos:column="41">Console</name><op:operator pos:line="305" pos:column="48">.</op:operator><name pos:line="305" pos:column="49">WriteLine</name></name><argument_list pos:line="305" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="305" pos:column="59">"Error was: "</lit:literal> <op:operator pos:line="305" pos:column="73">+</op:operator> <name><name pos:line="305" pos:column="75">e</name><op:operator pos:line="305" pos:column="76">.</op:operator><name pos:line="305" pos:column="77">Message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name pos:line="307" pos:column="41">Cursor</name> <op:operator pos:line="307" pos:column="48">=</op:operator> <op:operator pos:line="307" pos:column="50">new</op:operator> <call><name pos:line="307" pos:column="54">SoftwareCursor</name><argument_list pos:line="307" pos:column="68">(<argument><expr><name><name pos:line="307" pos:column="69">ModData</name><op:operator pos:line="307" pos:column="76">.</op:operator><name pos:line="307" pos:column="77">CursorProvider</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="308" pos:column="41">Settings</name><op:operator pos:line="308" pos:column="49">.</op:operator><name pos:line="308" pos:column="50">Graphics</name><op:operator pos:line="308" pos:column="58">.</op:operator><name pos:line="308" pos:column="59">HardwareCursors</name></name> <op:operator pos:line="308" pos:column="75">=</op:operator> <lit:literal type="boolean" pos:line="308" pos:column="77">false</lit:literal></expr>;</expr_stmt>
				}</block></catch></try>
			}</block></then>
			<else pos:line="311" pos:column="25">else
				<expr_stmt><expr><name pos:line="312" pos:column="33">Cursor</name> <op:operator pos:line="312" pos:column="40">=</op:operator> <op:operator pos:line="312" pos:column="42">new</op:operator> <call><name pos:line="312" pos:column="46">SoftwareCursor</name><argument_list pos:line="312" pos:column="60">(<argument><expr><name><name pos:line="312" pos:column="61">ModData</name><op:operator pos:line="312" pos:column="68">.</op:operator><name pos:line="312" pos:column="69">CursorProvider</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

			<expr_stmt><expr><name><name pos:line="314" pos:column="25">PerfHistory</name><op:operator pos:line="314" pos:column="36">.</op:operator><name pos:line="314" pos:column="37">Items</name><index pos:line="314" pos:column="42">[<expr><lit:literal type="string" pos:line="314" pos:column="43">"render"</lit:literal></expr>]</index></name><op:operator pos:line="314" pos:column="52">.</op:operator><name pos:line="314" pos:column="53">HasNormalTick</name> <op:operator pos:line="314" pos:column="67">=</op:operator> <lit:literal type="boolean" pos:line="314" pos:column="69">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="315" pos:column="25">PerfHistory</name><op:operator pos:line="315" pos:column="36">.</op:operator><name pos:line="315" pos:column="37">Items</name><index pos:line="315" pos:column="42">[<expr><lit:literal type="string" pos:line="315" pos:column="43">"batches"</lit:literal></expr>]</index></name><op:operator pos:line="315" pos:column="53">.</op:operator><name pos:line="315" pos:column="54">HasNormalTick</name> <op:operator pos:line="315" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="315" pos:column="70">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="316" pos:column="25">PerfHistory</name><op:operator pos:line="316" pos:column="36">.</op:operator><name pos:line="316" pos:column="37">Items</name><index pos:line="316" pos:column="42">[<expr><lit:literal type="string" pos:line="316" pos:column="43">"render_widgets"</lit:literal></expr>]</index></name><op:operator pos:line="316" pos:column="60">.</op:operator><name pos:line="316" pos:column="61">HasNormalTick</name> <op:operator pos:line="316" pos:column="75">=</op:operator> <lit:literal type="boolean" pos:line="316" pos:column="77">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="317" pos:column="25">PerfHistory</name><op:operator pos:line="317" pos:column="36">.</op:operator><name pos:line="317" pos:column="37">Items</name><index pos:line="317" pos:column="42">[<expr><lit:literal type="string" pos:line="317" pos:column="43">"render_flip"</lit:literal></expr>]</index></name><op:operator pos:line="317" pos:column="57">.</op:operator><name pos:line="317" pos:column="58">HasNormalTick</name> <op:operator pos:line="317" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="317" pos:column="74">false</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="319" pos:column="25">JoinLocal</name><argument_list pos:line="319" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

			<if pos:line="321" pos:column="25">if <condition pos:line="321" pos:column="28">(<expr><name><name pos:line="321" pos:column="29">Settings</name><op:operator pos:line="321" pos:column="37">.</op:operator><name pos:line="321" pos:column="38">Server</name><op:operator pos:line="321" pos:column="44">.</op:operator><name pos:line="321" pos:column="45">Dedicated</name></name></expr>)</condition><then pos:line="321" pos:column="55">
			<block pos:line="322" pos:column="25">{
				<while pos:line="323" pos:column="33">while <condition pos:line="323" pos:column="39">(<expr><lit:literal type="boolean" pos:line="323" pos:column="40">true</lit:literal></expr>)</condition>
				<block pos:line="324" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="325" pos:column="41">Settings</name><op:operator pos:line="325" pos:column="49">.</op:operator><name pos:line="325" pos:column="50">Server</name><op:operator pos:line="325" pos:column="56">.</op:operator><name pos:line="325" pos:column="57">Map</name></name> <op:operator pos:line="325" pos:column="61">=</op:operator> <call><name><name pos:line="325" pos:column="63">WidgetUtils</name><op:operator pos:line="325" pos:column="74">.</op:operator><name pos:line="325" pos:column="75">ChooseInitialMap</name></name><argument_list pos:line="325" pos:column="91">(<argument><expr><name><name pos:line="325" pos:column="92">Settings</name><op:operator pos:line="325" pos:column="100">.</op:operator><name pos:line="325" pos:column="101">Server</name><op:operator pos:line="325" pos:column="107">.</op:operator><name pos:line="325" pos:column="108">Map</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="326" pos:column="41">Settings</name><op:operator pos:line="326" pos:column="49">.</op:operator><name pos:line="326" pos:column="50">Save</name></name><argument_list pos:line="326" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="327" pos:column="41">CreateServer</name><argument_list pos:line="327" pos:column="53">(<argument><expr><op:operator pos:line="327" pos:column="54">new</op:operator> <call><name pos:line="327" pos:column="58">ServerSettings</name><argument_list pos:line="327" pos:column="72">(<argument><expr><name><name pos:line="327" pos:column="73">Settings</name><op:operator pos:line="327" pos:column="81">.</op:operator><name pos:line="327" pos:column="82">Server</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<while pos:line="328" pos:column="41">while <condition pos:line="328" pos:column="47">(<expr><lit:literal type="boolean" pos:line="328" pos:column="48">true</lit:literal></expr>)</condition>
					<block pos:line="329" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="330" pos:column="49">Thread</name><op:operator pos:line="330" pos:column="55">.</op:operator><name pos:line="330" pos:column="56">Sleep</name></name><argument_list pos:line="330" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="330" pos:column="62">100</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						<if pos:line="332" pos:column="49">if <condition pos:line="332" pos:column="52">(<expr><name><name pos:line="332" pos:column="53">server</name><op:operator pos:line="332" pos:column="59">.</op:operator><name pos:line="332" pos:column="60">State</name></name> <op:operator pos:line="332" pos:column="66">==</op:operator> <name><name pos:line="332" pos:column="69">Server</name><op:operator pos:line="332" pos:column="75">.</op:operator><name pos:line="332" pos:column="76">ServerState</name><op:operator pos:line="332" pos:column="87">.</op:operator><name pos:line="332" pos:column="88">GameStarted</name> <type:modifier pos:line="332" pos:column="100">&amp;&amp;</type:modifier></name> <name><name pos:line="332" pos:column="103">server</name><op:operator pos:line="332" pos:column="109">.</op:operator><name pos:line="332" pos:column="110">Conns</name><op:operator pos:line="332" pos:column="115">.</op:operator><name pos:line="332" pos:column="116">Count</name></name> <op:operator pos:line="332" pos:column="122">&lt;</op:operator> <lit:literal type="number" pos:line="332" pos:column="124">1</lit:literal></expr>)</condition><then pos:line="332" pos:column="126">
						<block pos:line="333" pos:column="49">{
							<expr_stmt><expr><call><name><name pos:line="334" pos:column="57">Console</name><op:operator pos:line="334" pos:column="64">.</op:operator><name pos:line="334" pos:column="65">WriteLine</name></name><argument_list pos:line="334" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="334" pos:column="75">"No one is playing, shutting down..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="335" pos:column="57">server</name><op:operator pos:line="335" pos:column="63">.</op:operator><name pos:line="335" pos:column="64">Shutdown</name></name><argument_list pos:line="335" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
							<break pos:line="336" pos:column="57">break;</break>
						}</block></then></if>
					}</block></while>

					<if pos:line="340" pos:column="41">if <condition pos:line="340" pos:column="44">(<expr><name><name pos:line="340" pos:column="45">Settings</name><op:operator pos:line="340" pos:column="53">.</op:operator><name pos:line="340" pos:column="54">Server</name><op:operator pos:line="340" pos:column="60">.</op:operator><name pos:line="340" pos:column="61">DedicatedLoop</name></name></expr>)</condition><then pos:line="340" pos:column="75">
					<block pos:line="341" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="342" pos:column="49">Console</name><op:operator pos:line="342" pos:column="56">.</op:operator><name pos:line="342" pos:column="57">WriteLine</name></name><argument_list pos:line="342" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="342" pos:column="67">"Starting a new server instance..."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="343" pos:column="49">ModData</name><op:operator pos:line="343" pos:column="56">.</op:operator><name pos:line="343" pos:column="57">MapCache</name><op:operator pos:line="343" pos:column="65">.</op:operator><name pos:line="343" pos:column="66">LoadMaps</name></name><argument_list pos:line="343" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
						<continue pos:line="344" pos:column="49">continue;</continue>
					}</block></then></if>

					<break pos:line="347" pos:column="41">break;</break>
				}</block></while>

				<expr_stmt><expr><call><name><name pos:line="350" pos:column="33">Environment</name><op:operator pos:line="350" pos:column="44">.</op:operator><name pos:line="350" pos:column="45">Exit</name></name><argument_list pos:line="350" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="350" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="352" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="353" pos:column="33">ModData</name><op:operator pos:line="353" pos:column="40">.</op:operator><name pos:line="353" pos:column="41">LoadScreen</name><op:operator pos:line="353" pos:column="51">.</op:operator><name pos:line="353" pos:column="52">StartGame</name></name><argument_list pos:line="353" pos:column="61">(<argument><expr><name pos:line="353" pos:column="62">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></function>

		<function><type><specifier pos:line="356" pos:column="17">public</specifier> <specifier pos:line="356" pos:column="24">static</specifier> <name pos:line="356" pos:column="31">void</name></type> <name pos:line="356" pos:column="36">LoadEditor</name><parameter_list pos:line="356" pos:column="46">(<param><decl><type><name pos:line="356" pos:column="47">string</name></type> <name pos:line="356" pos:column="54">mapUid</name></decl></param>)</parameter_list>
		<block pos:line="357" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="358" pos:column="25">StartGame</name><argument_list pos:line="358" pos:column="34">(<argument><expr><name pos:line="358" pos:column="35">mapUid</name></expr></argument>, <argument><expr><name><name pos:line="358" pos:column="43">WorldType</name><op:operator pos:line="358" pos:column="52">.</op:operator><name pos:line="358" pos:column="53">Editor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="361" pos:column="17">public</specifier> <specifier pos:line="361" pos:column="24">static</specifier> <name pos:line="361" pos:column="31">void</name></type> <name pos:line="361" pos:column="36">LoadShellMap</name><parameter_list pos:line="361" pos:column="48">()</parameter_list>
		<block pos:line="362" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="363" pos:column="25">var</name></type> <name pos:line="363" pos:column="29">shellmap</name> <init pos:line="363" pos:column="38">= <expr><call><name pos:line="363" pos:column="40">ChooseShellmap</name><argument_list pos:line="363" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<using pos:line="365" pos:column="25">using (<expr><op:operator pos:line="365" pos:column="32">new</op:operator> <call><name pos:line="365" pos:column="36">PerfTimer</name><argument_list pos:line="365" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="365" pos:column="46">"StartGame"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<expr_stmt><expr><call><name pos:line="366" pos:column="33">StartGame</name><argument_list pos:line="366" pos:column="42">(<argument><expr><name pos:line="366" pos:column="43">shellmap</name></expr></argument>, <argument><expr><name><name pos:line="366" pos:column="53">WorldType</name><op:operator pos:line="366" pos:column="62">.</op:operator><name pos:line="366" pos:column="63">Shellmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>
		}</block></function>

		<function><type><specifier pos:line="369" pos:column="17">static</specifier> <name pos:line="369" pos:column="24">string</name></type> <name pos:line="369" pos:column="31">ChooseShellmap</name><parameter_list pos:line="369" pos:column="45">()</parameter_list>
		<block pos:line="370" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="371" pos:column="25">var</name></type> <name pos:line="371" pos:column="29">shellmaps</name> <init pos:line="371" pos:column="39">= <expr><call><name><name pos:line="371" pos:column="41">ModData</name><op:operator pos:line="371" pos:column="48">.</op:operator><name pos:line="371" pos:column="49">MapCache</name>
				<op:operator pos:line="372" pos:column="33">.</op:operator><name pos:line="372" pos:column="34">Where</name></name><argument_list pos:line="372" pos:column="39">(<argument><expr><lambda><name pos:line="372" pos:column="40">m</name> <op:operator pos:line="372" pos:column="42">=&gt;</op:operator> <name><name pos:line="372" pos:column="45">m</name><op:operator pos:line="372" pos:column="46">.</op:operator><name pos:line="372" pos:column="47">Status</name></name> <op:operator pos:line="372" pos:column="54">==</op:operator> <name><name pos:line="372" pos:column="57">MapStatus</name><op:operator pos:line="372" pos:column="66">.</op:operator><name pos:line="372" pos:column="67">Available</name> <type:modifier pos:line="372" pos:column="77">&amp;&amp;</type:modifier></name> <call><name><name pos:line="372" pos:column="80">m</name><op:operator pos:line="372" pos:column="81">.</op:operator><name pos:line="372" pos:column="82">Map</name><op:operator pos:line="372" pos:column="85">.</op:operator><name pos:line="372" pos:column="86">Visibility</name><op:operator pos:line="372" pos:column="96">.</op:operator><name pos:line="372" pos:column="97">HasFlag</name></name><argument_list pos:line="372" pos:column="104">(<argument><expr><name><name pos:line="372" pos:column="105">MapVisibility</name><op:operator pos:line="372" pos:column="118">.</op:operator><name pos:line="372" pos:column="119">Shellmap</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call>
				<op:operator pos:line="373" pos:column="33">.</op:operator><call><name pos:line="373" pos:column="34">Select</name><argument_list pos:line="373" pos:column="40">(<argument><expr><lambda><name pos:line="373" pos:column="41">m</name> <op:operator pos:line="373" pos:column="43">=&gt;</op:operator> <name><name pos:line="373" pos:column="46">m</name><op:operator pos:line="373" pos:column="47">.</op:operator><name pos:line="373" pos:column="48">Uid</name></name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="375" pos:column="25">if <condition pos:line="375" pos:column="28">(<expr><op:operator pos:line="375" pos:column="29">!</op:operator><call><name><name pos:line="375" pos:column="30">shellmaps</name><op:operator pos:line="375" pos:column="39">.</op:operator><name pos:line="375" pos:column="40">Any</name></name><argument_list pos:line="375" pos:column="43">()</argument_list></call></expr>)</condition><then pos:line="375" pos:column="46">
				<throw pos:line="376" pos:column="33">throw <expr><op:operator pos:line="376" pos:column="39">new</op:operator> <call><name pos:line="376" pos:column="43">InvalidDataException</name><argument_list pos:line="376" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="376" pos:column="64">"No valid shellmaps available"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<return pos:line="378" pos:column="25">return <expr><call><name><name pos:line="378" pos:column="32">shellmaps</name><op:operator pos:line="378" pos:column="41">.</op:operator><name pos:line="378" pos:column="42">Random</name></name><argument_list pos:line="378" pos:column="48">(<argument><expr><name pos:line="378" pos:column="49">CosmeticRandom</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="381" pos:column="17">static</specifier> <name pos:line="381" pos:column="24">RunStatus</name></type> <name pos:line="381" pos:column="34">state</name> <init pos:line="381" pos:column="40">= <expr><name><name pos:line="381" pos:column="42">RunStatus</name><op:operator pos:line="381" pos:column="51">.</op:operator><name pos:line="381" pos:column="52">Running</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="382" pos:column="17">public</specifier> <specifier pos:line="382" pos:column="24">static</specifier> <specifier pos:line="382" pos:column="31">event</specifier> <name pos:line="382" pos:column="37">Action</name></type> <name pos:line="382" pos:column="44">OnQuit</name> <init pos:line="382" pos:column="51">= <expr><lambda><parameter_list pos:line="382" pos:column="53">()</parameter_list> <op:operator pos:line="382" pos:column="56">=&gt;</op:operator> <block pos:line="382" pos:column="59">{ }</block></lambda></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="384" pos:column="17">// Note: These delayed actions should only be used by widgets or disposing objects</comment>
		<comment type="line" pos:line="385" pos:column="17">// - things that depend on a particular world should be queuing them on the worldactor.</comment>
		<decl_stmt><decl><type><specifier pos:line="386" pos:column="17">static</specifier> <name pos:line="386" pos:column="24">ActionQueue</name></type> <name pos:line="386" pos:column="36">delayedActions</name> <init pos:line="386" pos:column="51">= <expr><op:operator pos:line="386" pos:column="53">new</op:operator> <call><name pos:line="386" pos:column="57">ActionQueue</name><argument_list pos:line="386" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<function><type><specifier pos:line="387" pos:column="17">public</specifier> <specifier pos:line="387" pos:column="24">static</specifier> <name pos:line="387" pos:column="31">void</name></type> <name pos:line="387" pos:column="36">RunAfterTick</name><parameter_list pos:line="387" pos:column="48">(<param><decl><type><name pos:line="387" pos:column="49">Action</name></type> <name pos:line="387" pos:column="56">a</name></decl></param>)</parameter_list> <block pos:line="387" pos:column="59">{ <expr_stmt><expr><call><name><name pos:line="387" pos:column="61">delayedActions</name><op:operator pos:line="387" pos:column="75">.</op:operator><name pos:line="387" pos:column="76">Add</name></name><argument_list pos:line="387" pos:column="79">(<argument><expr><name pos:line="387" pos:column="80">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
		<function><type><specifier pos:line="388" pos:column="17">public</specifier> <specifier pos:line="388" pos:column="24">static</specifier> <name pos:line="388" pos:column="31">void</name></type> <name pos:line="388" pos:column="36">RunAfterDelay</name><parameter_list pos:line="388" pos:column="49">(<param><decl><type><name pos:line="388" pos:column="50">int</name></type> <name pos:line="388" pos:column="54">delay</name></decl></param>, <param><decl><type><name pos:line="388" pos:column="61">Action</name></type> <name pos:line="388" pos:column="68">a</name></decl></param>)</parameter_list> <block pos:line="388" pos:column="71">{ <expr_stmt><expr><call><name><name pos:line="388" pos:column="73">delayedActions</name><op:operator pos:line="388" pos:column="87">.</op:operator><name pos:line="388" pos:column="88">Add</name></name><argument_list pos:line="388" pos:column="91">(<argument><expr><name pos:line="388" pos:column="92">a</name></expr></argument>, <argument><expr><name pos:line="388" pos:column="95">delay</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>

		<function><type><specifier pos:line="390" pos:column="17">static</specifier> <name pos:line="390" pos:column="24">void</name></type> <name pos:line="390" pos:column="29">TakeScreenshotInner</name><parameter_list pos:line="390" pos:column="48">()</parameter_list>
		<block pos:line="391" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="392" pos:column="25">Log</name><op:operator pos:line="392" pos:column="28">.</op:operator><name pos:line="392" pos:column="29">Write</name></name><argument_list pos:line="392" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="392" pos:column="35">"debug"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="392" pos:column="44">"Taking screenshot"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="394" pos:column="25">Bitmap</name></type> <name pos:line="394" pos:column="32">bitmap</name></decl>;</decl_stmt>
			<using pos:line="395" pos:column="25">using (<expr><op:operator pos:line="395" pos:column="32">new</op:operator> <call><name pos:line="395" pos:column="36">PerfTimer</name><argument_list pos:line="395" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="395" pos:column="46">"Renderer.TakeScreenshot"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<expr_stmt><expr><name pos:line="396" pos:column="33">bitmap</name> <op:operator pos:line="396" pos:column="40">=</op:operator> <call><name><name pos:line="396" pos:column="42">Renderer</name><op:operator pos:line="396" pos:column="50">.</op:operator><name pos:line="396" pos:column="51">Device</name><op:operator pos:line="396" pos:column="57">.</op:operator><name pos:line="396" pos:column="58">TakeScreenshot</name></name><argument_list pos:line="396" pos:column="72">()</argument_list></call></expr>;</expr_stmt></using>

			<expr_stmt><expr><call><name><name pos:line="398" pos:column="25">ThreadPool</name><op:operator pos:line="398" pos:column="35">.</op:operator><name pos:line="398" pos:column="36">QueueUserWorkItem</name></name><argument_list pos:line="398" pos:column="53">(<argument><expr><lambda><name pos:line="398" pos:column="54">_</name> <op:operator pos:line="398" pos:column="56">=&gt;</op:operator>
			<block pos:line="399" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="400" pos:column="33">var</name></type> <name pos:line="400" pos:column="37">mod</name> <init pos:line="400" pos:column="41">= <expr><name><name pos:line="400" pos:column="43">ModData</name><op:operator pos:line="400" pos:column="50">.</op:operator><name pos:line="400" pos:column="51">Manifest</name><op:operator pos:line="400" pos:column="59">.</op:operator><name pos:line="400" pos:column="60">Mod</name></name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="401" pos:column="33">var</name></type> <name pos:line="401" pos:column="37">directory</name> <init pos:line="401" pos:column="47">= <expr><call><name><name pos:line="401" pos:column="49">Platform</name><op:operator pos:line="401" pos:column="57">.</op:operator><name pos:line="401" pos:column="58">ResolvePath</name></name><argument_list pos:line="401" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="401" pos:column="70">"^"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="401" pos:column="75">"Screenshots"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="401" pos:column="90">mod</name><op:operator pos:line="401" pos:column="93">.</op:operator><name pos:line="401" pos:column="94">Id</name></name></expr></argument>, <argument><expr><name><name pos:line="401" pos:column="98">mod</name><op:operator pos:line="401" pos:column="101">.</op:operator><name pos:line="401" pos:column="102">Version</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="402" pos:column="33">Directory</name><op:operator pos:line="402" pos:column="42">.</op:operator><name pos:line="402" pos:column="43">CreateDirectory</name></name><argument_list pos:line="402" pos:column="58">(<argument><expr><name pos:line="402" pos:column="59">directory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="404" pos:column="33">var</name></type> <name pos:line="404" pos:column="37">filename</name> <init pos:line="404" pos:column="46">= <expr><call><name pos:line="404" pos:column="48">TimestampedFilename</name><argument_list pos:line="404" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="405" pos:column="33">var</name></type> <name pos:line="405" pos:column="37">format</name> <init pos:line="405" pos:column="44">= <expr><name><name pos:line="405" pos:column="46">Settings</name><op:operator pos:line="405" pos:column="54">.</op:operator><name pos:line="405" pos:column="55">Graphics</name><op:operator pos:line="405" pos:column="63">.</op:operator><name pos:line="405" pos:column="64">ScreenshotFormat</name></name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="406" pos:column="33">var</name></type> <name pos:line="406" pos:column="37">extension</name> <init pos:line="406" pos:column="47">= <expr><call><name><name pos:line="406" pos:column="49">ImageCodecInfo</name><op:operator pos:line="406" pos:column="63">.</op:operator><name pos:line="406" pos:column="64">GetImageEncoders</name></name><argument_list pos:line="406" pos:column="80">()</argument_list></call><op:operator pos:line="406" pos:column="82">.</op:operator><call><name pos:line="406" pos:column="83">FirstOrDefault</name><argument_list pos:line="406" pos:column="97">(<argument><expr><lambda><name pos:line="406" pos:column="98">x</name> <op:operator pos:line="406" pos:column="100">=&gt;</op:operator> <name><name pos:line="406" pos:column="103">x</name><op:operator pos:line="406" pos:column="104">.</op:operator><name pos:line="406" pos:column="105">FormatID</name></name> <op:operator pos:line="406" pos:column="114">==</op:operator> <name><name pos:line="406" pos:column="117">format</name><op:operator pos:line="406" pos:column="123">.</op:operator><name pos:line="406" pos:column="124">Guid</name></name></lambda></expr></argument>)</argument_list></call>
					<op:operator pos:line="407" pos:column="41">.</op:operator><call><name><name pos:line="407" pos:column="42">FilenameExtension</name><op:operator pos:line="407" pos:column="59">.</op:operator><name pos:line="407" pos:column="60">Split</name></name><argument_list pos:line="407" pos:column="65">(<argument><expr><lit:literal type="char" pos:line="407" pos:column="66">';'</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="407" pos:column="70">.</op:operator><call><name pos:line="407" pos:column="71">First</name><argument_list pos:line="407" pos:column="76">()</argument_list></call><op:operator pos:line="407" pos:column="78">.</op:operator><call><name pos:line="407" pos:column="79">ToLowerInvariant</name><argument_list pos:line="407" pos:column="95">()</argument_list></call><op:operator pos:line="407" pos:column="97">.</op:operator><call><name pos:line="407" pos:column="98">Substring</name><argument_list pos:line="407" pos:column="107">(<argument><expr><lit:literal type="number" pos:line="407" pos:column="108">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="408" pos:column="33">var</name></type> <name pos:line="408" pos:column="37">destination</name> <init pos:line="408" pos:column="49">= <expr><call><name><name pos:line="408" pos:column="51">Path</name><op:operator pos:line="408" pos:column="55">.</op:operator><name pos:line="408" pos:column="56">Combine</name></name><argument_list pos:line="408" pos:column="63">(<argument><expr><name pos:line="408" pos:column="64">directory</name></expr></argument>, <argument><expr><call><name><name pos:line="408" pos:column="75">string</name><op:operator pos:line="408" pos:column="81">.</op:operator><name pos:line="408" pos:column="82">Concat</name></name><argument_list pos:line="408" pos:column="88">(<argument><expr><name pos:line="408" pos:column="89">filename</name></expr></argument>, <argument><expr><name pos:line="408" pos:column="99">extension</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<using pos:line="410" pos:column="33">using (<expr><op:operator pos:line="410" pos:column="40">new</op:operator> <call><name pos:line="410" pos:column="44">PerfTimer</name><argument_list pos:line="410" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="410" pos:column="54">"Save Screenshot ({0})"</lit:literal><op:operator pos:line="410" pos:column="77">.</op:operator><call><name pos:line="410" pos:column="78">F</name><argument_list pos:line="410" pos:column="79">(<argument><expr><name pos:line="410" pos:column="80">format</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)
					<expr_stmt><expr><call><name><name pos:line="411" pos:column="41">bitmap</name><op:operator pos:line="411" pos:column="47">.</op:operator><name pos:line="411" pos:column="48">Save</name></name><argument_list pos:line="411" pos:column="52">(<argument><expr><name pos:line="411" pos:column="53">destination</name></expr></argument>, <argument><expr><name pos:line="411" pos:column="66">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>

				<expr_stmt><expr><call><name><name pos:line="413" pos:column="33">bitmap</name><op:operator pos:line="413" pos:column="39">.</op:operator><name pos:line="413" pos:column="40">Dispose</name></name><argument_list pos:line="413" pos:column="47">()</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><name pos:line="415" pos:column="33">Game</name><op:operator pos:line="415" pos:column="37">.</op:operator><name pos:line="415" pos:column="38">RunAfterTick</name></name><argument_list pos:line="415" pos:column="50">(<argument><expr><lambda><parameter_list pos:line="415" pos:column="51">()</parameter_list> <op:operator pos:line="415" pos:column="54">=&gt;</op:operator> <call><name pos:line="415" pos:column="57">Debug</name><argument_list pos:line="415" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="415" pos:column="63">"Saved screenshot "</lit:literal> <op:operator pos:line="415" pos:column="83">+</op:operator> <name pos:line="415" pos:column="85">filename</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="419" pos:column="17">static</specifier> <name pos:line="419" pos:column="24">void</name></type> <name pos:line="419" pos:column="29">InnerLogicTick</name><parameter_list pos:line="419" pos:column="43">(<param><decl><type><name pos:line="419" pos:column="44">OrderManager</name></type> <name pos:line="419" pos:column="57">orderManager</name></decl></param>)</parameter_list>
		<block pos:line="420" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="421" pos:column="25">var</name></type> <name pos:line="421" pos:column="29">tick</name> <init pos:line="421" pos:column="34">= <expr><name pos:line="421" pos:column="36">RunTime</name></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="423" pos:column="25">var</name></type> <name pos:line="423" pos:column="29">world</name> <init pos:line="423" pos:column="35">= <expr><name><name pos:line="423" pos:column="37">orderManager</name><op:operator pos:line="423" pos:column="49">.</op:operator><name pos:line="423" pos:column="50">World</name></name></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="425" pos:column="25">var</name></type> <name pos:line="425" pos:column="29">uiTickDelta</name> <init pos:line="425" pos:column="41">= <expr><name pos:line="425" pos:column="43">tick</name> <op:operator pos:line="425" pos:column="48">-</op:operator> <name><name pos:line="425" pos:column="50">Ui</name><op:operator pos:line="425" pos:column="52">.</op:operator><name pos:line="425" pos:column="53">LastTickTime</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="426" pos:column="25">if <condition pos:line="426" pos:column="28">(<expr><name pos:line="426" pos:column="29">uiTickDelta</name> <op:operator pos:line="426" pos:column="41">&gt;=</op:operator> <name pos:line="426" pos:column="44">Timestep</name></expr>)</condition><then pos:line="426" pos:column="53">
			<block pos:line="427" pos:column="25">{
				<comment type="line" pos:line="428" pos:column="33">// Explained below for the world tick calculation</comment>
				<decl_stmt><decl><type><name pos:line="429" pos:column="33">var</name></type> <name pos:line="429" pos:column="37">integralTickTimestep</name> <init pos:line="429" pos:column="58">= <expr><op:operator pos:line="429" pos:column="60">(</op:operator><name pos:line="429" pos:column="61">uiTickDelta</name> <op:operator pos:line="429" pos:column="73">/</op:operator> <name pos:line="429" pos:column="75">Timestep</name><op:operator pos:line="429" pos:column="83">)</op:operator> <op:operator pos:line="429" pos:column="85">*</op:operator> <name pos:line="429" pos:column="87">Timestep</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="430" pos:column="33">Ui</name><op:operator pos:line="430" pos:column="35">.</op:operator><name pos:line="430" pos:column="36">LastTickTime</name></name> <op:operator pos:line="430" pos:column="49">+=</op:operator> <name pos:line="430" pos:column="52">integralTickTimestep</name> <op:operator pos:line="430" pos:column="73">&gt;=</op:operator> <name pos:line="430" pos:column="76">TimestepJankThreshold</name> <op:operator pos:line="430" pos:column="98">?</op:operator> <name pos:line="430" pos:column="100">integralTickTimestep</name> <op:operator pos:line="430" pos:column="121">:</op:operator> <name pos:line="430" pos:column="123">Timestep</name></expr>;</expr_stmt>

				<expr_stmt><expr><name><name pos:line="432" pos:column="33">Viewport</name><op:operator pos:line="432" pos:column="41">.</op:operator><name pos:line="432" pos:column="42">TicksSinceLastMove</name></name> <op:operator pos:line="432" pos:column="61">+=</op:operator> <name pos:line="432" pos:column="64">uiTickDelta</name> <op:operator pos:line="432" pos:column="76">/</op:operator> <name pos:line="432" pos:column="78">Timestep</name></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><name pos:line="434" pos:column="33">Sync</name><op:operator pos:line="434" pos:column="37">.</op:operator><name pos:line="434" pos:column="38">CheckSyncUnchanged</name></name><argument_list pos:line="434" pos:column="56">(<argument><expr><name pos:line="434" pos:column="57">world</name></expr></argument>, <argument><expr><name><name pos:line="434" pos:column="64">Ui</name><op:operator pos:line="434" pos:column="66">.</op:operator><name pos:line="434" pos:column="67">Tick</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="435" pos:column="33">Cursor</name><op:operator pos:line="435" pos:column="39">.</op:operator><name pos:line="435" pos:column="40">Tick</name></name><argument_list pos:line="435" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<decl_stmt><decl><type><name pos:line="438" pos:column="25">var</name></type> <name pos:line="438" pos:column="29">worldTimestep</name> <init pos:line="438" pos:column="43">= <expr><name pos:line="438" pos:column="45">world</name> <op:operator pos:line="438" pos:column="51">==</op:operator> <name pos:line="438" pos:column="54">null</name> <op:operator pos:line="438" pos:column="59">?</op:operator> <name pos:line="438" pos:column="61">Timestep</name> <op:operator pos:line="438" pos:column="70">:</op:operator> <name><name pos:line="438" pos:column="72">world</name><op:operator pos:line="438" pos:column="77">.</op:operator><name pos:line="438" pos:column="78">Timestep</name></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="439" pos:column="25">var</name></type> <name pos:line="439" pos:column="29">worldTickDelta</name> <init pos:line="439" pos:column="44">= <expr><name pos:line="439" pos:column="46">tick</name> <op:operator pos:line="439" pos:column="51">-</op:operator> <name><name pos:line="439" pos:column="53">orderManager</name><op:operator pos:line="439" pos:column="65">.</op:operator><name pos:line="439" pos:column="66">LastTickTime</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="440" pos:column="25">if <condition pos:line="440" pos:column="28">(<expr><name pos:line="440" pos:column="29">worldTimestep</name> <op:operator pos:line="440" pos:column="43">!=</op:operator> <lit:literal type="number" pos:line="440" pos:column="46">0</lit:literal> <op:operator pos:line="440" pos:column="48">&amp;&amp;</op:operator> <name pos:line="440" pos:column="51">worldTickDelta</name> <op:operator pos:line="440" pos:column="66">&gt;=</op:operator> <name pos:line="440" pos:column="69">worldTimestep</name></expr>)</condition><then pos:line="440" pos:column="83">
			<block pos:line="441" pos:column="25">{
				<using pos:line="442" pos:column="33">using (<expr><op:operator pos:line="442" pos:column="40">new</op:operator> <call><name pos:line="442" pos:column="44">PerfSample</name><argument_list pos:line="442" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="442" pos:column="55">"tick_time"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<block pos:line="443" pos:column="33">{
					<comment type="line" pos:line="444" pos:column="41">// Tick the world to advance the world time to match real time:</comment>
					<comment type="line" pos:line="445" pos:column="41">//    If dt &lt; TickJankThreshold then we should try and catch up by repeatedly ticking</comment>
					<comment type="line" pos:line="446" pos:column="41">//    If dt &gt;= TickJankThreshold then we should accept the jank and progress at the normal rate</comment>
					<comment type="line" pos:line="447" pos:column="41">// dt is rounded down to an integer tick count in order to preserve fractional tick components.</comment>
					<decl_stmt><decl><type><name pos:line="448" pos:column="41">var</name></type> <name pos:line="448" pos:column="45">integralTickTimestep</name> <init pos:line="448" pos:column="66">= <expr><op:operator pos:line="448" pos:column="68">(</op:operator><name pos:line="448" pos:column="69">worldTickDelta</name> <op:operator pos:line="448" pos:column="84">/</op:operator> <name pos:line="448" pos:column="86">worldTimestep</name><op:operator pos:line="448" pos:column="99">)</op:operator> <op:operator pos:line="448" pos:column="101">*</op:operator> <name pos:line="448" pos:column="103">worldTimestep</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="449" pos:column="41">orderManager</name><op:operator pos:line="449" pos:column="53">.</op:operator><name pos:line="449" pos:column="54">LastTickTime</name></name> <op:operator pos:line="449" pos:column="67">+=</op:operator> <name pos:line="449" pos:column="70">integralTickTimestep</name> <op:operator pos:line="449" pos:column="91">&gt;=</op:operator> <name pos:line="449" pos:column="94">TimestepJankThreshold</name> <op:operator pos:line="449" pos:column="116">?</op:operator> <name pos:line="449" pos:column="118">integralTickTimestep</name> <op:operator pos:line="449" pos:column="139">:</op:operator> <name pos:line="449" pos:column="141">worldTimestep</name></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><name pos:line="451" pos:column="41">Sound</name><op:operator pos:line="451" pos:column="46">.</op:operator><name pos:line="451" pos:column="47">Tick</name></name><argument_list pos:line="451" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="452" pos:column="41">Sync</name><op:operator pos:line="452" pos:column="45">.</op:operator><name pos:line="452" pos:column="46">CheckSyncUnchanged</name></name><argument_list pos:line="452" pos:column="64">(<argument><expr><name pos:line="452" pos:column="65">world</name></expr></argument>, <argument><expr><name><name pos:line="452" pos:column="72">orderManager</name><op:operator pos:line="452" pos:column="84">.</op:operator><name pos:line="452" pos:column="85">TickImmediate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<if pos:line="454" pos:column="41">if <condition pos:line="454" pos:column="44">(<expr><name pos:line="454" pos:column="45">world</name> <op:operator pos:line="454" pos:column="51">!=</op:operator> <name pos:line="454" pos:column="54">null</name></expr>)</condition><then pos:line="454" pos:column="59">
					<block pos:line="455" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="456" pos:column="49">var</name></type> <name pos:line="456" pos:column="53">isNetTick</name> <init pos:line="456" pos:column="63">= <expr><name pos:line="456" pos:column="65">LocalTick</name> <op:operator pos:line="456" pos:column="75">%</op:operator> <name pos:line="456" pos:column="77">NetTickScale</name> <op:operator pos:line="456" pos:column="90">==</op:operator> <lit:literal type="number" pos:line="456" pos:column="93">0</lit:literal></expr></init></decl>;</decl_stmt>

						<if pos:line="458" pos:column="49">if <condition pos:line="458" pos:column="52">(<expr><op:operator pos:line="458" pos:column="53">!</op:operator><name pos:line="458" pos:column="54">isNetTick</name> <op:operator pos:line="458" pos:column="64">||</op:operator> <name><name pos:line="458" pos:column="67">orderManager</name><op:operator pos:line="458" pos:column="79">.</op:operator><name pos:line="458" pos:column="80">IsReadyForNextFrame</name></name></expr>)</condition><then pos:line="458" pos:column="100">
						<block pos:line="459" pos:column="49">{
							<expr_stmt><expr><op:operator pos:line="460" pos:column="57">++</op:operator><name><name pos:line="460" pos:column="59">orderManager</name><op:operator pos:line="460" pos:column="71">.</op:operator><name pos:line="460" pos:column="72">LocalFrameNumber</name></name></expr>;</expr_stmt>

							<expr_stmt><expr><call><name><name pos:line="462" pos:column="57">Log</name><op:operator pos:line="462" pos:column="60">.</op:operator><name pos:line="462" pos:column="61">Write</name></name><argument_list pos:line="462" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="462" pos:column="67">"debug"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="462" pos:column="76">"--Tick: {0} ({1})"</lit:literal></expr></argument>, <argument><expr><name pos:line="462" pos:column="97">LocalTick</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="108">isNetTick</name> <op:operator pos:line="462" pos:column="118">?</op:operator> <lit:literal type="string" pos:line="462" pos:column="120">"net"</lit:literal> <op:operator pos:line="462" pos:column="126">:</op:operator> <lit:literal type="string" pos:line="462" pos:column="128">"local"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

							<if pos:line="464" pos:column="57">if <condition pos:line="464" pos:column="60">(<expr><name pos:line="464" pos:column="61">isNetTick</name></expr>)</condition><then pos:line="464" pos:column="71">
								<expr_stmt><expr><call><name><name pos:line="465" pos:column="65">orderManager</name><op:operator pos:line="465" pos:column="77">.</op:operator><name pos:line="465" pos:column="78">Tick</name></name><argument_list pos:line="465" pos:column="82">()</argument_list></call></expr>;</expr_stmt></then></if>

							<expr_stmt><expr><call><name><name pos:line="467" pos:column="57">Sync</name><op:operator pos:line="467" pos:column="61">.</op:operator><name pos:line="467" pos:column="62">CheckSyncUnchanged</name></name><argument_list pos:line="467" pos:column="80">(<argument><expr><name pos:line="467" pos:column="81">world</name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="467" pos:column="88">()</parameter_list> <op:operator pos:line="467" pos:column="91">=&gt;</op:operator>
							<block pos:line="468" pos:column="57">{
								<expr_stmt><expr><call><name><name pos:line="469" pos:column="65">world</name><op:operator pos:line="469" pos:column="70">.</op:operator><name pos:line="469" pos:column="71">OrderGenerator</name><op:operator pos:line="469" pos:column="85">.</op:operator><name pos:line="469" pos:column="86">Tick</name></name><argument_list pos:line="469" pos:column="90">(<argument><expr><name pos:line="469" pos:column="91">world</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="470" pos:column="65">world</name><op:operator pos:line="470" pos:column="70">.</op:operator><name pos:line="470" pos:column="71">Selection</name><op:operator pos:line="470" pos:column="80">.</op:operator><name pos:line="470" pos:column="81">Tick</name></name><argument_list pos:line="470" pos:column="85">(<argument><expr><name pos:line="470" pos:column="86">world</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

							<expr_stmt><expr><call><name><name pos:line="473" pos:column="57">world</name><op:operator pos:line="473" pos:column="62">.</op:operator><name pos:line="473" pos:column="63">Tick</name></name><argument_list pos:line="473" pos:column="67">()</argument_list></call></expr>;</expr_stmt>

							<expr_stmt><expr><call><name><name pos:line="475" pos:column="57">PerfHistory</name><op:operator pos:line="475" pos:column="68">.</op:operator><name pos:line="475" pos:column="69">Tick</name></name><argument_list pos:line="475" pos:column="73">()</argument_list></call></expr>;</expr_stmt>
						}</block></then>
						<else pos:line="477" pos:column="49">else
							<if pos:line="478" pos:column="57">if <condition pos:line="478" pos:column="60">(<expr><name><name pos:line="478" pos:column="61">orderManager</name><op:operator pos:line="478" pos:column="73">.</op:operator><name pos:line="478" pos:column="74">NetFrameNumber</name></name> <op:operator pos:line="478" pos:column="89">==</op:operator> <lit:literal type="number" pos:line="478" pos:column="92">0</lit:literal></expr>)</condition><then pos:line="478" pos:column="94">
								<expr_stmt><expr><name><name pos:line="479" pos:column="65">orderManager</name><op:operator pos:line="479" pos:column="77">.</op:operator><name pos:line="479" pos:column="78">LastTickTime</name></name> <op:operator pos:line="479" pos:column="91">=</op:operator> <name pos:line="479" pos:column="93">RunTime</name></expr>;</expr_stmt></then></if></else></if>

						<expr_stmt><expr><call><name><name pos:line="481" pos:column="49">Sync</name><op:operator pos:line="481" pos:column="53">.</op:operator><name pos:line="481" pos:column="54">CheckSyncUnchanged</name></name><argument_list pos:line="481" pos:column="72">(<argument><expr><name pos:line="481" pos:column="73">world</name></expr></argument>, <argument><expr><lambda><parameter_list pos:line="481" pos:column="80">()</parameter_list> <op:operator pos:line="481" pos:column="83">=&gt;</op:operator> <call><name><name pos:line="481" pos:column="86">world</name><op:operator pos:line="481" pos:column="91">.</op:operator><name pos:line="481" pos:column="92">TickRender</name></name><argument_list pos:line="481" pos:column="102">(<argument><expr><name pos:line="481" pos:column="103">worldRenderer</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></using>
			}</block></then></if>
		}</block></function>

		<function><type><specifier pos:line="487" pos:column="17">static</specifier> <name pos:line="487" pos:column="24">void</name></type> <name pos:line="487" pos:column="29">LogicTick</name><parameter_list pos:line="487" pos:column="38">()</parameter_list>
		<block pos:line="488" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="489" pos:column="25">delayedActions</name><op:operator pos:line="489" pos:column="39">.</op:operator><name pos:line="489" pos:column="40">PerformActions</name></name><argument_list pos:line="489" pos:column="54">()</argument_list></call></expr>;</expr_stmt>

			<if pos:line="491" pos:column="25">if <condition pos:line="491" pos:column="28">(<expr><name><name pos:line="491" pos:column="29">OrderManager</name><op:operator pos:line="491" pos:column="41">.</op:operator><name pos:line="491" pos:column="42">Connection</name><op:operator pos:line="491" pos:column="52">.</op:operator><name pos:line="491" pos:column="53">ConnectionState</name></name> <op:operator pos:line="491" pos:column="69">!=</op:operator> <name pos:line="491" pos:column="72">lastConnectionState</name></expr>)</condition><then pos:line="491" pos:column="92">
			<block pos:line="492" pos:column="25">{
				<expr_stmt><expr><name pos:line="493" pos:column="33">lastConnectionState</name> <op:operator pos:line="493" pos:column="53">=</op:operator> <name><name pos:line="493" pos:column="55">OrderManager</name><op:operator pos:line="493" pos:column="67">.</op:operator><name pos:line="493" pos:column="68">Connection</name><op:operator pos:line="493" pos:column="78">.</op:operator><name pos:line="493" pos:column="79">ConnectionState</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="494" pos:column="33">ConnectionStateChanged</name><argument_list pos:line="494" pos:column="55">(<argument><expr><name pos:line="494" pos:column="56">OrderManager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><call><name pos:line="497" pos:column="25">InnerLogicTick</name><argument_list pos:line="497" pos:column="39">(<argument><expr><name pos:line="497" pos:column="40">OrderManager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="498" pos:column="25">if <condition pos:line="498" pos:column="28">(<expr><name pos:line="498" pos:column="29">worldRenderer</name> <op:operator pos:line="498" pos:column="43">!=</op:operator> <name pos:line="498" pos:column="46">null</name> <op:operator pos:line="498" pos:column="51">&amp;&amp;</op:operator> <name><name pos:line="498" pos:column="54">OrderManager</name><op:operator pos:line="498" pos:column="66">.</op:operator><name pos:line="498" pos:column="67">World</name></name> <op:operator pos:line="498" pos:column="73">!=</op:operator> <name><name pos:line="498" pos:column="76">worldRenderer</name><op:operator pos:line="498" pos:column="89">.</op:operator><name pos:line="498" pos:column="90">World</name></name></expr>)</condition><then pos:line="498" pos:column="96">
				<expr_stmt><expr><call><name pos:line="499" pos:column="33">InnerLogicTick</name><argument_list pos:line="499" pos:column="47">(<argument><expr><name><name pos:line="499" pos:column="48">worldRenderer</name><op:operator pos:line="499" pos:column="61">.</op:operator><name pos:line="499" pos:column="62">World</name><op:operator pos:line="499" pos:column="67">.</op:operator><name pos:line="499" pos:column="68">OrderManager</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="502" pos:column="17">public</specifier> <specifier pos:line="502" pos:column="24">static</specifier> <name pos:line="502" pos:column="31">bool</name></type> <name pos:line="502" pos:column="36">TakeScreenshot</name> <init pos:line="502" pos:column="51">= <expr><lit:literal type="boolean" pos:line="502" pos:column="53">false</lit:literal></expr></init></decl>;</decl_stmt>

		<function><type><specifier pos:line="504" pos:column="17">static</specifier> <name pos:line="504" pos:column="24">void</name></type> <name pos:line="504" pos:column="29">RenderTick</name><parameter_list pos:line="504" pos:column="39">()</parameter_list>
		<block pos:line="505" pos:column="17">{
			<using pos:line="506" pos:column="25">using (<expr><op:operator pos:line="506" pos:column="32">new</op:operator> <call><name pos:line="506" pos:column="36">PerfSample</name><argument_list pos:line="506" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="506" pos:column="47">"render"</lit:literal></expr></argument>)</argument_list></call></expr>)
			<block pos:line="507" pos:column="25">{
				<expr_stmt><expr><op:operator pos:line="508" pos:column="33">++</op:operator><name pos:line="508" pos:column="35">RenderFrame</name></expr>;</expr_stmt>

				<comment type="line" pos:line="510" pos:column="33">// worldRenderer is null during the initial install/download screen</comment>
				<if pos:line="511" pos:column="33">if <condition pos:line="511" pos:column="36">(<expr><name pos:line="511" pos:column="37">worldRenderer</name> <op:operator pos:line="511" pos:column="51">!=</op:operator> <name pos:line="511" pos:column="54">null</name></expr>)</condition><then pos:line="511" pos:column="59">
				<block pos:line="512" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="513" pos:column="41">Renderer</name><op:operator pos:line="513" pos:column="49">.</op:operator><name pos:line="513" pos:column="50">BeginFrame</name></name><argument_list pos:line="513" pos:column="60">(<argument><expr><name><name pos:line="513" pos:column="61">worldRenderer</name><op:operator pos:line="513" pos:column="74">.</op:operator><name pos:line="513" pos:column="75">Viewport</name><op:operator pos:line="513" pos:column="83">.</op:operator><name pos:line="513" pos:column="84">TopLeft</name></name></expr></argument>, <argument><expr><name><name pos:line="513" pos:column="93">worldRenderer</name><op:operator pos:line="513" pos:column="106">.</op:operator><name pos:line="513" pos:column="107">Viewport</name><op:operator pos:line="513" pos:column="115">.</op:operator><name pos:line="513" pos:column="116">Zoom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="514" pos:column="41">Sound</name><op:operator pos:line="514" pos:column="46">.</op:operator><name pos:line="514" pos:column="47">SetListenerPosition</name></name><argument_list pos:line="514" pos:column="66">(<argument><expr><name><name pos:line="514" pos:column="67">worldRenderer</name><op:operator pos:line="514" pos:column="80">.</op:operator><name pos:line="514" pos:column="81">Viewport</name><op:operator pos:line="514" pos:column="89">.</op:operator><name pos:line="514" pos:column="90">CenterPosition</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="515" pos:column="41">worldRenderer</name><op:operator pos:line="515" pos:column="54">.</op:operator><name pos:line="515" pos:column="55">Draw</name></name><argument_list pos:line="515" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="517" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="518" pos:column="41">Renderer</name><op:operator pos:line="518" pos:column="49">.</op:operator><name pos:line="518" pos:column="50">BeginFrame</name></name><argument_list pos:line="518" pos:column="60">(<argument><expr><name><name pos:line="518" pos:column="61">int2</name><op:operator pos:line="518" pos:column="65">.</op:operator><name pos:line="518" pos:column="66">Zero</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="518" pos:column="72">1f</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

				<using pos:line="520" pos:column="33">using (<expr><op:operator pos:line="520" pos:column="40">new</op:operator> <call><name pos:line="520" pos:column="44">PerfSample</name><argument_list pos:line="520" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="520" pos:column="55">"render_widgets"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<block pos:line="521" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="522" pos:column="41">Game</name><op:operator pos:line="522" pos:column="45">.</op:operator><name pos:line="522" pos:column="46">Renderer</name><op:operator pos:line="522" pos:column="54">.</op:operator><name pos:line="522" pos:column="55">WorldVoxelRenderer</name><op:operator pos:line="522" pos:column="73">.</op:operator><name pos:line="522" pos:column="74">BeginFrame</name></name><argument_list pos:line="522" pos:column="84">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="523" pos:column="41">Ui</name><op:operator pos:line="523" pos:column="43">.</op:operator><name pos:line="523" pos:column="44">PrepareRenderables</name></name><argument_list pos:line="523" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="524" pos:column="41">Game</name><op:operator pos:line="524" pos:column="45">.</op:operator><name pos:line="524" pos:column="46">Renderer</name><op:operator pos:line="524" pos:column="54">.</op:operator><name pos:line="524" pos:column="55">WorldVoxelRenderer</name><op:operator pos:line="524" pos:column="73">.</op:operator><name pos:line="524" pos:column="74">EndFrame</name></name><argument_list pos:line="524" pos:column="82">()</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><name pos:line="526" pos:column="41">Ui</name><op:operator pos:line="526" pos:column="43">.</op:operator><name pos:line="526" pos:column="44">Draw</name></name><argument_list pos:line="526" pos:column="48">()</argument_list></call></expr>;</expr_stmt>

					<if pos:line="528" pos:column="41">if <condition pos:line="528" pos:column="44">(<expr><name pos:line="528" pos:column="45">ModData</name> <op:operator pos:line="528" pos:column="53">!=</op:operator> <name pos:line="528" pos:column="56">null</name> <op:operator pos:line="528" pos:column="61">&amp;&amp;</op:operator> <name><name pos:line="528" pos:column="64">ModData</name><op:operator pos:line="528" pos:column="71">.</op:operator><name pos:line="528" pos:column="72">CursorProvider</name></name> <op:operator pos:line="528" pos:column="87">!=</op:operator> <name pos:line="528" pos:column="90">null</name></expr>)</condition><then pos:line="528" pos:column="95">
					<block pos:line="529" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="530" pos:column="49">Cursor</name><op:operator pos:line="530" pos:column="55">.</op:operator><name pos:line="530" pos:column="56">SetCursor</name></name><argument_list pos:line="530" pos:column="65">(<argument><expr><call><name><name pos:line="530" pos:column="66">Ui</name><op:operator pos:line="530" pos:column="68">.</op:operator><name pos:line="530" pos:column="69">Root</name><op:operator pos:line="530" pos:column="73">.</op:operator><name pos:line="530" pos:column="74">GetCursorOuter</name></name><argument_list pos:line="530" pos:column="88">(<argument><expr><name><name pos:line="530" pos:column="89">Viewport</name><op:operator pos:line="530" pos:column="97">.</op:operator><name pos:line="530" pos:column="98">LastMousePos</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="530" pos:column="112">??</op:operator> <lit:literal type="string" pos:line="530" pos:column="115">"default"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="531" pos:column="49">Cursor</name><op:operator pos:line="531" pos:column="55">.</op:operator><name pos:line="531" pos:column="56">Render</name></name><argument_list pos:line="531" pos:column="62">(<argument><expr><name pos:line="531" pos:column="63">Renderer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></using>

				<using pos:line="535" pos:column="33">using (<expr><op:operator pos:line="535" pos:column="40">new</op:operator> <call><name pos:line="535" pos:column="44">PerfSample</name><argument_list pos:line="535" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="535" pos:column="55">"render_flip"</lit:literal></expr></argument>)</argument_list></call></expr>)
					<expr_stmt><expr><call><name><name pos:line="536" pos:column="41">Renderer</name><op:operator pos:line="536" pos:column="49">.</op:operator><name pos:line="536" pos:column="50">EndFrame</name></name><argument_list pos:line="536" pos:column="58">(<argument><expr><op:operator pos:line="536" pos:column="59">new</op:operator> <call><name pos:line="536" pos:column="63">DefaultInputHandler</name><argument_list pos:line="536" pos:column="82">(<argument><expr><name><name pos:line="536" pos:column="83">OrderManager</name><op:operator pos:line="536" pos:column="95">.</op:operator><name pos:line="536" pos:column="96">World</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>

				<if pos:line="538" pos:column="33">if <condition pos:line="538" pos:column="36">(<expr><name pos:line="538" pos:column="37">TakeScreenshot</name></expr>)</condition><then pos:line="538" pos:column="52">
				<block pos:line="539" pos:column="33">{
					<expr_stmt><expr><name pos:line="540" pos:column="41">TakeScreenshot</name> <op:operator pos:line="540" pos:column="56">=</op:operator> <lit:literal type="boolean" pos:line="540" pos:column="58">false</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="541" pos:column="41">TakeScreenshotInner</name><argument_list pos:line="541" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></using>

			<expr_stmt><expr><name><name pos:line="545" pos:column="25">PerfHistory</name><op:operator pos:line="545" pos:column="36">.</op:operator><name pos:line="545" pos:column="37">Items</name><index pos:line="545" pos:column="42">[<expr><lit:literal type="string" pos:line="545" pos:column="43">"render"</lit:literal></expr>]</index></name><op:operator pos:line="545" pos:column="52">.</op:operator><call><name pos:line="545" pos:column="53">Tick</name><argument_list pos:line="545" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="546" pos:column="25">PerfHistory</name><op:operator pos:line="546" pos:column="36">.</op:operator><name pos:line="546" pos:column="37">Items</name><index pos:line="546" pos:column="42">[<expr><lit:literal type="string" pos:line="546" pos:column="43">"batches"</lit:literal></expr>]</index></name><op:operator pos:line="546" pos:column="53">.</op:operator><call><name pos:line="546" pos:column="54">Tick</name><argument_list pos:line="546" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="547" pos:column="25">PerfHistory</name><op:operator pos:line="547" pos:column="36">.</op:operator><name pos:line="547" pos:column="37">Items</name><index pos:line="547" pos:column="42">[<expr><lit:literal type="string" pos:line="547" pos:column="43">"render_widgets"</lit:literal></expr>]</index></name><op:operator pos:line="547" pos:column="60">.</op:operator><call><name pos:line="547" pos:column="61">Tick</name><argument_list pos:line="547" pos:column="65">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="548" pos:column="25">PerfHistory</name><op:operator pos:line="548" pos:column="36">.</op:operator><name pos:line="548" pos:column="37">Items</name><index pos:line="548" pos:column="42">[<expr><lit:literal type="string" pos:line="548" pos:column="43">"render_flip"</lit:literal></expr>]</index></name><op:operator pos:line="548" pos:column="57">.</op:operator><call><name pos:line="548" pos:column="58">Tick</name><argument_list pos:line="548" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="551" pos:column="17">static</specifier> <name pos:line="551" pos:column="24">void</name></type> <name pos:line="551" pos:column="29">Loop</name><parameter_list pos:line="551" pos:column="33">()</parameter_list>
		<block pos:line="552" pos:column="17">{
			<comment type="line" pos:line="553" pos:column="25">// The game loop mainly does two things: logic updates and</comment>
			<comment type="line" pos:line="554" pos:column="25">// drawing on the screen.</comment>
			<comment type="line" pos:line="555" pos:column="25">// ---</comment>
			<comment type="line" pos:line="556" pos:column="25">// We ideally want the logic to run every 'Timestep' ms and</comment>
			<comment type="line" pos:line="557" pos:column="25">// rendering to be done at 'MaxFramerate', so 1000 / MaxFramerate ms.</comment>
			<comment type="line" pos:line="558" pos:column="25">// Any additional free time is used in 'Sleep' so we don't</comment>
			<comment type="line" pos:line="559" pos:column="25">// consume more CPU/GPU resources than necessary.</comment>
			<comment type="line" pos:line="560" pos:column="25">// ---</comment>
			<comment type="line" pos:line="561" pos:column="25">// In case logic or rendering takes more time than the ideal</comment>
			<comment type="line" pos:line="562" pos:column="25">// and we're getting behind, we can skip rendering some frames</comment>
			<comment type="line" pos:line="563" pos:column="25">// but there's a fail-safe minimum FPS to make sure the screen</comment>
			<comment type="line" pos:line="564" pos:column="25">// gets updated at least that often.</comment>
			<comment type="line" pos:line="565" pos:column="25">// ---</comment>
			<comment type="line" pos:line="566" pos:column="25">// TODO: Separate world/UI rendering</comment>
			<comment type="line" pos:line="567" pos:column="25">// It would be nice to separate the world rendering from the UI rendering</comment>
			<comment type="line" pos:line="568" pos:column="25">// so that we can update the UI more often than the world. This would</comment>
			<comment type="line" pos:line="569" pos:column="25">// help make the game playable (mouse/controls) even in low world</comment>
			<comment type="line" pos:line="570" pos:column="25">// framerates.</comment>
			<comment type="line" pos:line="571" pos:column="25">// It's not possible at the moment because the render buffer is cleared</comment>
			<comment type="line" pos:line="572" pos:column="25">// before rendering and we don't keep the last rendered world buffer.</comment>

			<comment type="line" pos:line="574" pos:column="25">// When the logic has fallen behind by this much, skip the pending</comment>
			<comment type="line" pos:line="575" pos:column="25">// updates and start fresh.</comment>
			<comment type="line" pos:line="576" pos:column="25">// For example, if we want to update logic every 10 ms but each loop</comment>
			<comment type="line" pos:line="577" pos:column="25">// temporarily takes 100 ms, the 'nextLogic' timestamp will be too low</comment>
			<comment type="line" pos:line="578" pos:column="25">// and the current timestamp ('now') will have moved on. Even if the</comment>
			<comment type="line" pos:line="579" pos:column="25">// update time returns to normal, it will take a long time to catch up</comment>
			<comment type="line" pos:line="580" pos:column="25">// (if ever).</comment>
			<comment type="line" pos:line="581" pos:column="25">// This also means that the 'logicInterval' cannot be longer than this</comment>
			<comment type="line" pos:line="582" pos:column="25">// value.</comment>
			<decl_stmt><decl><type><specifier pos:line="583" pos:column="25">const</specifier> <name pos:line="583" pos:column="31">int</name></type> <name pos:line="583" pos:column="35">MaxLogicTicksBehind</name> <init pos:line="583" pos:column="55">= <expr><lit:literal type="number" pos:line="583" pos:column="57">250</lit:literal></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="585" pos:column="25">// Try to maintain at least this many FPS during replays, even if it slows down logic.</comment>
			<comment type="line" pos:line="586" pos:column="25">// However, if the user has enabled a framerate limit that is even lower</comment>
			<comment type="line" pos:line="587" pos:column="25">// than this, then that limit will be used.</comment>
			<decl_stmt><decl><type><specifier pos:line="588" pos:column="25">const</specifier> <name pos:line="588" pos:column="31">int</name></type> <name pos:line="588" pos:column="35">MinReplayFps</name> <init pos:line="588" pos:column="48">= <expr><lit:literal type="number" pos:line="588" pos:column="50">10</lit:literal></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="590" pos:column="25">// Timestamps for when the next logic and rendering should run</comment>
			<decl_stmt><decl><type><name pos:line="591" pos:column="25">var</name></type> <name pos:line="591" pos:column="29">nextLogic</name> <init pos:line="591" pos:column="39">= <expr><name pos:line="591" pos:column="41">RunTime</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="592" pos:column="25">var</name></type> <name pos:line="592" pos:column="29">nextRender</name> <init pos:line="592" pos:column="40">= <expr><name pos:line="592" pos:column="42">RunTime</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="593" pos:column="25">var</name></type> <name pos:line="593" pos:column="29">forcedNextRender</name> <init pos:line="593" pos:column="46">= <expr><name pos:line="593" pos:column="48">RunTime</name></expr></init></decl>;</decl_stmt>

			<while pos:line="595" pos:column="25">while <condition pos:line="595" pos:column="31">(<expr><name pos:line="595" pos:column="32">state</name> <op:operator pos:line="595" pos:column="38">==</op:operator> <name><name pos:line="595" pos:column="41">RunStatus</name><op:operator pos:line="595" pos:column="50">.</op:operator><name pos:line="595" pos:column="51">Running</name></name></expr>)</condition>
			<block pos:line="596" pos:column="25">{
				<comment type="line" pos:line="597" pos:column="33">// Ideal time between logic updates. Timestep = 0 means the game is paused</comment>
				<comment type="line" pos:line="598" pos:column="33">// but we still call LogicTick() because it handles pausing internally.</comment>
				<decl_stmt><decl><type><name pos:line="599" pos:column="33">var</name></type> <name pos:line="599" pos:column="37">logicInterval</name> <init pos:line="599" pos:column="51">= <expr><name pos:line="599" pos:column="53">worldRenderer</name> <op:operator pos:line="599" pos:column="67">!=</op:operator> <name pos:line="599" pos:column="70">null</name> <op:operator pos:line="599" pos:column="75">&amp;&amp;</op:operator> <name><name pos:line="599" pos:column="78">worldRenderer</name><op:operator pos:line="599" pos:column="91">.</op:operator><name pos:line="599" pos:column="92">World</name><op:operator pos:line="599" pos:column="97">.</op:operator><name pos:line="599" pos:column="98">Timestep</name></name> <op:operator pos:line="599" pos:column="107">!=</op:operator> <lit:literal type="number" pos:line="599" pos:column="110">0</lit:literal> <op:operator pos:line="599" pos:column="112">?</op:operator> <name><name pos:line="599" pos:column="114">worldRenderer</name><op:operator pos:line="599" pos:column="127">.</op:operator><name pos:line="599" pos:column="128">World</name><op:operator pos:line="599" pos:column="133">.</op:operator><name pos:line="599" pos:column="134">Timestep</name></name> <op:operator pos:line="599" pos:column="143">:</op:operator> <name><name pos:line="599" pos:column="145">Game</name><op:operator pos:line="599" pos:column="149">.</op:operator><name pos:line="599" pos:column="150">Timestep</name></name></expr></init></decl>;</decl_stmt>

				<comment type="line" pos:line="601" pos:column="33">// Ideal time between screen updates</comment>
				<decl_stmt><decl><type><name pos:line="602" pos:column="33">var</name></type> <name pos:line="602" pos:column="37">maxFramerate</name> <init pos:line="602" pos:column="50">= <expr><name><name pos:line="602" pos:column="52">Settings</name><op:operator pos:line="602" pos:column="60">.</op:operator><name pos:line="602" pos:column="61">Graphics</name><op:operator pos:line="602" pos:column="69">.</op:operator><name pos:line="602" pos:column="70">CapFramerate</name> <type:modifier pos:line="602" pos:column="83">?</type:modifier></name> <call><name><name pos:line="602" pos:column="85">Settings</name><op:operator pos:line="602" pos:column="93">.</op:operator><name pos:line="602" pos:column="94">Graphics</name><op:operator pos:line="602" pos:column="102">.</op:operator><name pos:line="602" pos:column="103">MaxFramerate</name><op:operator pos:line="602" pos:column="115">.</op:operator><name pos:line="602" pos:column="116">Clamp</name></name><argument_list pos:line="602" pos:column="121">(<argument><expr><lit:literal type="number" pos:line="602" pos:column="122">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="602" pos:column="125">1000</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="602" pos:column="131">:</op:operator> <lit:literal type="number" pos:line="602" pos:column="133">1000</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="603" pos:column="33">var</name></type> <name pos:line="603" pos:column="37">renderInterval</name> <init pos:line="603" pos:column="52">= <expr><lit:literal type="number" pos:line="603" pos:column="54">1000</lit:literal> <op:operator pos:line="603" pos:column="59">/</op:operator> <name pos:line="603" pos:column="61">maxFramerate</name></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="605" pos:column="33">var</name></type> <name pos:line="605" pos:column="37">now</name> <init pos:line="605" pos:column="41">= <expr><name pos:line="605" pos:column="43">RunTime</name></expr></init></decl>;</decl_stmt>

				<comment type="line" pos:line="607" pos:column="33">// If the logic has fallen behind too much, skip it and catch up</comment>
				<if pos:line="608" pos:column="33">if <condition pos:line="608" pos:column="36">(<expr><name pos:line="608" pos:column="37">now</name> <op:operator pos:line="608" pos:column="41">-</op:operator> <name pos:line="608" pos:column="43">nextLogic</name> <op:operator pos:line="608" pos:column="53">&gt;</op:operator> <name pos:line="608" pos:column="55">MaxLogicTicksBehind</name></expr>)</condition><then pos:line="608" pos:column="75">
					<expr_stmt><expr><name pos:line="609" pos:column="41">nextLogic</name> <op:operator pos:line="609" pos:column="51">=</op:operator> <name pos:line="609" pos:column="53">now</name></expr>;</expr_stmt></then></if>

				<comment type="line" pos:line="611" pos:column="33">// When's the next update (logic or render)</comment>
				<decl_stmt><decl><type><name pos:line="612" pos:column="33">var</name></type> <name pos:line="612" pos:column="37">nextUpdate</name> <init pos:line="612" pos:column="48">= <expr><call><name><name pos:line="612" pos:column="50">Math</name><op:operator pos:line="612" pos:column="54">.</op:operator><name pos:line="612" pos:column="55">Min</name></name><argument_list pos:line="612" pos:column="58">(<argument><expr><name pos:line="612" pos:column="59">nextLogic</name></expr></argument>, <argument><expr><name pos:line="612" pos:column="70">nextRender</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="613" pos:column="33">if <condition pos:line="613" pos:column="36">(<expr><name pos:line="613" pos:column="37">now</name> <op:operator pos:line="613" pos:column="41">&gt;=</op:operator> <name pos:line="613" pos:column="44">nextUpdate</name></expr>)</condition><then pos:line="613" pos:column="55">
				<block pos:line="614" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="615" pos:column="41">var</name></type> <name pos:line="615" pos:column="45">forceRender</name> <init pos:line="615" pos:column="57">= <expr><name pos:line="615" pos:column="59">now</name> <op:operator pos:line="615" pos:column="63">&gt;=</op:operator> <name pos:line="615" pos:column="66">forcedNextRender</name></expr></init></decl>;</decl_stmt>

					<if pos:line="617" pos:column="41">if <condition pos:line="617" pos:column="44">(<expr><name pos:line="617" pos:column="45">now</name> <op:operator pos:line="617" pos:column="49">&gt;=</op:operator> <name pos:line="617" pos:column="52">nextLogic</name></expr>)</condition><then pos:line="617" pos:column="62">
					<block pos:line="618" pos:column="41">{
						<expr_stmt><expr><name pos:line="619" pos:column="49">nextLogic</name> <op:operator pos:line="619" pos:column="59">+=</op:operator> <name pos:line="619" pos:column="62">logicInterval</name></expr>;</expr_stmt>

						<expr_stmt><expr><call><name pos:line="621" pos:column="49">LogicTick</name><argument_list pos:line="621" pos:column="58">()</argument_list></call></expr>;</expr_stmt>

						<comment type="line" pos:line="623" pos:column="49">// Force at least one render per tick during regular gameplay</comment>
						<if pos:line="624" pos:column="49">if <condition pos:line="624" pos:column="52">(<expr><name><name pos:line="624" pos:column="53">OrderManager</name><op:operator pos:line="624" pos:column="65">.</op:operator><name pos:line="624" pos:column="66">World</name></name> <op:operator pos:line="624" pos:column="72">!=</op:operator> <name pos:line="624" pos:column="75">null</name> <op:operator pos:line="624" pos:column="80">&amp;&amp;</op:operator> <op:operator pos:line="624" pos:column="83">!</op:operator><name><name pos:line="624" pos:column="84">OrderManager</name><op:operator pos:line="624" pos:column="96">.</op:operator><name pos:line="624" pos:column="97">World</name><op:operator pos:line="624" pos:column="102">.</op:operator><name pos:line="624" pos:column="103">IsReplay</name></name></expr>)</condition><then pos:line="624" pos:column="112">
							<expr_stmt><expr><name pos:line="625" pos:column="57">forceRender</name> <op:operator pos:line="625" pos:column="69">=</op:operator> <lit:literal type="boolean" pos:line="625" pos:column="71">true</lit:literal></expr>;</expr_stmt></then></if>
					}</block></then></if>

					<decl_stmt><decl><type><name pos:line="628" pos:column="41">var</name></type> <name pos:line="628" pos:column="45">haveSomeTimeUntilNextLogic</name> <init pos:line="628" pos:column="72">= <expr><name pos:line="628" pos:column="74">now</name> <op:operator pos:line="628" pos:column="78">&lt;</op:operator> <name pos:line="628" pos:column="80">nextLogic</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="629" pos:column="41">var</name></type> <name pos:line="629" pos:column="45">isTimeToRender</name> <init pos:line="629" pos:column="60">= <expr><name pos:line="629" pos:column="62">now</name> <op:operator pos:line="629" pos:column="66">&gt;=</op:operator> <name pos:line="629" pos:column="69">nextRender</name></expr></init></decl>;</decl_stmt>

					<if pos:line="631" pos:column="41">if <condition pos:line="631" pos:column="44">(<expr><op:operator pos:line="631" pos:column="45">(</op:operator><name pos:line="631" pos:column="46">isTimeToRender</name> <op:operator pos:line="631" pos:column="61">&amp;&amp;</op:operator> <name pos:line="631" pos:column="64">haveSomeTimeUntilNextLogic</name><op:operator pos:line="631" pos:column="90">)</op:operator> <op:operator pos:line="631" pos:column="92">||</op:operator> <name pos:line="631" pos:column="95">forceRender</name></expr>)</condition><then pos:line="631" pos:column="107">
					<block pos:line="632" pos:column="41">{
						<expr_stmt><expr><name pos:line="633" pos:column="49">nextRender</name> <op:operator pos:line="633" pos:column="60">=</op:operator> <name pos:line="633" pos:column="62">now</name> <op:operator pos:line="633" pos:column="66">+</op:operator> <name pos:line="633" pos:column="68">renderInterval</name></expr>;</expr_stmt>

						<comment type="line" pos:line="635" pos:column="49">// Pick the minimum allowed FPS (the lower between 'minReplayFPS'</comment>
						<comment type="line" pos:line="636" pos:column="49">// and the user's max frame rate) and convert it to maximum time</comment>
						<comment type="line" pos:line="637" pos:column="49">// allowed between screen updates.</comment>
						<comment type="line" pos:line="638" pos:column="49">// We do this before rendering to include the time rendering takes</comment>
						<comment type="line" pos:line="639" pos:column="49">// in this interval.</comment>
						<decl_stmt><decl><type><name pos:line="640" pos:column="49">var</name></type> <name pos:line="640" pos:column="53">maxRenderInterval</name> <init pos:line="640" pos:column="71">= <expr><call><name><name pos:line="640" pos:column="73">Math</name><op:operator pos:line="640" pos:column="77">.</op:operator><name pos:line="640" pos:column="78">Max</name></name><argument_list pos:line="640" pos:column="81">(<argument><expr><lit:literal type="number" pos:line="640" pos:column="82">1000</lit:literal> <op:operator pos:line="640" pos:column="87">/</op:operator> <name pos:line="640" pos:column="89">MinReplayFps</name></expr></argument>, <argument><expr><name pos:line="640" pos:column="103">renderInterval</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name pos:line="641" pos:column="49">forcedNextRender</name> <op:operator pos:line="641" pos:column="66">=</op:operator> <name pos:line="641" pos:column="68">now</name> <op:operator pos:line="641" pos:column="72">+</op:operator> <name pos:line="641" pos:column="74">maxRenderInterval</name></expr>;</expr_stmt>

						<expr_stmt><expr><call><name pos:line="643" pos:column="49">RenderTick</name><argument_list pos:line="643" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then>
				<else pos:line="646" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="647" pos:column="41">Thread</name><op:operator pos:line="647" pos:column="47">.</op:operator><name pos:line="647" pos:column="48">Sleep</name></name><argument_list pos:line="647" pos:column="53">(<argument><expr><name pos:line="647" pos:column="54">nextUpdate</name> <op:operator pos:line="647" pos:column="65">-</op:operator> <name pos:line="647" pos:column="67">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></while>
		}</block></function>

		<function><type><specifier pos:line="651" pos:column="17">internal</specifier> <specifier pos:line="651" pos:column="26">static</specifier> <name pos:line="651" pos:column="33">RunStatus</name></type> <name pos:line="651" pos:column="43">Run</name><parameter_list pos:line="651" pos:column="46">()</parameter_list>
		<block pos:line="652" pos:column="17">{
			<if pos:line="653" pos:column="25">if <condition pos:line="653" pos:column="28">(<expr><name><name pos:line="653" pos:column="29">Settings</name><op:operator pos:line="653" pos:column="37">.</op:operator><name pos:line="653" pos:column="38">Graphics</name><op:operator pos:line="653" pos:column="46">.</op:operator><name pos:line="653" pos:column="47">MaxFramerate</name></name> <op:operator pos:line="653" pos:column="60">&lt;</op:operator> <lit:literal type="number" pos:line="653" pos:column="62">1</lit:literal></expr>)</condition><then pos:line="653" pos:column="64">
			<block pos:line="654" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="655" pos:column="33">Settings</name><op:operator pos:line="655" pos:column="41">.</op:operator><name pos:line="655" pos:column="42">Graphics</name><op:operator pos:line="655" pos:column="50">.</op:operator><name pos:line="655" pos:column="51">MaxFramerate</name></name> <op:operator pos:line="655" pos:column="64">=</op:operator> <op:operator pos:line="655" pos:column="66">new</op:operator> <call><name pos:line="655" pos:column="70">GraphicSettings</name><argument_list pos:line="655" pos:column="85">()</argument_list></call><op:operator pos:line="655" pos:column="87">.</op:operator><name pos:line="655" pos:column="88">MaxFramerate</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="656" pos:column="33">Settings</name><op:operator pos:line="656" pos:column="41">.</op:operator><name pos:line="656" pos:column="42">Graphics</name><op:operator pos:line="656" pos:column="50">.</op:operator><name pos:line="656" pos:column="51">CapFramerate</name></name> <op:operator pos:line="656" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="656" pos:column="66">false</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<try pos:line="659" pos:column="25">try
			<block pos:line="660" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="661" pos:column="33">Loop</name><argument_list pos:line="661" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
			}</block>
			<finally pos:line="663" pos:column="25">finally
			<block pos:line="664" pos:column="25">{
				<comment type="line" pos:line="665" pos:column="33">// Ensure that the active replay is properly saved</comment>
				<if pos:line="666" pos:column="33">if <condition pos:line="666" pos:column="36">(<expr><name pos:line="666" pos:column="37">OrderManager</name> <op:operator pos:line="666" pos:column="50">!=</op:operator> <name pos:line="666" pos:column="53">null</name></expr>)</condition><then pos:line="666" pos:column="58">
					<expr_stmt><expr><call><name><name pos:line="667" pos:column="41">OrderManager</name><op:operator pos:line="667" pos:column="53">.</op:operator><name pos:line="667" pos:column="54">Dispose</name></name><argument_list pos:line="667" pos:column="61">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></finally></try>

			<if pos:line="670" pos:column="25">if <condition pos:line="670" pos:column="28">(<expr><name pos:line="670" pos:column="29">worldRenderer</name> <op:operator pos:line="670" pos:column="43">!=</op:operator> <name pos:line="670" pos:column="46">null</name></expr>)</condition><then pos:line="670" pos:column="51">
				<expr_stmt><expr><call><name><name pos:line="671" pos:column="33">worldRenderer</name><op:operator pos:line="671" pos:column="46">.</op:operator><name pos:line="671" pos:column="47">Dispose</name></name><argument_list pos:line="671" pos:column="54">()</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name><name pos:line="672" pos:column="25">ModData</name><op:operator pos:line="672" pos:column="32">.</op:operator><name pos:line="672" pos:column="33">Dispose</name></name><argument_list pos:line="672" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="673" pos:column="25">ChromeProvider</name><op:operator pos:line="673" pos:column="39">.</op:operator><name pos:line="673" pos:column="40">Deinitialize</name></name><argument_list pos:line="673" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="674" pos:column="25">Renderer</name><op:operator pos:line="674" pos:column="33">.</op:operator><name pos:line="674" pos:column="34">Dispose</name></name><argument_list pos:line="674" pos:column="41">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="676" pos:column="25">OnQuit</name><argument_list pos:line="676" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

			<return pos:line="678" pos:column="25">return <expr><name pos:line="678" pos:column="32">state</name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="681" pos:column="17">public</specifier> <specifier pos:line="681" pos:column="24">static</specifier> <name pos:line="681" pos:column="31">void</name></type> <name pos:line="681" pos:column="36">Exit</name><parameter_list pos:line="681" pos:column="40">()</parameter_list>
		<block pos:line="682" pos:column="17">{
			<expr_stmt><expr><name pos:line="683" pos:column="25">state</name> <op:operator pos:line="683" pos:column="31">=</op:operator> <name><name pos:line="683" pos:column="33">RunStatus</name><op:operator pos:line="683" pos:column="42">.</op:operator><name pos:line="683" pos:column="43">Success</name></name></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="686" pos:column="17">public</specifier> <specifier pos:line="686" pos:column="24">static</specifier> <name pos:line="686" pos:column="31">void</name></type> <name pos:line="686" pos:column="36">Restart</name><parameter_list pos:line="686" pos:column="43">()</parameter_list>
		<block pos:line="687" pos:column="17">{
			<expr_stmt><expr><name pos:line="688" pos:column="25">state</name> <op:operator pos:line="688" pos:column="31">=</op:operator> <name><name pos:line="688" pos:column="33">RunStatus</name><op:operator pos:line="688" pos:column="42">.</op:operator><name pos:line="688" pos:column="43">Restart</name></name></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="691" pos:column="17">public</specifier> <specifier pos:line="691" pos:column="24">static</specifier> <name pos:line="691" pos:column="31">void</name></type> <name pos:line="691" pos:column="36">AddChatLine</name><parameter_list pos:line="691" pos:column="47">(<param><decl><type><name pos:line="691" pos:column="48">Color</name></type> <name pos:line="691" pos:column="54">color</name></decl></param>, <param><decl><type><name pos:line="691" pos:column="61">string</name></type> <name pos:line="691" pos:column="68">name</name></decl></param>, <param><decl><type><name pos:line="691" pos:column="74">string</name></type> <name pos:line="691" pos:column="81">text</name></decl></param>)</parameter_list>
		<block pos:line="692" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="693" pos:column="25">OrderManager</name><op:operator pos:line="693" pos:column="37">.</op:operator><name pos:line="693" pos:column="38">AddChatLine</name></name><argument_list pos:line="693" pos:column="49">(<argument><expr><name pos:line="693" pos:column="50">color</name></expr></argument>, <argument><expr><name pos:line="693" pos:column="57">name</name></expr></argument>, <argument><expr><name pos:line="693" pos:column="63">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="696" pos:column="17">public</specifier> <specifier pos:line="696" pos:column="24">static</specifier> <name pos:line="696" pos:column="31">void</name></type> <name pos:line="696" pos:column="36">Debug</name><parameter_list pos:line="696" pos:column="41">(<param><decl><type><name pos:line="696" pos:column="42">string</name></type> <name pos:line="696" pos:column="49">s</name></decl></param>, <param><decl><type><specifier pos:line="696" pos:column="52">params</specifier> <name><name pos:line="696" pos:column="59">object</name><index pos:line="696" pos:column="65">[]</index></name></type> <name pos:line="696" pos:column="68">args</name></decl></param>)</parameter_list>
		<block pos:line="697" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="698" pos:column="25">AddChatLine</name><argument_list pos:line="698" pos:column="36">(<argument><expr><name><name pos:line="698" pos:column="37">Color</name><op:operator pos:line="698" pos:column="42">.</op:operator><name pos:line="698" pos:column="43">White</name></name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="698" pos:column="50">"Debug"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="698" pos:column="59">string</name><op:operator pos:line="698" pos:column="65">.</op:operator><name pos:line="698" pos:column="66">Format</name></name><argument_list pos:line="698" pos:column="72">(<argument><expr><name pos:line="698" pos:column="73">s</name></expr></argument>, <argument><expr><name pos:line="698" pos:column="76">args</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="701" pos:column="17">public</specifier> <specifier pos:line="701" pos:column="24">static</specifier> <name pos:line="701" pos:column="31">void</name></type> <name pos:line="701" pos:column="36">Disconnect</name><parameter_list pos:line="701" pos:column="46">()</parameter_list>
		<block pos:line="702" pos:column="17">{
			<if pos:line="703" pos:column="25">if <condition pos:line="703" pos:column="28">(<expr><name><name pos:line="703" pos:column="29">OrderManager</name><op:operator pos:line="703" pos:column="41">.</op:operator><name pos:line="703" pos:column="42">World</name></name> <op:operator pos:line="703" pos:column="48">!=</op:operator> <name pos:line="703" pos:column="51">null</name></expr>)</condition><then pos:line="703" pos:column="56">
				<expr_stmt><expr><call><name><name pos:line="704" pos:column="33">OrderManager</name><op:operator pos:line="704" pos:column="45">.</op:operator><name pos:line="704" pos:column="46">World</name><op:operator pos:line="704" pos:column="51">.</op:operator><name pos:line="704" pos:column="52">TraitDict</name><op:operator pos:line="704" pos:column="61">.</op:operator><name pos:line="704" pos:column="62">PrintReport</name></name><argument_list pos:line="704" pos:column="73">()</argument_list></call></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="706" pos:column="25">OrderManager</name><op:operator pos:line="706" pos:column="37">.</op:operator><name pos:line="706" pos:column="38">Dispose</name></name><argument_list pos:line="706" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="707" pos:column="25">CloseServer</name><argument_list pos:line="707" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="708" pos:column="25">JoinLocal</name><argument_list pos:line="708" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="711" pos:column="17">public</specifier> <specifier pos:line="711" pos:column="24">static</specifier> <name pos:line="711" pos:column="31">void</name></type> <name pos:line="711" pos:column="36">CloseServer</name><parameter_list pos:line="711" pos:column="47">()</parameter_list>
		<block pos:line="712" pos:column="17">{
			<if pos:line="713" pos:column="25">if <condition pos:line="713" pos:column="28">(<expr><name pos:line="713" pos:column="29">server</name> <op:operator pos:line="713" pos:column="36">!=</op:operator> <name pos:line="713" pos:column="39">null</name></expr>)</condition><then pos:line="713" pos:column="44">
				<expr_stmt><expr><call><name><name pos:line="714" pos:column="33">server</name><op:operator pos:line="714" pos:column="39">.</op:operator><name pos:line="714" pos:column="40">Shutdown</name></name><argument_list pos:line="714" pos:column="48">()</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></function>

		<function><type><specifier pos:line="717" pos:column="17">public</specifier> <specifier pos:line="717" pos:column="24">static</specifier> <name pos:line="717" pos:column="31">T</name></type> <name><name pos:line="717" pos:column="33">CreateObject</name><argument_list pos:line="717" pos:column="45">&lt;<argument><name pos:line="717" pos:column="46">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="717" pos:column="48">(<param><decl><type><name pos:line="717" pos:column="49">string</name></type> <name pos:line="717" pos:column="56">name</name></decl></param>)</parameter_list>
		<block pos:line="718" pos:column="17">{
			<return pos:line="719" pos:column="25">return <expr><call><name><name pos:line="719" pos:column="32">ModData</name><op:operator pos:line="719" pos:column="39">.</op:operator><name pos:line="719" pos:column="40">ObjectCreator</name><op:operator pos:line="719" pos:column="53">.</op:operator><name><name pos:line="719" pos:column="54">CreateObject</name><argument_list pos:line="719" pos:column="66">&lt;<argument><name pos:line="719" pos:column="67">T</name></argument>&gt;</argument_list></name></name><argument_list pos:line="719" pos:column="69">(<argument><expr><name pos:line="719" pos:column="70">name</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="722" pos:column="17">public</specifier> <specifier pos:line="722" pos:column="24">static</specifier> <name pos:line="722" pos:column="31">void</name></type> <name pos:line="722" pos:column="36">CreateServer</name><parameter_list pos:line="722" pos:column="48">(<param><decl><type><name pos:line="722" pos:column="49">ServerSettings</name></type> <name pos:line="722" pos:column="64">settings</name></decl></param>)</parameter_list>
		<block pos:line="723" pos:column="17">{
			<expr_stmt><expr><name pos:line="724" pos:column="25">server</name> <op:operator pos:line="724" pos:column="32">=</op:operator> <op:operator pos:line="724" pos:column="34">new</op:operator> <call><name><name pos:line="724" pos:column="38">Server</name><op:operator pos:line="724" pos:column="44">.</op:operator><name pos:line="724" pos:column="45">Server</name></name><argument_list pos:line="724" pos:column="51">(<argument><expr><op:operator pos:line="724" pos:column="52">new</op:operator> <call><name pos:line="724" pos:column="56">IPEndPoint</name><argument_list pos:line="724" pos:column="66">(<argument><expr><name><name pos:line="724" pos:column="67">IPAddress</name><op:operator pos:line="724" pos:column="76">.</op:operator><name pos:line="724" pos:column="77">Any</name></name></expr></argument>, <argument><expr><name><name pos:line="724" pos:column="82">settings</name><op:operator pos:line="724" pos:column="90">.</op:operator><name pos:line="724" pos:column="91">ListenPort</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="724" pos:column="104">settings</name></expr></argument>, <argument><expr><name pos:line="724" pos:column="114">ModData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="727" pos:column="17">public</specifier> <specifier pos:line="727" pos:column="24">static</specifier> <name pos:line="727" pos:column="31">int</name></type> <name pos:line="727" pos:column="35">CreateLocalServer</name><parameter_list pos:line="727" pos:column="52">(<param><decl><type><name pos:line="727" pos:column="53">string</name></type> <name pos:line="727" pos:column="60">map</name></decl></param>)</parameter_list>
		<block pos:line="728" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="729" pos:column="25">var</name></type> <name pos:line="729" pos:column="29">settings</name> <init pos:line="729" pos:column="38">= <expr><op:operator pos:line="729" pos:column="40">new</op:operator> <call><name pos:line="729" pos:column="44">ServerSettings</name><argument_list pos:line="729" pos:column="58">()</argument_list></call>
			<block pos:line="730" pos:column="25">{
				<expr><name pos:line="731" pos:column="33">Name</name> <op:operator pos:line="731" pos:column="38">=</op:operator> <lit:literal type="string" pos:line="731" pos:column="40">"Skirmish Game"</lit:literal></expr>,
				<expr><name pos:line="732" pos:column="33">Map</name> <op:operator pos:line="732" pos:column="37">=</op:operator> <name pos:line="732" pos:column="39">map</name></expr>,
				<expr><name pos:line="733" pos:column="33">AdvertiseOnline</name> <op:operator pos:line="733" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="733" pos:column="51">false</lit:literal></expr>,
				<expr><name pos:line="734" pos:column="33">AllowPortForward</name> <op:operator pos:line="734" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="734" pos:column="52">false</lit:literal></expr>
			}</block></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><name pos:line="737" pos:column="25">server</name> <op:operator pos:line="737" pos:column="32">=</op:operator> <op:operator pos:line="737" pos:column="34">new</op:operator> <call><name><name pos:line="737" pos:column="38">Server</name><op:operator pos:line="737" pos:column="44">.</op:operator><name pos:line="737" pos:column="45">Server</name></name><argument_list pos:line="737" pos:column="51">(<argument><expr><op:operator pos:line="737" pos:column="52">new</op:operator> <call><name pos:line="737" pos:column="56">IPEndPoint</name><argument_list pos:line="737" pos:column="66">(<argument><expr><name><name pos:line="737" pos:column="67">IPAddress</name><op:operator pos:line="737" pos:column="76">.</op:operator><name pos:line="737" pos:column="77">Loopback</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="737" pos:column="87">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="737" pos:column="91">settings</name></expr></argument>, <argument><expr><name pos:line="737" pos:column="101">ModData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<return pos:line="739" pos:column="25">return <expr><name><name pos:line="739" pos:column="32">server</name><op:operator pos:line="739" pos:column="38">.</op:operator><name pos:line="739" pos:column="39">Port</name></name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="742" pos:column="17">public</specifier> <specifier pos:line="742" pos:column="24">static</specifier> <name pos:line="742" pos:column="31">bool</name></type> <name pos:line="742" pos:column="36">IsCurrentWorld</name><parameter_list pos:line="742" pos:column="50">(<param><decl><type><name pos:line="742" pos:column="51">World</name></type> <name pos:line="742" pos:column="57">world</name></decl></param>)</parameter_list>
		<block pos:line="743" pos:column="17">{
			<return pos:line="744" pos:column="25">return <expr><name pos:line="744" pos:column="32">OrderManager</name> <op:operator pos:line="744" pos:column="45">!=</op:operator> <name pos:line="744" pos:column="48">null</name> <op:operator pos:line="744" pos:column="53">&amp;&amp;</op:operator> <name><name pos:line="744" pos:column="56">OrderManager</name><op:operator pos:line="744" pos:column="68">.</op:operator><name pos:line="744" pos:column="69">World</name></name> <op:operator pos:line="744" pos:column="75">==</op:operator> <name pos:line="744" pos:column="78">world</name></expr>;</return>
		}</block></function>
	}</block></class>
}</block></namespace>
</unit>
