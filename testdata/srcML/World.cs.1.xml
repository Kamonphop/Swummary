<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\World.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Collections</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">Generic</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Linq</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">OpenRA</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Effects</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">OpenRA</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">FileFormats</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">OpenRA</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Graphics</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">OpenRA</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Network</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">OpenRA</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Orders</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">OpenRA</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Primitives</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">OpenRA</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Support</name></name>;</using>
<using pos:line="21" pos:column="1">using <name><name pos:line="21" pos:column="7">OpenRA</name><op:operator pos:line="21" pos:column="13">.</op:operator><name pos:line="21" pos:column="14">Traits</name></name>;</using>

<namespace pos:line="23" pos:column="1">namespace <name pos:line="23" pos:column="11">OpenRA</name>
<block pos:line="24" pos:column="1">{
	<enum><specifier pos:line="25" pos:column="9">public</specifier> enum <macro><name pos:line="25" pos:column="21">WorldType</name></macro> <block pos:line="25" pos:column="31">{ <decl><name pos:line="25" pos:column="33">Regular</name></decl><op:operator pos:line="25" pos:column="40">,</op:operator> <decl><name pos:line="25" pos:column="42">Shellmap</name></decl><op:operator pos:line="25" pos:column="50">,</op:operator> <decl><name pos:line="25" pos:column="52">Editor</name></decl> }</block>

	<decl pos:line="27" pos:column="9">public sealed <name pos:line="27" pos:column="23">class</name> <name pos:line="27" pos:column="29">World</name> <op:operator pos:line="27" pos:column="35">:</op:operator> <name pos:line="27" pos:column="37">IDisposable</name>
	<block pos:line="28" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="29" pos:column="17">internal</specifier> <specifier pos:line="29" pos:column="26">readonly</specifier> <name pos:line="29" pos:column="35">TraitDictionary</name></type> <name pos:line="29" pos:column="51">TraitDict</name> <init pos:line="29" pos:column="61">= <expr><op:operator pos:line="29" pos:column="63">new</op:operator> <call><name pos:line="29" pos:column="67">TraitDictionary</name><argument_list pos:line="29" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="30" pos:column="17">readonly</specifier> <name><name pos:line="30" pos:column="26">SortedDictionary</name><argument_list pos:line="30" pos:column="42">&lt;<argument><name pos:line="30" pos:column="43">uint</name></argument>, <argument><name pos:line="30" pos:column="49">Actor</name></argument>&gt;</argument_list></name></type> <name pos:line="30" pos:column="56">actors</name> <init pos:line="30" pos:column="63">= <expr><op:operator pos:line="30" pos:column="65">new</op:operator> <call><name><name pos:line="30" pos:column="69">SortedDictionary</name><argument_list pos:line="30" pos:column="85">&lt;<argument><name pos:line="30" pos:column="86">uint</name></argument>, <argument><name pos:line="30" pos:column="92">Actor</name></argument>&gt;</argument_list></name><argument_list pos:line="30" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="31" pos:column="17">readonly</specifier> <name><name pos:line="31" pos:column="26">List</name><argument_list pos:line="31" pos:column="30">&lt;<argument><name pos:line="31" pos:column="31">IEffect</name></argument>&gt;</argument_list></name></type> <name pos:line="31" pos:column="40">effects</name> <init pos:line="31" pos:column="48">= <expr><op:operator pos:line="31" pos:column="50">new</op:operator> <call><name><name pos:line="31" pos:column="54">List</name><argument_list pos:line="31" pos:column="58">&lt;<argument><name pos:line="31" pos:column="59">IEffect</name></argument>&gt;</argument_list></name><argument_list pos:line="31" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="32" pos:column="17">readonly</specifier> <name><name pos:line="32" pos:column="26">Queue</name><argument_list pos:line="32" pos:column="31">&lt;<argument><name><name pos:line="32" pos:column="32">Action</name><argument_list pos:line="32" pos:column="38">&lt;<argument><name pos:line="32" pos:column="39">World</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name pos:line="32" pos:column="47">frameEndActions</name> <init pos:line="32" pos:column="63">= <expr><op:operator pos:line="32" pos:column="65">new</op:operator> <call><name><name pos:line="32" pos:column="69">Queue</name><argument_list pos:line="32" pos:column="74">&lt;<argument><name><name pos:line="32" pos:column="75">Action</name><argument_list pos:line="32" pos:column="81">&lt;<argument><name pos:line="32" pos:column="82">World</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name><argument_list pos:line="32" pos:column="89">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="34" pos:column="17">public</specifier> <name pos:line="34" pos:column="24">int</name></type> <name pos:line="34" pos:column="28">Timestep</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="36" pos:column="17">internal</specifier> <specifier pos:line="36" pos:column="26">readonly</specifier> <name pos:line="36" pos:column="35">OrderManager</name></type> <name pos:line="36" pos:column="48">OrderManager</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="37" pos:column="17">public</specifier> <name pos:line="37" pos:column="24">Session</name></type> <name pos:line="37" pos:column="32">LobbyInfo</name> <block pos:line="37" pos:column="42">{ <function><name pos:line="37" pos:column="44">get</name> <block pos:line="37" pos:column="48">{ <return pos:line="37" pos:column="50">return <expr><name><name pos:line="37" pos:column="57">OrderManager</name><op:operator pos:line="37" pos:column="69">.</op:operator><name pos:line="37" pos:column="70">LobbyInfo</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="39" pos:column="17">public</specifier> <specifier pos:line="39" pos:column="24">readonly</specifier> <name pos:line="39" pos:column="33">MersenneTwister</name></type> <name pos:line="39" pos:column="49">SharedRandom</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="41" pos:column="17">public</specifier> <specifier pos:line="41" pos:column="24">readonly</specifier> <name><name pos:line="41" pos:column="33">List</name><argument_list pos:line="41" pos:column="37">&lt;<argument><name pos:line="41" pos:column="38">Player</name></argument>&gt;</argument_list></name></type> <name pos:line="41" pos:column="46">Players</name> <init pos:line="41" pos:column="54">= <expr><op:operator pos:line="41" pos:column="56">new</op:operator> <call><name><name pos:line="41" pos:column="60">List</name><argument_list pos:line="41" pos:column="64">&lt;<argument><name pos:line="41" pos:column="65">Player</name></argument>&gt;</argument_list></name><argument_list pos:line="41" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<function><type><specifier pos:line="43" pos:column="17">public</specifier> <name pos:line="43" pos:column="24">void</name></type> <name pos:line="43" pos:column="29">AddPlayer</name><parameter_list pos:line="43" pos:column="38">(<param><decl><type><name pos:line="43" pos:column="39">Player</name></type> <name pos:line="43" pos:column="46">p</name></decl></param>)</parameter_list> <block pos:line="43" pos:column="49">{ <expr_stmt><expr><call><name><name pos:line="43" pos:column="51">Players</name><op:operator pos:line="43" pos:column="58">.</op:operator><name pos:line="43" pos:column="59">Add</name></name><argument_list pos:line="43" pos:column="62">(<argument><expr><name pos:line="43" pos:column="63">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
		<decl_stmt><decl><type><specifier pos:line="44" pos:column="17">public</specifier> <name pos:line="44" pos:column="24">Player</name></type> <name pos:line="44" pos:column="31">LocalPlayer</name> <block pos:line="44" pos:column="43">{ <function_decl><name pos:line="44" pos:column="45">get</name>;</function_decl> <function_decl><specifier pos:line="44" pos:column="50">private</specifier> <name pos:line="44" pos:column="58">set</name>;</function_decl> }</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="46" pos:column="17">public</specifier> <specifier pos:line="46" pos:column="24">event</specifier> <name pos:line="46" pos:column="30">Action</name></type> <name pos:line="46" pos:column="37">GameOver</name> <init pos:line="46" pos:column="46">= <expr><lambda><parameter_list pos:line="46" pos:column="48">()</parameter_list> <op:operator pos:line="46" pos:column="51">=&gt;</op:operator> <block pos:line="46" pos:column="54">{ }</block></lambda></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="47" pos:column="17">public</specifier> <name pos:line="47" pos:column="24">bool</name></type> <name pos:line="47" pos:column="29">IsGameOver</name> <block pos:line="47" pos:column="40">{ <function_decl><name pos:line="47" pos:column="42">get</name>;</function_decl> <function_decl><specifier pos:line="47" pos:column="47">private</specifier> <name pos:line="47" pos:column="55">set</name>;</function_decl> }</block></decl></decl_stmt>
		<function><type><specifier pos:line="48" pos:column="17">public</specifier> <name pos:line="48" pos:column="24">void</name></type> <name pos:line="48" pos:column="29">EndGame</name><parameter_list pos:line="48" pos:column="36">()</parameter_list>
		<block pos:line="49" pos:column="17">{
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><op:operator pos:line="50" pos:column="29">!</op:operator><name pos:line="50" pos:column="30">IsGameOver</name></expr>)</condition><then pos:line="50" pos:column="41">
			<block pos:line="51" pos:column="25">{
				<expr_stmt><expr><name pos:line="52" pos:column="33">IsGameOver</name> <op:operator pos:line="52" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="52" pos:column="46">true</lit:literal></expr>;</expr_stmt>

				<foreach pos:line="54" pos:column="33">foreach (<init><decl><type><name pos:line="54" pos:column="42">var</name></type> <name pos:line="54" pos:column="46">t</name> <range pos:line="54" pos:column="48">in <expr><call><name><name pos:line="54" pos:column="51">WorldActor</name><op:operator pos:line="54" pos:column="61">.</op:operator><name><name pos:line="54" pos:column="62">TraitsImplementing</name><argument_list pos:line="54" pos:column="80">&lt;<argument><name pos:line="54" pos:column="81">IGameOver</name></argument>&gt;</argument_list></name></name><argument_list pos:line="54" pos:column="91">()</argument_list></call></expr></range></decl></init>)
					<expr_stmt><expr><call><name><name pos:line="55" pos:column="41">t</name><op:operator pos:line="55" pos:column="42">.</op:operator><name pos:line="55" pos:column="43">GameOver</name></name><argument_list pos:line="55" pos:column="51">(<argument><expr><name pos:line="55" pos:column="52">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>

				<expr_stmt><expr><call><name pos:line="57" pos:column="33">GameOver</name><argument_list pos:line="57" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></function>

		<decl_stmt><decl><type><name pos:line="61" pos:column="17">Player</name></type> <name pos:line="61" pos:column="24">renderPlayer</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="62" pos:column="17">public</specifier> <name pos:line="62" pos:column="24">Player</name></type> <name pos:line="62" pos:column="31">RenderPlayer</name>
		<block pos:line="63" pos:column="17">{
			<function><name pos:line="64" pos:column="25">get</name> <block pos:line="64" pos:column="29">{ <return pos:line="64" pos:column="31">return <expr><name pos:line="64" pos:column="38">renderPlayer</name> <op:operator pos:line="64" pos:column="51">==</op:operator> <name pos:line="64" pos:column="54">null</name> <op:operator pos:line="64" pos:column="59">||</op:operator> <op:operator pos:line="64" pos:column="62">(</op:operator><name><name pos:line="64" pos:column="63">renderPlayer</name><op:operator pos:line="64" pos:column="75">.</op:operator><name pos:line="64" pos:column="76">WinState</name></name> <op:operator pos:line="64" pos:column="85">!=</op:operator> <name><name pos:line="64" pos:column="88">WinState</name><op:operator pos:line="64" pos:column="96">.</op:operator><name pos:line="64" pos:column="97">Undefined</name> <type:modifier pos:line="64" pos:column="107">&amp;&amp;</type:modifier></name> <op:operator pos:line="64" pos:column="110">!</op:operator><call><name><name pos:line="64" pos:column="111">Map</name><op:operator pos:line="64" pos:column="114">.</op:operator><name pos:line="64" pos:column="115">Visibility</name><op:operator pos:line="64" pos:column="125">.</op:operator><name pos:line="64" pos:column="126">HasFlag</name></name><argument_list pos:line="64" pos:column="133">(<argument><expr><name><name pos:line="64" pos:column="134">MapVisibility</name><op:operator pos:line="64" pos:column="147">.</op:operator><name pos:line="64" pos:column="148">MissionSelector</name></name></expr></argument>)</argument_list></call><op:operator pos:line="64" pos:column="164">)</op:operator> <op:operator pos:line="64" pos:column="166">?</op:operator> <name pos:line="64" pos:column="168">null</name> <op:operator pos:line="64" pos:column="173">:</op:operator> <name pos:line="64" pos:column="175">renderPlayer</name></expr>;</return> }</block></function>
			<function><name pos:line="65" pos:column="25">set</name> <block pos:line="65" pos:column="29">{ <expr_stmt><expr><name pos:line="65" pos:column="31">renderPlayer</name> <op:operator pos:line="65" pos:column="44">=</op:operator> <name pos:line="65" pos:column="46">value</name></expr>;</expr_stmt> }</block></function>
		}</block></decl></decl_stmt>

		<function><type><specifier pos:line="68" pos:column="17">public</specifier> <name pos:line="68" pos:column="24">bool</name></type> <name pos:line="68" pos:column="29">FogObscures</name><parameter_list pos:line="68" pos:column="40">(<param><decl><type><name pos:line="68" pos:column="41">Actor</name></type> <name pos:line="68" pos:column="47">a</name></decl></param>)</parameter_list> <block pos:line="68" pos:column="50">{ <return pos:line="68" pos:column="52">return <expr><name pos:line="68" pos:column="59">RenderPlayer</name> <op:operator pos:line="68" pos:column="72">!=</op:operator> <name pos:line="68" pos:column="75">null</name> <op:operator pos:line="68" pos:column="80">&amp;&amp;</op:operator> <op:operator pos:line="68" pos:column="83">!</op:operator><call><name><name pos:line="68" pos:column="84">RenderPlayer</name><op:operator pos:line="68" pos:column="96">.</op:operator><name pos:line="68" pos:column="97">CanViewActor</name></name><argument_list pos:line="68" pos:column="109">(<argument><expr><name pos:line="68" pos:column="110">a</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="69" pos:column="17">public</specifier> <name pos:line="69" pos:column="24">bool</name></type> <name pos:line="69" pos:column="29">FogObscures</name><parameter_list pos:line="69" pos:column="40">(<param><decl><type><name pos:line="69" pos:column="41">CPos</name></type> <name pos:line="69" pos:column="46">p</name></decl></param>)</parameter_list> <block pos:line="69" pos:column="49">{ <return pos:line="69" pos:column="51">return <expr><name pos:line="69" pos:column="58">RenderPlayer</name> <op:operator pos:line="69" pos:column="71">!=</op:operator> <name pos:line="69" pos:column="74">null</name> <op:operator pos:line="69" pos:column="79">&amp;&amp;</op:operator> <op:operator pos:line="69" pos:column="82">!</op:operator><call><name><name pos:line="69" pos:column="83">RenderPlayer</name><op:operator pos:line="69" pos:column="95">.</op:operator><name pos:line="69" pos:column="96">Shroud</name><op:operator pos:line="69" pos:column="102">.</op:operator><name pos:line="69" pos:column="103">IsVisible</name></name><argument_list pos:line="69" pos:column="112">(<argument><expr><name pos:line="69" pos:column="113">p</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="70" pos:column="17">public</specifier> <name pos:line="70" pos:column="24">bool</name></type> <name pos:line="70" pos:column="29">FogObscures</name><parameter_list pos:line="70" pos:column="40">(<param><decl><type><name pos:line="70" pos:column="41">WPos</name></type> <name pos:line="70" pos:column="46">pos</name></decl></param>)</parameter_list> <block pos:line="70" pos:column="51">{ <return pos:line="70" pos:column="53">return <expr><name pos:line="70" pos:column="60">RenderPlayer</name> <op:operator pos:line="70" pos:column="73">!=</op:operator> <name pos:line="70" pos:column="76">null</name> <op:operator pos:line="70" pos:column="81">&amp;&amp;</op:operator> <op:operator pos:line="70" pos:column="84">!</op:operator><call><name><name pos:line="70" pos:column="85">RenderPlayer</name><op:operator pos:line="70" pos:column="97">.</op:operator><name pos:line="70" pos:column="98">Shroud</name><op:operator pos:line="70" pos:column="104">.</op:operator><name pos:line="70" pos:column="105">IsVisible</name></name><argument_list pos:line="70" pos:column="114">(<argument><expr><name pos:line="70" pos:column="115">pos</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="71" pos:column="17">public</specifier> <name pos:line="71" pos:column="24">bool</name></type> <name pos:line="71" pos:column="29">ShroudObscures</name><parameter_list pos:line="71" pos:column="43">(<param><decl><type><name pos:line="71" pos:column="44">CPos</name></type> <name pos:line="71" pos:column="49">p</name></decl></param>)</parameter_list> <block pos:line="71" pos:column="52">{ <return pos:line="71" pos:column="54">return <expr><name pos:line="71" pos:column="61">RenderPlayer</name> <op:operator pos:line="71" pos:column="74">!=</op:operator> <name pos:line="71" pos:column="77">null</name> <op:operator pos:line="71" pos:column="82">&amp;&amp;</op:operator> <op:operator pos:line="71" pos:column="85">!</op:operator><call><name><name pos:line="71" pos:column="86">RenderPlayer</name><op:operator pos:line="71" pos:column="98">.</op:operator><name pos:line="71" pos:column="99">Shroud</name><op:operator pos:line="71" pos:column="105">.</op:operator><name pos:line="71" pos:column="106">IsExplored</name></name><argument_list pos:line="71" pos:column="116">(<argument><expr><name pos:line="71" pos:column="117">p</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="72" pos:column="17">public</specifier> <name pos:line="72" pos:column="24">bool</name></type> <name pos:line="72" pos:column="29">ShroudObscures</name><parameter_list pos:line="72" pos:column="43">(<param><decl><type><name pos:line="72" pos:column="44">WPos</name></type> <name pos:line="72" pos:column="49">pos</name></decl></param>)</parameter_list> <block pos:line="72" pos:column="54">{ <return pos:line="72" pos:column="56">return <expr><name pos:line="72" pos:column="63">RenderPlayer</name> <op:operator pos:line="72" pos:column="76">!=</op:operator> <name pos:line="72" pos:column="79">null</name> <op:operator pos:line="72" pos:column="84">&amp;&amp;</op:operator> <op:operator pos:line="72" pos:column="87">!</op:operator><call><name><name pos:line="72" pos:column="88">RenderPlayer</name><op:operator pos:line="72" pos:column="100">.</op:operator><name pos:line="72" pos:column="101">Shroud</name><op:operator pos:line="72" pos:column="107">.</op:operator><name pos:line="72" pos:column="108">IsExplored</name></name><argument_list pos:line="72" pos:column="118">(<argument><expr><name pos:line="72" pos:column="119">pos</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
		<function><type><specifier pos:line="73" pos:column="17">public</specifier> <name pos:line="73" pos:column="24">bool</name></type> <name pos:line="73" pos:column="29">ShroudObscures</name><parameter_list pos:line="73" pos:column="43">(<param><decl><type><name pos:line="73" pos:column="44">PPos</name></type> <name pos:line="73" pos:column="49">uv</name></decl></param>)</parameter_list> <block pos:line="73" pos:column="53">{ <return pos:line="73" pos:column="55">return <expr><name pos:line="73" pos:column="62">RenderPlayer</name> <op:operator pos:line="73" pos:column="75">!=</op:operator> <name pos:line="73" pos:column="78">null</name> <op:operator pos:line="73" pos:column="83">&amp;&amp;</op:operator> <op:operator pos:line="73" pos:column="86">!</op:operator><call><name><name pos:line="73" pos:column="87">RenderPlayer</name><op:operator pos:line="73" pos:column="99">.</op:operator><name pos:line="73" pos:column="100">Shroud</name><op:operator pos:line="73" pos:column="106">.</op:operator><name pos:line="73" pos:column="107">IsExplored</name></name><argument_list pos:line="73" pos:column="117">(<argument><expr><name pos:line="73" pos:column="118">uv</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>

		<decl_stmt><decl><type><specifier pos:line="75" pos:column="17">public</specifier> <name pos:line="75" pos:column="24">bool</name></type> <name pos:line="75" pos:column="29">IsReplay</name>
		<block pos:line="76" pos:column="17">{
			<function><name pos:line="77" pos:column="25">get</name> <block pos:line="77" pos:column="29">{ <return pos:line="77" pos:column="31">return <expr><name><name pos:line="77" pos:column="38">OrderManager</name><op:operator pos:line="77" pos:column="50">.</op:operator><name pos:line="77" pos:column="51">Connection</name></name> <op:operator pos:line="77" pos:column="62">is</op:operator> <name pos:line="77" pos:column="65">ReplayConnection</name></expr>;</return> }</block></function>
		}</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="80" pos:column="17">public</specifier> <name pos:line="80" pos:column="24">bool</name></type> <name pos:line="80" pos:column="29">AllowDevCommands</name>
		<block pos:line="81" pos:column="17">{
			<function><name pos:line="82" pos:column="25">get</name> <block pos:line="82" pos:column="29">{ <return pos:line="82" pos:column="31">return <expr><name><name pos:line="82" pos:column="38">LobbyInfo</name><op:operator pos:line="82" pos:column="47">.</op:operator><name pos:line="82" pos:column="48">GlobalSettings</name><op:operator pos:line="82" pos:column="62">.</op:operator><name pos:line="82" pos:column="63">AllowCheats</name></name> <op:operator pos:line="82" pos:column="75">||</op:operator> <name><name pos:line="82" pos:column="78">LobbyInfo</name><op:operator pos:line="82" pos:column="87">.</op:operator><name pos:line="82" pos:column="88">IsSinglePlayer</name></name></expr>;</return> }</block></function>
		}</block></decl></decl_stmt>

		<function><type><specifier pos:line="85" pos:column="17">public</specifier> <name pos:line="85" pos:column="24">void</name></type> <name pos:line="85" pos:column="29">SetLocalPlayer</name><parameter_list pos:line="85" pos:column="43">(<param><decl><type><name pos:line="85" pos:column="44">string</name></type> <name pos:line="85" pos:column="51">pr</name></decl></param>)</parameter_list>
		<block pos:line="86" pos:column="17">{
			<if pos:line="87" pos:column="25">if <condition pos:line="87" pos:column="28">(<expr><name pos:line="87" pos:column="29">IsReplay</name></expr>)</condition><then pos:line="87" pos:column="38">
				<return pos:line="88" pos:column="33">return;</return></then></if>

			<expr_stmt><expr><name pos:line="90" pos:column="25">LocalPlayer</name> <op:operator pos:line="90" pos:column="37">=</op:operator> <call><name><name pos:line="90" pos:column="39">Players</name><op:operator pos:line="90" pos:column="46">.</op:operator><name pos:line="90" pos:column="47">FirstOrDefault</name></name><argument_list pos:line="90" pos:column="61">(<argument><expr><lambda><name pos:line="90" pos:column="62">p</name> <op:operator pos:line="90" pos:column="64">=&gt;</op:operator> <name><name pos:line="90" pos:column="67">p</name><op:operator pos:line="90" pos:column="68">.</op:operator><name pos:line="90" pos:column="69">InternalName</name></name> <op:operator pos:line="90" pos:column="82">==</op:operator> <name pos:line="90" pos:column="85">pr</name></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="91" pos:column="25">RenderPlayer</name> <op:operator pos:line="91" pos:column="38">=</op:operator> <name pos:line="91" pos:column="40">LocalPlayer</name></expr>;</expr_stmt>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="94" pos:column="17">public</specifier> <specifier pos:line="94" pos:column="24">readonly</specifier> <name pos:line="94" pos:column="33">Actor</name></type> <name pos:line="94" pos:column="39">WorldActor</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="96" pos:column="17">public</specifier> <specifier pos:line="96" pos:column="24">readonly</specifier> <name pos:line="96" pos:column="33">Map</name></type> <name pos:line="96" pos:column="37">Map</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="98" pos:column="17">public</specifier> <specifier pos:line="98" pos:column="24">readonly</specifier> <name pos:line="98" pos:column="33">TileSet</name></type> <name pos:line="98" pos:column="41">TileSet</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="100" pos:column="17">public</specifier> <specifier pos:line="100" pos:column="24">readonly</specifier> <name pos:line="100" pos:column="33">ActorMap</name></type> <name pos:line="100" pos:column="42">ActorMap</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="101" pos:column="17">public</specifier> <specifier pos:line="101" pos:column="24">readonly</specifier> <name pos:line="101" pos:column="33">ScreenMap</name></type> <name pos:line="101" pos:column="43">ScreenMap</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="102" pos:column="17">public</specifier> <specifier pos:line="102" pos:column="24">readonly</specifier> <name pos:line="102" pos:column="33">WorldType</name></type> <name pos:line="102" pos:column="43">Type</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="104" pos:column="17">readonly</specifier> <name pos:line="104" pos:column="26">GameInformation</name></type> <name pos:line="104" pos:column="42">gameInfo</name></decl>;</decl_stmt>

		<function><type><specifier pos:line="106" pos:column="17">public</specifier> <name pos:line="106" pos:column="24">void</name></type> <name pos:line="106" pos:column="29">IssueOrder</name><parameter_list pos:line="106" pos:column="39">(<param><decl><type><name pos:line="106" pos:column="40">Order</name></type> <name pos:line="106" pos:column="46">o</name></decl></param>)</parameter_list> <block pos:line="106" pos:column="49">{ <expr_stmt><expr><call><name><name pos:line="106" pos:column="51">OrderManager</name><op:operator pos:line="106" pos:column="63">.</op:operator><name pos:line="106" pos:column="64">IssueOrder</name></name><argument_list pos:line="106" pos:column="74">(<argument><expr><name pos:line="106" pos:column="75">o</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function> <comment type="block" pos:line="106" pos:column="81">/* avoid exposing the OM to mod code */</comment>

		<decl_stmt><decl><type><name pos:line="108" pos:column="17">IOrderGenerator</name></type> <name pos:line="108" pos:column="33">orderGenerator</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="109" pos:column="17">public</specifier> <name pos:line="109" pos:column="24">IOrderGenerator</name></type> <name pos:line="109" pos:column="40">OrderGenerator</name>
		<block pos:line="110" pos:column="17">{
			<function><name pos:line="111" pos:column="25">get</name>
			<block pos:line="112" pos:column="25">{
				<return pos:line="113" pos:column="33">return <expr><name pos:line="113" pos:column="40">orderGenerator</name></expr>;</return>
			}</block></function>

			<function><name pos:line="116" pos:column="25">set</name>
			<block pos:line="117" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="118" pos:column="33">Sync</name><op:operator pos:line="118" pos:column="37">.</op:operator><name pos:line="118" pos:column="38">AssertUnsynced</name></name><argument_list pos:line="118" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="53">"The current order generator may not be changed from synced code"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="119" pos:column="33">orderGenerator</name> <op:operator pos:line="119" pos:column="48">=</op:operator> <name pos:line="119" pos:column="50">value</name></expr>;</expr_stmt>
			}</block></function>
		}</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="123" pos:column="17">public</specifier> <name pos:line="123" pos:column="24">Selection</name></type> <name pos:line="123" pos:column="34">Selection</name> <init pos:line="123" pos:column="44">= <expr><op:operator pos:line="123" pos:column="46">new</op:operator> <call><name pos:line="123" pos:column="50">Selection</name><argument_list pos:line="123" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<function><type><specifier pos:line="125" pos:column="17">public</specifier> <name pos:line="125" pos:column="24">void</name></type> <name pos:line="125" pos:column="29">CancelInputMode</name><parameter_list pos:line="125" pos:column="44">()</parameter_list> <block pos:line="125" pos:column="47">{ <expr_stmt><expr><name pos:line="125" pos:column="49">OrderGenerator</name> <op:operator pos:line="125" pos:column="64">=</op:operator> <op:operator pos:line="125" pos:column="66">new</op:operator> <call><name pos:line="125" pos:column="70">UnitOrderGenerator</name><argument_list pos:line="125" pos:column="88">()</argument_list></call></expr>;</expr_stmt> }</block></function>

		<function><type><specifier pos:line="127" pos:column="17">public</specifier> <name pos:line="127" pos:column="24">bool</name></type> <name><name pos:line="127" pos:column="29">ToggleInputMode</name><argument_list pos:line="127" pos:column="44">&lt;<argument><name pos:line="127" pos:column="45">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="127" pos:column="47">()</parameter_list> <where pos:line="127" pos:column="50">where <name pos:line="127" pos:column="56">T</name> : <name pos:line="127" pos:column="60">IOrderGenerator</name>, new()</where>
		<block pos:line="128" pos:column="17">{
			<if pos:line="129" pos:column="25">if <condition pos:line="129" pos:column="28">(<expr><name pos:line="129" pos:column="29">OrderGenerator</name> <op:operator pos:line="129" pos:column="44">is</op:operator> <name pos:line="129" pos:column="47">T</name></expr>)</condition><then pos:line="129" pos:column="49">
			<block pos:line="130" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="131" pos:column="33">CancelInputMode</name><argument_list pos:line="131" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
				<return pos:line="132" pos:column="33">return <expr><lit:literal type="boolean" pos:line="132" pos:column="40">false</lit:literal></expr>;</return>
			}</block></then>
			<else pos:line="134" pos:column="25">else
			<block pos:line="135" pos:column="25">{
				<expr_stmt><expr><name pos:line="136" pos:column="33">OrderGenerator</name> <op:operator pos:line="136" pos:column="48">=</op:operator> <op:operator pos:line="136" pos:column="50">new</op:operator> <call><name pos:line="136" pos:column="54">T</name><argument_list pos:line="136" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
				<return pos:line="137" pos:column="33">return <expr><lit:literal type="boolean" pos:line="137" pos:column="40">true</lit:literal></expr>;</return>
			}</block></else></if>
		}</block></function>

		<constructor><specifier pos:line="141" pos:column="17">internal</specifier> <name pos:line="141" pos:column="26">World</name><parameter_list pos:line="141" pos:column="31">(<param><decl><type><name pos:line="141" pos:column="32">Map</name></type> <name pos:line="141" pos:column="36">map</name></decl></param>, <param><decl><type><name pos:line="141" pos:column="41">OrderManager</name></type> <name pos:line="141" pos:column="54">orderManager</name></decl></param>, <param><decl><type><name pos:line="141" pos:column="68">WorldType</name></type> <name pos:line="141" pos:column="78">type</name></decl></param>)</parameter_list>
		<block pos:line="142" pos:column="17">{
			<expr_stmt><expr><name pos:line="143" pos:column="25">Type</name> <op:operator pos:line="143" pos:column="30">=</op:operator> <name pos:line="143" pos:column="32">type</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="144" pos:column="25">OrderManager</name> <op:operator pos:line="144" pos:column="38">=</op:operator> <name pos:line="144" pos:column="40">orderManager</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="145" pos:column="25">orderGenerator</name> <op:operator pos:line="145" pos:column="40">=</op:operator> <op:operator pos:line="145" pos:column="42">new</op:operator> <call><name pos:line="145" pos:column="46">UnitOrderGenerator</name><argument_list pos:line="145" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="146" pos:column="25">Map</name> <op:operator pos:line="146" pos:column="29">=</op:operator> <name pos:line="146" pos:column="31">map</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="147" pos:column="25">Timestep</name> <op:operator pos:line="147" pos:column="34">=</op:operator> <name><name pos:line="147" pos:column="36">orderManager</name><op:operator pos:line="147" pos:column="48">.</op:operator><name pos:line="147" pos:column="49">LobbyInfo</name><op:operator pos:line="147" pos:column="58">.</op:operator><name pos:line="147" pos:column="59">GlobalSettings</name><op:operator pos:line="147" pos:column="73">.</op:operator><name pos:line="147" pos:column="74">Timestep</name></name></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="149" pos:column="25">TileSet</name> <op:operator pos:line="149" pos:column="33">=</op:operator> <name><name pos:line="149" pos:column="35">map</name><op:operator pos:line="149" pos:column="38">.</op:operator><name pos:line="149" pos:column="39">Rules</name><op:operator pos:line="149" pos:column="44">.</op:operator><name pos:line="149" pos:column="45">TileSets</name><index pos:line="149" pos:column="53">[<expr><name><name pos:line="149" pos:column="54">Map</name><op:operator pos:line="149" pos:column="57">.</op:operator><name pos:line="149" pos:column="58">Tileset</name></name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="150" pos:column="25">SharedRandom</name> <op:operator pos:line="150" pos:column="38">=</op:operator> <op:operator pos:line="150" pos:column="40">new</op:operator> <call><name pos:line="150" pos:column="44">MersenneTwister</name><argument_list pos:line="150" pos:column="59">(<argument><expr><name><name pos:line="150" pos:column="60">orderManager</name><op:operator pos:line="150" pos:column="72">.</op:operator><name pos:line="150" pos:column="73">LobbyInfo</name><op:operator pos:line="150" pos:column="82">.</op:operator><name pos:line="150" pos:column="83">GlobalSettings</name><op:operator pos:line="150" pos:column="97">.</op:operator><name pos:line="150" pos:column="98">RandomSeed</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="152" pos:column="25">var</name></type> <name pos:line="152" pos:column="29">worldActorType</name> <init pos:line="152" pos:column="44">= <expr><name pos:line="152" pos:column="46">type</name> <op:operator pos:line="152" pos:column="51">==</op:operator> <name><name pos:line="152" pos:column="54">WorldType</name><op:operator pos:line="152" pos:column="63">.</op:operator><name pos:line="152" pos:column="64">Editor</name> <type:modifier pos:line="152" pos:column="71">?</type:modifier></name> <lit:literal type="string" pos:line="152" pos:column="73">"EditorWorld"</lit:literal> <op:operator pos:line="152" pos:column="87">:</op:operator> <lit:literal type="string" pos:line="152" pos:column="89">"World"</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="153" pos:column="25">WorldActor</name> <op:operator pos:line="153" pos:column="36">=</op:operator> <call><name pos:line="153" pos:column="38">CreateActor</name><argument_list pos:line="153" pos:column="49">(<argument><expr><name pos:line="153" pos:column="50">worldActorType</name></expr></argument>, <argument><expr><op:operator pos:line="153" pos:column="66">new</op:operator> <call><name pos:line="153" pos:column="70">TypeDictionary</name><argument_list pos:line="153" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="154" pos:column="25">ActorMap</name> <op:operator pos:line="154" pos:column="34">=</op:operator> <call><name><name pos:line="154" pos:column="36">WorldActor</name><op:operator pos:line="154" pos:column="46">.</op:operator><name><name pos:line="154" pos:column="47">Trait</name><argument_list pos:line="154" pos:column="52">&lt;<argument><name pos:line="154" pos:column="53">ActorMap</name></argument>&gt;</argument_list></name></name><argument_list pos:line="154" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="155" pos:column="25">ScreenMap</name> <op:operator pos:line="155" pos:column="35">=</op:operator> <call><name><name pos:line="155" pos:column="37">WorldActor</name><op:operator pos:line="155" pos:column="47">.</op:operator><name><name pos:line="155" pos:column="48">Trait</name><argument_list pos:line="155" pos:column="53">&lt;<argument><name pos:line="155" pos:column="54">ScreenMap</name></argument>&gt;</argument_list></name></name><argument_list pos:line="155" pos:column="64">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="157" pos:column="25">// Add players</comment>
			<foreach pos:line="158" pos:column="25">foreach (<init><decl><type><name pos:line="158" pos:column="34">var</name></type> <name pos:line="158" pos:column="38">cmp</name> <range pos:line="158" pos:column="42">in <expr><call><name><name pos:line="158" pos:column="45">WorldActor</name><op:operator pos:line="158" pos:column="55">.</op:operator><name><name pos:line="158" pos:column="56">TraitsImplementing</name><argument_list pos:line="158" pos:column="74">&lt;<argument><name pos:line="158" pos:column="75">ICreatePlayers</name></argument>&gt;</argument_list></name></name><argument_list pos:line="158" pos:column="90">()</argument_list></call></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="159" pos:column="33">cmp</name><op:operator pos:line="159" pos:column="36">.</op:operator><name pos:line="159" pos:column="37">CreatePlayers</name></name><argument_list pos:line="159" pos:column="50">(<argument><expr><name pos:line="159" pos:column="51">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>

			<comment type="line" pos:line="161" pos:column="25">// Set defaults for any unset stances</comment>
			<foreach pos:line="162" pos:column="25">foreach (<init><decl><type><name pos:line="162" pos:column="34">var</name></type> <name pos:line="162" pos:column="38">p</name> <range pos:line="162" pos:column="40">in <expr><name pos:line="162" pos:column="43">Players</name></expr></range></decl></init>)
				<foreach pos:line="163" pos:column="33">foreach (<init><decl><type><name pos:line="163" pos:column="42">var</name></type> <name pos:line="163" pos:column="46">q</name> <range pos:line="163" pos:column="48">in <expr><name pos:line="163" pos:column="51">Players</name></expr></range></decl></init>)
					<if pos:line="164" pos:column="41">if <condition pos:line="164" pos:column="44">(<expr><op:operator pos:line="164" pos:column="45">!</op:operator><call><name><name pos:line="164" pos:column="46">p</name><op:operator pos:line="164" pos:column="47">.</op:operator><name pos:line="164" pos:column="48">Stances</name><op:operator pos:line="164" pos:column="55">.</op:operator><name pos:line="164" pos:column="56">ContainsKey</name></name><argument_list pos:line="164" pos:column="67">(<argument><expr><name pos:line="164" pos:column="68">q</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="164" pos:column="71">
						<expr_stmt><expr><name><name pos:line="165" pos:column="49">p</name><op:operator pos:line="165" pos:column="50">.</op:operator><name pos:line="165" pos:column="51">Stances</name><index pos:line="165" pos:column="58">[<expr><name pos:line="165" pos:column="59">q</name></expr>]</index></name> <op:operator pos:line="165" pos:column="62">=</op:operator> <name><name pos:line="165" pos:column="64">Stance</name><op:operator pos:line="165" pos:column="70">.</op:operator><name pos:line="165" pos:column="71">Neutral</name></name></expr>;</expr_stmt></then></if></foreach></foreach>

			<expr_stmt><expr><name><name pos:line="167" pos:column="25">Sound</name><op:operator pos:line="167" pos:column="30">.</op:operator><name pos:line="167" pos:column="31">SoundVolumeModifier</name></name> <op:operator pos:line="167" pos:column="51">=</op:operator> <lit:literal type="number" pos:line="167" pos:column="53">1.0f</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="169" pos:column="25">gameInfo</name> <op:operator pos:line="169" pos:column="34">=</op:operator> <op:operator pos:line="169" pos:column="36">new</op:operator> <name pos:line="169" pos:column="40">GameInformation</name>
			<block pos:line="170" pos:column="25">{
				<expr><name pos:line="171" pos:column="33">Mod</name> <op:operator pos:line="171" pos:column="37">=</op:operator> <name><name pos:line="171" pos:column="39">Game</name><op:operator pos:line="171" pos:column="43">.</op:operator><name pos:line="171" pos:column="44">ModData</name><op:operator pos:line="171" pos:column="51">.</op:operator><name pos:line="171" pos:column="52">Manifest</name><op:operator pos:line="171" pos:column="60">.</op:operator><name pos:line="171" pos:column="61">Mod</name><op:operator pos:line="171" pos:column="64">.</op:operator><name pos:line="171" pos:column="65">Id</name></name></expr><op:operator pos:line="171" pos:column="67">,</op:operator>
				<expr><name pos:line="172" pos:column="33">Version</name> <op:operator pos:line="172" pos:column="41">=</op:operator> <name><name pos:line="172" pos:column="43">Game</name><op:operator pos:line="172" pos:column="47">.</op:operator><name pos:line="172" pos:column="48">ModData</name><op:operator pos:line="172" pos:column="55">.</op:operator><name pos:line="172" pos:column="56">Manifest</name><op:operator pos:line="172" pos:column="64">.</op:operator><name pos:line="172" pos:column="65">Mod</name><op:operator pos:line="172" pos:column="68">.</op:operator><name pos:line="172" pos:column="69">Version</name></name></expr><op:operator pos:line="172" pos:column="76">,</op:operator>

				<expr><name pos:line="174" pos:column="33">MapUid</name> <op:operator pos:line="174" pos:column="40">=</op:operator> <name><name pos:line="174" pos:column="42">Map</name><op:operator pos:line="174" pos:column="45">.</op:operator><name pos:line="174" pos:column="46">Uid</name></name></expr><op:operator pos:line="174" pos:column="49">,</op:operator>
				<expr><name pos:line="175" pos:column="33">MapTitle</name> <op:operator pos:line="175" pos:column="42">=</op:operator> <name><name pos:line="175" pos:column="44">Map</name><op:operator pos:line="175" pos:column="47">.</op:operator><name pos:line="175" pos:column="48">Title</name></name></expr>
			}</block></expr>;</expr_stmt>

			<if pos:line="178" pos:column="25">if <condition pos:line="178" pos:column="28">(<expr><op:operator pos:line="178" pos:column="29">!</op:operator><name><name pos:line="178" pos:column="30">LobbyInfo</name><op:operator pos:line="178" pos:column="39">.</op:operator><name pos:line="178" pos:column="40">GlobalSettings</name><op:operator pos:line="178" pos:column="54">.</op:operator><name pos:line="178" pos:column="55">Shroud</name></name></expr>)</condition><then pos:line="178" pos:column="62">
				<foreach pos:line="179" pos:column="33">foreach (<init><decl><type><name pos:line="179" pos:column="42">var</name></type> <name pos:line="179" pos:column="46">player</name> <range pos:line="179" pos:column="53">in <expr><name pos:line="179" pos:column="56">Players</name></expr></range></decl></init>)
					<expr_stmt><expr><call><name><name pos:line="180" pos:column="41">player</name><op:operator pos:line="180" pos:column="47">.</op:operator><name pos:line="180" pos:column="48">Shroud</name><op:operator pos:line="180" pos:column="54">.</op:operator><name pos:line="180" pos:column="55">ExploreAll</name></name><argument_list pos:line="180" pos:column="65">(<argument><expr><name pos:line="180" pos:column="66">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach></then></if>
		}</block></constructor>

		<function><type><specifier pos:line="183" pos:column="17">public</specifier> <name pos:line="183" pos:column="24">void</name></type> <name pos:line="183" pos:column="29">LoadComplete</name><parameter_list pos:line="183" pos:column="41">(<param><decl><type><name pos:line="183" pos:column="42">WorldRenderer</name></type> <name pos:line="183" pos:column="56">wr</name></decl></param>)</parameter_list>
		<block pos:line="184" pos:column="17">{
			<comment type="line" pos:line="185" pos:column="25">// ScreenMap must be initialized before anything else</comment>
			<using pos:line="186" pos:column="25">using (<expr><op:operator pos:line="186" pos:column="32">new</op:operator> <call><name><name pos:line="186" pos:column="36">Support</name><op:operator pos:line="186" pos:column="43">.</op:operator><name pos:line="186" pos:column="44">PerfTimer</name></name><argument_list pos:line="186" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="186" pos:column="54">"ScreenMap.WorldLoaded"</lit:literal></expr></argument>)</argument_list></call></expr>)
				<expr_stmt><expr><call><name><name pos:line="187" pos:column="33">ScreenMap</name><op:operator pos:line="187" pos:column="42">.</op:operator><name pos:line="187" pos:column="43">WorldLoaded</name></name><argument_list pos:line="187" pos:column="54">(<argument><expr><name pos:line="187" pos:column="55">this</name></expr></argument>, <argument><expr><name pos:line="187" pos:column="61">wr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>

			<foreach pos:line="189" pos:column="25">foreach (<init><decl><type><name pos:line="189" pos:column="34">var</name></type> <name pos:line="189" pos:column="38">wlh</name> <range pos:line="189" pos:column="42">in <expr><call><name><name pos:line="189" pos:column="45">WorldActor</name><op:operator pos:line="189" pos:column="55">.</op:operator><name><name pos:line="189" pos:column="56">TraitsImplementing</name><argument_list pos:line="189" pos:column="74">&lt;<argument><name pos:line="189" pos:column="75">IWorldLoaded</name></argument>&gt;</argument_list></name></name><argument_list pos:line="189" pos:column="88">()</argument_list></call></expr></range></decl></init>)
			<block pos:line="190" pos:column="25">{
				<comment type="line" pos:line="191" pos:column="33">// These have already been initialized</comment>
				<if pos:line="192" pos:column="33">if <condition pos:line="192" pos:column="36">(<expr><name pos:line="192" pos:column="37">wlh</name> <op:operator pos:line="192" pos:column="41">==</op:operator> <name pos:line="192" pos:column="44">ScreenMap</name></expr>)</condition><then pos:line="192" pos:column="54">
					<continue pos:line="193" pos:column="41">continue;</continue></then></if>

				<using pos:line="195" pos:column="33">using (<expr><op:operator pos:line="195" pos:column="40">new</op:operator> <call><name><name pos:line="195" pos:column="44">Support</name><op:operator pos:line="195" pos:column="51">.</op:operator><name pos:line="195" pos:column="52">PerfTimer</name></name><argument_list pos:line="195" pos:column="61">(<argument><expr><call><name><name pos:line="195" pos:column="62">wlh</name><op:operator pos:line="195" pos:column="65">.</op:operator><name pos:line="195" pos:column="66">GetType</name></name><argument_list pos:line="195" pos:column="73">()</argument_list></call><op:operator pos:line="195" pos:column="75">.</op:operator><name pos:line="195" pos:column="76">Name</name> <op:operator pos:line="195" pos:column="81">+</op:operator> <lit:literal type="string" pos:line="195" pos:column="83">".WorldLoaded"</lit:literal></expr></argument>)</argument_list></call></expr>)
					<expr_stmt><expr><call><name><name pos:line="196" pos:column="41">wlh</name><op:operator pos:line="196" pos:column="44">.</op:operator><name pos:line="196" pos:column="45">WorldLoaded</name></name><argument_list pos:line="196" pos:column="56">(<argument><expr><name pos:line="196" pos:column="57">this</name></expr></argument>, <argument><expr><name pos:line="196" pos:column="63">wr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></using>
			}</block></foreach>

			<expr_stmt><expr><name><name pos:line="199" pos:column="25">gameInfo</name><op:operator pos:line="199" pos:column="33">.</op:operator><name pos:line="199" pos:column="34">StartTimeUtc</name></name> <op:operator pos:line="199" pos:column="47">=</op:operator> <name><name pos:line="199" pos:column="49">DateTime</name><op:operator pos:line="199" pos:column="57">.</op:operator><name pos:line="199" pos:column="58">UtcNow</name></name></expr>;</expr_stmt>
			<foreach pos:line="200" pos:column="25">foreach (<init><decl><type><name pos:line="200" pos:column="34">var</name></type> <name pos:line="200" pos:column="38">player</name> <range pos:line="200" pos:column="45">in <expr><name pos:line="200" pos:column="48">Players</name></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="201" pos:column="33">gameInfo</name><op:operator pos:line="201" pos:column="41">.</op:operator><name pos:line="201" pos:column="42">AddPlayer</name></name><argument_list pos:line="201" pos:column="51">(<argument><expr><name pos:line="201" pos:column="52">player</name></expr></argument>, <argument><expr><name><name pos:line="201" pos:column="60">OrderManager</name><op:operator pos:line="201" pos:column="72">.</op:operator><name pos:line="201" pos:column="73">LobbyInfo</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>

			<decl_stmt><decl><type><name pos:line="203" pos:column="25">var</name></type> <name pos:line="203" pos:column="29">rc</name> <init pos:line="203" pos:column="32">= <expr><name><name pos:line="203" pos:column="34">OrderManager</name><op:operator pos:line="203" pos:column="46">.</op:operator><name pos:line="203" pos:column="47">Connection</name></name> <op:operator pos:line="203" pos:column="58">as</op:operator> <name pos:line="203" pos:column="61">ReplayRecorderConnection</name></expr></init></decl>;</decl_stmt>
			<if pos:line="204" pos:column="25">if <condition pos:line="204" pos:column="28">(<expr><name pos:line="204" pos:column="29">rc</name> <op:operator pos:line="204" pos:column="32">!=</op:operator> <name pos:line="204" pos:column="35">null</name></expr>)</condition><then pos:line="204" pos:column="40">
				<expr_stmt><expr><name><name pos:line="205" pos:column="33">rc</name><op:operator pos:line="205" pos:column="35">.</op:operator><name pos:line="205" pos:column="36">Metadata</name></name> <op:operator pos:line="205" pos:column="45">=</op:operator> <op:operator pos:line="205" pos:column="47">new</op:operator> <call><name pos:line="205" pos:column="51">ReplayMetadata</name><argument_list pos:line="205" pos:column="65">(<argument><expr><name pos:line="205" pos:column="66">gameInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></function>

		<function><type><specifier pos:line="208" pos:column="17">public</specifier> <name pos:line="208" pos:column="24">Actor</name></type> <name pos:line="208" pos:column="30">CreateActor</name><parameter_list pos:line="208" pos:column="41">(<param><decl><type><name pos:line="208" pos:column="42">string</name></type> <name pos:line="208" pos:column="49">name</name></decl></param>, <param><decl><type><name pos:line="208" pos:column="55">TypeDictionary</name></type> <name pos:line="208" pos:column="70">initDict</name></decl></param>)</parameter_list>
		<block pos:line="209" pos:column="17">{
			<return pos:line="210" pos:column="25">return <expr><call><name pos:line="210" pos:column="32">CreateActor</name><argument_list pos:line="210" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="210" pos:column="44">true</lit:literal></expr></argument>, <argument><expr><name pos:line="210" pos:column="50">name</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="56">initDict</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="213" pos:column="17">public</specifier> <name pos:line="213" pos:column="24">Actor</name></type> <name pos:line="213" pos:column="30">CreateActor</name><parameter_list pos:line="213" pos:column="41">(<param><decl><type><name pos:line="213" pos:column="42">bool</name></type> <name pos:line="213" pos:column="47">addToWorld</name></decl></param>, <param><decl><type><name pos:line="213" pos:column="59">string</name></type> <name pos:line="213" pos:column="66">name</name></decl></param>, <param><decl><type><name pos:line="213" pos:column="72">TypeDictionary</name></type> <name pos:line="213" pos:column="87">initDict</name></decl></param>)</parameter_list>
		<block pos:line="214" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="215" pos:column="25">var</name></type> <name pos:line="215" pos:column="29">a</name> <init pos:line="215" pos:column="31">= <expr><op:operator pos:line="215" pos:column="33">new</op:operator> <call><name pos:line="215" pos:column="37">Actor</name><argument_list pos:line="215" pos:column="42">(<argument><expr><name pos:line="215" pos:column="43">this</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="49">name</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="55">initDict</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<foreach pos:line="216" pos:column="25">foreach (<init><decl><type><name pos:line="216" pos:column="34">var</name></type> <name pos:line="216" pos:column="38">t</name> <range pos:line="216" pos:column="40">in <expr><call><name><name pos:line="216" pos:column="43">a</name><op:operator pos:line="216" pos:column="44">.</op:operator><name><name pos:line="216" pos:column="45">TraitsImplementing</name><argument_list pos:line="216" pos:column="63">&lt;<argument><name pos:line="216" pos:column="64">INotifyCreated</name></argument>&gt;</argument_list></name></name><argument_list pos:line="216" pos:column="79">()</argument_list></call></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="217" pos:column="33">t</name><op:operator pos:line="217" pos:column="34">.</op:operator><name pos:line="217" pos:column="35">Created</name></name><argument_list pos:line="217" pos:column="42">(<argument><expr><name pos:line="217" pos:column="43">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
			<if pos:line="218" pos:column="25">if <condition pos:line="218" pos:column="28">(<expr><name pos:line="218" pos:column="29">addToWorld</name></expr>)</condition><then pos:line="218" pos:column="40">
				<expr_stmt><expr><call><name pos:line="219" pos:column="33">Add</name><argument_list pos:line="219" pos:column="36">(<argument><expr><name pos:line="219" pos:column="37">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<return pos:line="220" pos:column="25">return <expr><name pos:line="220" pos:column="32">a</name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="223" pos:column="17">public</specifier> <name pos:line="223" pos:column="24">void</name></type> <name pos:line="223" pos:column="29">Add</name><parameter_list pos:line="223" pos:column="32">(<param><decl><type><name pos:line="223" pos:column="33">Actor</name></type> <name pos:line="223" pos:column="39">a</name></decl></param>)</parameter_list>
		<block pos:line="224" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="225" pos:column="25">a</name><op:operator pos:line="225" pos:column="26">.</op:operator><name pos:line="225" pos:column="27">IsInWorld</name></name> <op:operator pos:line="225" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="225" pos:column="39">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="226" pos:column="25">actors</name><op:operator pos:line="226" pos:column="31">.</op:operator><name pos:line="226" pos:column="32">Add</name></name><argument_list pos:line="226" pos:column="35">(<argument><expr><name><name pos:line="226" pos:column="36">a</name><op:operator pos:line="226" pos:column="37">.</op:operator><name pos:line="226" pos:column="38">ActorID</name></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="47">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="227" pos:column="25">ActorAdded</name><argument_list pos:line="227" pos:column="35">(<argument><expr><name pos:line="227" pos:column="36">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<foreach pos:line="229" pos:column="25">foreach (<init><decl><type><name pos:line="229" pos:column="34">var</name></type> <name pos:line="229" pos:column="38">t</name> <range pos:line="229" pos:column="40">in <expr><call><name><name pos:line="229" pos:column="43">a</name><op:operator pos:line="229" pos:column="44">.</op:operator><name><name pos:line="229" pos:column="45">TraitsImplementing</name><argument_list pos:line="229" pos:column="63">&lt;<argument><name pos:line="229" pos:column="64">INotifyAddedToWorld</name></argument>&gt;</argument_list></name></name><argument_list pos:line="229" pos:column="84">()</argument_list></call></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="230" pos:column="33">t</name><op:operator pos:line="230" pos:column="34">.</op:operator><name pos:line="230" pos:column="35">AddedToWorld</name></name><argument_list pos:line="230" pos:column="47">(<argument><expr><name pos:line="230" pos:column="48">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
		}</block></function>

		<function><type><specifier pos:line="233" pos:column="17">public</specifier> <name pos:line="233" pos:column="24">void</name></type> <name pos:line="233" pos:column="29">Remove</name><parameter_list pos:line="233" pos:column="35">(<param><decl><type><name pos:line="233" pos:column="36">Actor</name></type> <name pos:line="233" pos:column="42">a</name></decl></param>)</parameter_list>
		<block pos:line="234" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="235" pos:column="25">a</name><op:operator pos:line="235" pos:column="26">.</op:operator><name pos:line="235" pos:column="27">IsInWorld</name></name> <op:operator pos:line="235" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="235" pos:column="39">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="236" pos:column="25">actors</name><op:operator pos:line="236" pos:column="31">.</op:operator><name pos:line="236" pos:column="32">Remove</name></name><argument_list pos:line="236" pos:column="38">(<argument><expr><name><name pos:line="236" pos:column="39">a</name><op:operator pos:line="236" pos:column="40">.</op:operator><name pos:line="236" pos:column="41">ActorID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="237" pos:column="25">ActorRemoved</name><argument_list pos:line="237" pos:column="37">(<argument><expr><name pos:line="237" pos:column="38">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<foreach pos:line="239" pos:column="25">foreach (<init><decl><type><name pos:line="239" pos:column="34">var</name></type> <name pos:line="239" pos:column="38">t</name> <range pos:line="239" pos:column="40">in <expr><call><name><name pos:line="239" pos:column="43">a</name><op:operator pos:line="239" pos:column="44">.</op:operator><name><name pos:line="239" pos:column="45">TraitsImplementing</name><argument_list pos:line="239" pos:column="63">&lt;<argument><name pos:line="239" pos:column="64">INotifyRemovedFromWorld</name></argument>&gt;</argument_list></name></name><argument_list pos:line="239" pos:column="88">()</argument_list></call></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="240" pos:column="33">t</name><op:operator pos:line="240" pos:column="34">.</op:operator><name pos:line="240" pos:column="35">RemovedFromWorld</name></name><argument_list pos:line="240" pos:column="51">(<argument><expr><name pos:line="240" pos:column="52">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
		}</block></function>

		<function><type><specifier pos:line="243" pos:column="17">public</specifier> <name pos:line="243" pos:column="24">void</name></type> <name pos:line="243" pos:column="29">Add</name><parameter_list pos:line="243" pos:column="32">(<param><decl><type><name pos:line="243" pos:column="33">IEffect</name></type> <name pos:line="243" pos:column="41">b</name></decl></param>)</parameter_list> <block pos:line="243" pos:column="44">{ <expr_stmt><expr><call><name><name pos:line="243" pos:column="46">effects</name><op:operator pos:line="243" pos:column="53">.</op:operator><name pos:line="243" pos:column="54">Add</name></name><argument_list pos:line="243" pos:column="57">(<argument><expr><name pos:line="243" pos:column="58">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
		<function><type><specifier pos:line="244" pos:column="17">public</specifier> <name pos:line="244" pos:column="24">void</name></type> <name pos:line="244" pos:column="29">Remove</name><parameter_list pos:line="244" pos:column="35">(<param><decl><type><name pos:line="244" pos:column="36">IEffect</name></type> <name pos:line="244" pos:column="44">b</name></decl></param>)</parameter_list> <block pos:line="244" pos:column="47">{ <expr_stmt><expr><call><name><name pos:line="244" pos:column="49">effects</name><op:operator pos:line="244" pos:column="56">.</op:operator><name pos:line="244" pos:column="57">Remove</name></name><argument_list pos:line="244" pos:column="63">(<argument><expr><name pos:line="244" pos:column="64">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>
		<function><type><specifier pos:line="245" pos:column="17">public</specifier> <name pos:line="245" pos:column="24">void</name></type> <name pos:line="245" pos:column="29">RemoveAll</name><parameter_list pos:line="245" pos:column="38">(<param><decl><type><name><name pos:line="245" pos:column="39">Predicate</name><argument_list pos:line="245" pos:column="48">&lt;<argument><name pos:line="245" pos:column="49">IEffect</name></argument>&gt;</argument_list></name></type> <name pos:line="245" pos:column="58">predicate</name></decl></param>)</parameter_list> <block pos:line="245" pos:column="69">{ <expr_stmt><expr><call><name><name pos:line="245" pos:column="71">effects</name><op:operator pos:line="245" pos:column="78">.</op:operator><name pos:line="245" pos:column="79">RemoveAll</name></name><argument_list pos:line="245" pos:column="88">(<argument><expr><name pos:line="245" pos:column="89">predicate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>

		<function><type><specifier pos:line="247" pos:column="17">public</specifier> <name pos:line="247" pos:column="24">void</name></type> <name pos:line="247" pos:column="29">AddFrameEndTask</name><parameter_list pos:line="247" pos:column="44">(<param><decl><type><name><name pos:line="247" pos:column="45">Action</name><argument_list pos:line="247" pos:column="51">&lt;<argument><name pos:line="247" pos:column="52">World</name></argument>&gt;</argument_list></name></type> <name pos:line="247" pos:column="59">a</name></decl></param>)</parameter_list> <block pos:line="247" pos:column="62">{ <expr_stmt><expr><call><name><name pos:line="247" pos:column="64">frameEndActions</name><op:operator pos:line="247" pos:column="79">.</op:operator><name pos:line="247" pos:column="80">Enqueue</name></name><argument_list pos:line="247" pos:column="87">(<argument><expr><name pos:line="247" pos:column="88">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></function>

		<decl_stmt><decl><type><specifier pos:line="249" pos:column="17">public</specifier> <specifier pos:line="249" pos:column="24">event</specifier> <name><name pos:line="249" pos:column="30">Action</name><argument_list pos:line="249" pos:column="36">&lt;<argument><name pos:line="249" pos:column="37">Actor</name></argument>&gt;</argument_list></name></type> <name pos:line="249" pos:column="44">ActorAdded</name> <init pos:line="249" pos:column="55">= <expr><lambda><name pos:line="249" pos:column="57">_</name> <op:operator pos:line="249" pos:column="59">=&gt;</op:operator> <block pos:line="249" pos:column="62">{ }</block></lambda></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="250" pos:column="17">public</specifier> <specifier pos:line="250" pos:column="24">event</specifier> <name><name pos:line="250" pos:column="30">Action</name><argument_list pos:line="250" pos:column="36">&lt;<argument><name pos:line="250" pos:column="37">Actor</name></argument>&gt;</argument_list></name></type> <name pos:line="250" pos:column="44">ActorRemoved</name> <init pos:line="250" pos:column="57">= <expr><lambda><name pos:line="250" pos:column="59">_</name> <op:operator pos:line="250" pos:column="61">=&gt;</op:operator> <block pos:line="250" pos:column="64">{ }</block></lambda></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="252" pos:column="17">public</specifier> <name pos:line="252" pos:column="24">bool</name></type> <name pos:line="252" pos:column="29">Paused</name> <block pos:line="252" pos:column="36">{ <function_decl><name pos:line="252" pos:column="38">get</name>;</function_decl> <function_decl><specifier pos:line="252" pos:column="43">internal</specifier> <name pos:line="252" pos:column="52">set</name>;</function_decl> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="253" pos:column="17">public</specifier> <name pos:line="253" pos:column="24">bool</name></type> <name pos:line="253" pos:column="29">PredictedPaused</name> <block pos:line="253" pos:column="45">{ <function_decl><name pos:line="253" pos:column="47">get</name>;</function_decl> <function_decl><specifier pos:line="253" pos:column="52">internal</specifier> <name pos:line="253" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="254" pos:column="17">public</specifier> <name pos:line="254" pos:column="24">bool</name></type> <name pos:line="254" pos:column="29">PauseStateLocked</name> <block pos:line="254" pos:column="46">{ <function_decl><name pos:line="254" pos:column="48">get</name>;</function_decl> <function_decl><name pos:line="254" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="256" pos:column="17">public</specifier> <name pos:line="256" pos:column="24">int</name></type> <name pos:line="256" pos:column="28">WorldTick</name> <block pos:line="256" pos:column="38">{ <function_decl><name pos:line="256" pos:column="40">get</name>;</function_decl> <function_decl><specifier pos:line="256" pos:column="45">private</specifier> <name pos:line="256" pos:column="53">set</name>;</function_decl> }</block></decl></decl_stmt>

		<function><type><specifier pos:line="258" pos:column="17">public</specifier> <name pos:line="258" pos:column="24">void</name></type> <name pos:line="258" pos:column="29">SetPauseState</name><parameter_list pos:line="258" pos:column="42">(<param><decl><type><name pos:line="258" pos:column="43">bool</name></type> <name pos:line="258" pos:column="48">paused</name></decl></param>)</parameter_list>
		<block pos:line="259" pos:column="17">{
			<if pos:line="260" pos:column="25">if <condition pos:line="260" pos:column="28">(<expr><name pos:line="260" pos:column="29">PauseStateLocked</name></expr>)</condition><then pos:line="260" pos:column="46">
				<return pos:line="261" pos:column="33">return;</return></then></if>

			<expr_stmt><expr><call><name pos:line="263" pos:column="25">IssueOrder</name><argument_list pos:line="263" pos:column="35">(<argument><expr><call><name><name pos:line="263" pos:column="36">Order</name><op:operator pos:line="263" pos:column="41">.</op:operator><name pos:line="263" pos:column="42">PauseGame</name></name><argument_list pos:line="263" pos:column="51">(<argument><expr><name pos:line="263" pos:column="52">paused</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="264" pos:column="25">PredictedPaused</name> <op:operator pos:line="264" pos:column="41">=</op:operator> <name pos:line="264" pos:column="43">paused</name></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="267" pos:column="17">public</specifier> <name pos:line="267" pos:column="24">void</name></type> <name pos:line="267" pos:column="29">SetLocalPauseState</name><parameter_list pos:line="267" pos:column="47">(<param><decl><type><name pos:line="267" pos:column="48">bool</name></type> <name pos:line="267" pos:column="53">paused</name></decl></param>)</parameter_list>
		<block pos:line="268" pos:column="17">{
			<expr_stmt><expr><name pos:line="269" pos:column="25">Paused</name> <op:operator pos:line="269" pos:column="32">=</op:operator> <name pos:line="269" pos:column="34">PredictedPaused</name> <op:operator pos:line="269" pos:column="50">=</op:operator> <name pos:line="269" pos:column="52">paused</name></expr>;</expr_stmt>
		}</block></function>

		<function><type><specifier pos:line="272" pos:column="17">public</specifier> <name pos:line="272" pos:column="24">void</name></type> <name pos:line="272" pos:column="29">Tick</name><parameter_list pos:line="272" pos:column="33">()</parameter_list>
		<block pos:line="273" pos:column="17">{
			<if pos:line="274" pos:column="25">if <condition pos:line="274" pos:column="28">(<expr><op:operator pos:line="274" pos:column="29">!</op:operator><name pos:line="274" pos:column="30">Paused</name> <op:operator pos:line="274" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="274" pos:column="40">(</op:operator><name pos:line="274" pos:column="41">Type</name> <op:operator pos:line="274" pos:column="46">!=</op:operator> <name><name pos:line="274" pos:column="49">WorldType</name><op:operator pos:line="274" pos:column="58">.</op:operator><name pos:line="274" pos:column="59">Shellmap</name></name> <op:operator pos:line="274" pos:column="68">||</op:operator> <name><name pos:line="274" pos:column="71">Game</name><op:operator pos:line="274" pos:column="75">.</op:operator><name pos:line="274" pos:column="76">Settings</name><op:operator pos:line="274" pos:column="84">.</op:operator><name pos:line="274" pos:column="85">Game</name><op:operator pos:line="274" pos:column="89">.</op:operator><name pos:line="274" pos:column="90">ShowShellmap</name></name><op:operator pos:line="274" pos:column="102">)</op:operator></expr>)</condition><then pos:line="274" pos:column="104">
			<block pos:line="275" pos:column="25">{
				<expr_stmt><expr><name pos:line="276" pos:column="33">WorldTick</name><op:operator pos:line="276" pos:column="42">++</op:operator></expr>;</expr_stmt>

				<using pos:line="278" pos:column="33">using (<expr><op:operator pos:line="278" pos:column="40">new</op:operator> <call><name pos:line="278" pos:column="44">PerfSample</name><argument_list pos:line="278" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="278" pos:column="55">"tick_idle"</lit:literal></expr></argument>)</argument_list></call></expr>)
					<foreach pos:line="279" pos:column="41">foreach (<init><decl><type><name pos:line="279" pos:column="50">var</name></type> <name pos:line="279" pos:column="54">ni</name> <range pos:line="279" pos:column="57">in <expr><call><name><name pos:line="279" pos:column="60">ActorsWithTrait</name><argument_list pos:line="279" pos:column="75">&lt;<argument><name pos:line="279" pos:column="76">INotifyIdle</name></argument>&gt;</argument_list></name><argument_list pos:line="279" pos:column="88">()</argument_list></call></expr></range></decl></init>)
						<if pos:line="280" pos:column="49">if <condition pos:line="280" pos:column="52">(<expr><name><name pos:line="280" pos:column="53">ni</name><op:operator pos:line="280" pos:column="55">.</op:operator><name pos:line="280" pos:column="56">Actor</name><op:operator pos:line="280" pos:column="61">.</op:operator><name pos:line="280" pos:column="62">IsIdle</name></name></expr>)</condition><then pos:line="280" pos:column="69">
							<expr_stmt><expr><call><name><name pos:line="281" pos:column="57">ni</name><op:operator pos:line="281" pos:column="59">.</op:operator><name pos:line="281" pos:column="60">Trait</name><op:operator pos:line="281" pos:column="65">.</op:operator><name pos:line="281" pos:column="66">TickIdle</name></name><argument_list pos:line="281" pos:column="74">(<argument><expr><name><name pos:line="281" pos:column="75">ni</name><op:operator pos:line="281" pos:column="77">.</op:operator><name pos:line="281" pos:column="78">Actor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></foreach></using>

				<using pos:line="283" pos:column="33">using (<expr><op:operator pos:line="283" pos:column="40">new</op:operator> <call><name pos:line="283" pos:column="44">PerfSample</name><argument_list pos:line="283" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="283" pos:column="55">"tick_activities"</lit:literal></expr></argument>)</argument_list></call></expr>)
					<foreach pos:line="284" pos:column="41">foreach (<init><decl><type><name pos:line="284" pos:column="50">var</name></type> <name pos:line="284" pos:column="54">a</name> <range pos:line="284" pos:column="56">in <expr><name><name pos:line="284" pos:column="59">actors</name><op:operator pos:line="284" pos:column="65">.</op:operator><name pos:line="284" pos:column="66">Values</name></name></expr></range></decl></init>)
						<expr_stmt><expr><call><name><name pos:line="285" pos:column="49">a</name><op:operator pos:line="285" pos:column="50">.</op:operator><name pos:line="285" pos:column="51">Tick</name></name><argument_list pos:line="285" pos:column="55">()</argument_list></call></expr>;</expr_stmt></foreach></using>

				<expr_stmt><expr><call><name><name pos:line="287" pos:column="33">ActorsWithTrait</name><argument_list pos:line="287" pos:column="48">&lt;<argument><name pos:line="287" pos:column="49">ITick</name></argument>&gt;</argument_list></name><argument_list pos:line="287" pos:column="55">()</argument_list></call><op:operator pos:line="287" pos:column="57">.</op:operator><call><name pos:line="287" pos:column="58">DoTimed</name><argument_list pos:line="287" pos:column="65">(<argument><expr><lambda><name pos:line="287" pos:column="66">x</name> <op:operator pos:line="287" pos:column="68">=&gt;</op:operator> <call><name><name pos:line="287" pos:column="71">x</name><op:operator pos:line="287" pos:column="72">.</op:operator><name pos:line="287" pos:column="73">Trait</name><op:operator pos:line="287" pos:column="78">.</op:operator><name pos:line="287" pos:column="79">Tick</name></name><argument_list pos:line="287" pos:column="83">(<argument><expr><name><name pos:line="287" pos:column="84">x</name><op:operator pos:line="287" pos:column="85">.</op:operator><name pos:line="287" pos:column="86">Actor</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lit:literal type="string" pos:line="287" pos:column="94">"Trait"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><name pos:line="289" pos:column="33">effects</name><op:operator pos:line="289" pos:column="40">.</op:operator><name pos:line="289" pos:column="41">DoTimed</name></name><argument_list pos:line="289" pos:column="48">(<argument><expr><lambda><name pos:line="289" pos:column="49">e</name> <op:operator pos:line="289" pos:column="51">=&gt;</op:operator> <call><name><name pos:line="289" pos:column="54">e</name><op:operator pos:line="289" pos:column="55">.</op:operator><name pos:line="289" pos:column="56">Tick</name></name><argument_list pos:line="289" pos:column="60">(<argument><expr><name pos:line="289" pos:column="61">this</name></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lit:literal type="string" pos:line="289" pos:column="68">"Effect"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<while pos:line="292" pos:column="25">while <condition pos:line="292" pos:column="31">(<expr><name><name pos:line="292" pos:column="32">frameEndActions</name><op:operator pos:line="292" pos:column="47">.</op:operator><name pos:line="292" pos:column="48">Count</name></name> <op:operator pos:line="292" pos:column="54">!=</op:operator> <lit:literal type="number" pos:line="292" pos:column="57">0</lit:literal></expr>)</condition>
				<expr_stmt><expr><call><call><name><name pos:line="293" pos:column="33">frameEndActions</name><op:operator pos:line="293" pos:column="48">.</op:operator><name pos:line="293" pos:column="49">Dequeue</name></name><argument_list pos:line="293" pos:column="56">()</argument_list></call><argument_list pos:line="293" pos:column="58">(<argument><expr><name pos:line="293" pos:column="59">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></while>
		}</block></function>

		<comment type="line" pos:line="296" pos:column="17">// For things that want to update their render state once per tick, ignoring pause state</comment>
		<function><type><specifier pos:line="297" pos:column="17">public</specifier> <name pos:line="297" pos:column="24">void</name></type> <name pos:line="297" pos:column="29">TickRender</name><parameter_list pos:line="297" pos:column="39">(<param><decl><type><name pos:line="297" pos:column="40">WorldRenderer</name></type> <name pos:line="297" pos:column="54">wr</name></decl></param>)</parameter_list>
		<block pos:line="298" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="299" pos:column="25">ActorsWithTrait</name><argument_list pos:line="299" pos:column="40">&lt;<argument><name pos:line="299" pos:column="41">ITickRender</name></argument>&gt;</argument_list></name><argument_list pos:line="299" pos:column="53">()</argument_list></call><op:operator pos:line="299" pos:column="55">.</op:operator><call><name pos:line="299" pos:column="56">DoTimed</name><argument_list pos:line="299" pos:column="63">(<argument><expr><lambda><name pos:line="299" pos:column="64">x</name> <op:operator pos:line="299" pos:column="66">=&gt;</op:operator> <call><name><name pos:line="299" pos:column="69">x</name><op:operator pos:line="299" pos:column="70">.</op:operator><name pos:line="299" pos:column="71">Trait</name><op:operator pos:line="299" pos:column="76">.</op:operator><name pos:line="299" pos:column="77">TickRender</name></name><argument_list pos:line="299" pos:column="87">(<argument><expr><name pos:line="299" pos:column="88">wr</name></expr></argument>, <argument><expr><name><name pos:line="299" pos:column="92">x</name><op:operator pos:line="299" pos:column="93">.</op:operator><name pos:line="299" pos:column="94">Actor</name></name></expr></argument>)</argument_list></call></lambda></expr></argument>, <argument><expr><lit:literal type="string" pos:line="299" pos:column="102">"Render"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="302" pos:column="17">public</specifier> <name><name pos:line="302" pos:column="24">IEnumerable</name><argument_list pos:line="302" pos:column="35">&lt;<argument><name pos:line="302" pos:column="36">Actor</name></argument>&gt;</argument_list></name></type> <name pos:line="302" pos:column="43">Actors</name> <block pos:line="302" pos:column="50">{ <function><name pos:line="302" pos:column="52">get</name> <block pos:line="302" pos:column="56">{ <return pos:line="302" pos:column="58">return <expr><name><name pos:line="302" pos:column="65">actors</name><op:operator pos:line="302" pos:column="71">.</op:operator><name pos:line="302" pos:column="72">Values</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="303" pos:column="17">public</specifier> <name><name pos:line="303" pos:column="24">IEnumerable</name><argument_list pos:line="303" pos:column="35">&lt;<argument><name pos:line="303" pos:column="36">IEffect</name></argument>&gt;</argument_list></name></type> <name pos:line="303" pos:column="45">Effects</name> <block pos:line="303" pos:column="53">{ <function><name pos:line="303" pos:column="55">get</name> <block pos:line="303" pos:column="59">{ <return pos:line="303" pos:column="61">return <expr><name pos:line="303" pos:column="68">effects</name></expr>;</return> }</block></function> }</block></decl></decl_stmt>

		<function><type><specifier pos:line="305" pos:column="17">public</specifier> <name pos:line="305" pos:column="24">Actor</name></type> <name pos:line="305" pos:column="30">GetActorById</name><parameter_list pos:line="305" pos:column="42">(<param><decl><type><name pos:line="305" pos:column="43">uint</name></type> <name pos:line="305" pos:column="48">actorId</name></decl></param>)</parameter_list>
		<block pos:line="306" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="307" pos:column="25">Actor</name></type> <name pos:line="307" pos:column="31">a</name></decl>;</decl_stmt>
			<if pos:line="308" pos:column="25">if <condition pos:line="308" pos:column="28">(<expr><call><name><name pos:line="308" pos:column="29">actors</name><op:operator pos:line="308" pos:column="35">.</op:operator><name pos:line="308" pos:column="36">TryGetValue</name></name><argument_list pos:line="308" pos:column="47">(<argument><expr><name pos:line="308" pos:column="48">actorId</name></expr></argument>, <argument><expr pos:line="308" pos:column="57">out <name pos:line="308" pos:column="61">a</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="308" pos:column="64">
				<return pos:line="309" pos:column="33">return <expr><name pos:line="309" pos:column="40">a</name></expr>;</return></then></if>
			<return pos:line="310" pos:column="25">return <expr><name pos:line="310" pos:column="32">null</name></expr>;</return>
		}</block></function>

		<decl_stmt><decl><type><name pos:line="313" pos:column="17">uint</name></type> <name pos:line="313" pos:column="22">nextAID</name> <init pos:line="313" pos:column="30">= <expr><lit:literal type="number" pos:line="313" pos:column="32">0</lit:literal></expr></init></decl>;</decl_stmt>
		<function><type><specifier pos:line="314" pos:column="17">internal</specifier> <name pos:line="314" pos:column="26">uint</name></type> <name pos:line="314" pos:column="31">NextAID</name><parameter_list pos:line="314" pos:column="38">()</parameter_list>
		<block pos:line="315" pos:column="17">{
			<return pos:line="316" pos:column="25">return <expr><name pos:line="316" pos:column="32">nextAID</name><op:operator pos:line="316" pos:column="39">++</op:operator></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="319" pos:column="17">public</specifier> <name pos:line="319" pos:column="24">int</name></type> <name pos:line="319" pos:column="28">SyncHash</name><parameter_list pos:line="319" pos:column="36">()</parameter_list>
		<block pos:line="320" pos:column="17">{
			<comment type="line" pos:line="321" pos:column="25">// using (new PerfSample("synchash"))</comment>
			<block pos:line="322" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="323" pos:column="33">var</name></type> <name pos:line="323" pos:column="37">n</name> <init pos:line="323" pos:column="39">= <expr><lit:literal type="number" pos:line="323" pos:column="41">0</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="324" pos:column="33">var</name></type> <name pos:line="324" pos:column="37">ret</name> <init pos:line="324" pos:column="41">= <expr><lit:literal type="number" pos:line="324" pos:column="43">0</lit:literal></expr></init></decl>;</decl_stmt>

				<comment type="line" pos:line="326" pos:column="33">// hash all the actors</comment>
				<foreach pos:line="327" pos:column="33">foreach (<init><decl><type><name pos:line="327" pos:column="42">var</name></type> <name pos:line="327" pos:column="46">a</name> <range pos:line="327" pos:column="48">in <expr><name pos:line="327" pos:column="51">Actors</name></expr></range></decl></init>)
					<expr_stmt><expr><name pos:line="328" pos:column="41">ret</name> <op:operator pos:line="328" pos:column="45">+=</op:operator> <name pos:line="328" pos:column="48">n</name><op:operator pos:line="328" pos:column="49">++</op:operator> <op:operator pos:line="328" pos:column="52">*</op:operator> <call pos:line="328" pos:column="54">(<name pos:line="328" pos:column="55">int</name>)<argument_list pos:line="328" pos:column="59">(<argument><expr><lit:literal type="number" pos:line="328" pos:column="60">1</lit:literal> <op:operator pos:line="328" pos:column="62">+</op:operator> <name><name pos:line="328" pos:column="64">a</name><op:operator pos:line="328" pos:column="65">.</op:operator><name pos:line="328" pos:column="66">ActorID</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="328" pos:column="75">*</op:operator> <call><name><name pos:line="328" pos:column="77">Sync</name><op:operator pos:line="328" pos:column="81">.</op:operator><name pos:line="328" pos:column="82">CalculateSyncHash</name></name><argument_list pos:line="328" pos:column="99">(<argument><expr><name pos:line="328" pos:column="100">a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>

				<comment type="line" pos:line="330" pos:column="33">// hash all the traits that tick</comment>
				<foreach pos:line="331" pos:column="33">foreach (<init><decl><type><name pos:line="331" pos:column="42">var</name></type> <name pos:line="331" pos:column="46">x</name> <range pos:line="331" pos:column="48">in <expr><call><name><name pos:line="331" pos:column="51">ActorsWithTrait</name><argument_list pos:line="331" pos:column="66">&lt;<argument><name pos:line="331" pos:column="67">ISync</name></argument>&gt;</argument_list></name><argument_list pos:line="331" pos:column="73">()</argument_list></call></expr></range></decl></init>)
					<expr_stmt><expr><name pos:line="332" pos:column="41">ret</name> <op:operator pos:line="332" pos:column="45">+=</op:operator> <name pos:line="332" pos:column="48">n</name><op:operator pos:line="332" pos:column="49">++</op:operator> <op:operator pos:line="332" pos:column="52">*</op:operator> <call pos:line="332" pos:column="54">(<name pos:line="332" pos:column="55">int</name>)<argument_list pos:line="332" pos:column="59">(<argument><expr><lit:literal type="number" pos:line="332" pos:column="60">1</lit:literal> <op:operator pos:line="332" pos:column="62">+</op:operator> <name><name pos:line="332" pos:column="64">x</name><op:operator pos:line="332" pos:column="65">.</op:operator><name pos:line="332" pos:column="66">Actor</name><op:operator pos:line="332" pos:column="71">.</op:operator><name pos:line="332" pos:column="72">ActorID</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="332" pos:column="81">*</op:operator> <call><name><name pos:line="332" pos:column="83">Sync</name><op:operator pos:line="332" pos:column="87">.</op:operator><name pos:line="332" pos:column="88">CalculateSyncHash</name></name><argument_list pos:line="332" pos:column="105">(<argument><expr><name><name pos:line="332" pos:column="106">x</name><op:operator pos:line="332" pos:column="107">.</op:operator><name pos:line="332" pos:column="108">Trait</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>

				<comment type="line" pos:line="334" pos:column="33">// TODO: don't go over all effects</comment>
				<foreach pos:line="335" pos:column="33">foreach (<init><decl><type><name pos:line="335" pos:column="42">var</name></type> <name pos:line="335" pos:column="46">e</name> <range pos:line="335" pos:column="48">in <expr><name pos:line="335" pos:column="51">Effects</name></expr></range></decl></init>)
				<block pos:line="336" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="337" pos:column="41">var</name></type> <name pos:line="337" pos:column="45">sync</name> <init pos:line="337" pos:column="50">= <expr><name pos:line="337" pos:column="52">e</name> <op:operator pos:line="337" pos:column="54">as</op:operator> <name pos:line="337" pos:column="57">ISync</name></expr></init></decl>;</decl_stmt>
					<if pos:line="338" pos:column="41">if <condition pos:line="338" pos:column="44">(<expr><name pos:line="338" pos:column="45">sync</name> <op:operator pos:line="338" pos:column="50">!=</op:operator> <name pos:line="338" pos:column="53">null</name></expr>)</condition><then pos:line="338" pos:column="58">
						<expr_stmt><expr><name pos:line="339" pos:column="49">ret</name> <op:operator pos:line="339" pos:column="53">+=</op:operator> <name pos:line="339" pos:column="56">n</name><op:operator pos:line="339" pos:column="57">++</op:operator> <op:operator pos:line="339" pos:column="60">*</op:operator> <call><name><name pos:line="339" pos:column="62">Sync</name><op:operator pos:line="339" pos:column="66">.</op:operator><name pos:line="339" pos:column="67">CalculateSyncHash</name></name><argument_list pos:line="339" pos:column="84">(<argument><expr><name pos:line="339" pos:column="85">sync</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block></foreach>

				<comment type="line" pos:line="342" pos:column="33">// Hash the shared rng</comment>
				<expr_stmt><expr><name pos:line="343" pos:column="33">ret</name> <op:operator pos:line="343" pos:column="37">+=</op:operator> <name><name pos:line="343" pos:column="40">SharedRandom</name><op:operator pos:line="343" pos:column="52">.</op:operator><name pos:line="343" pos:column="53">Last</name></name></expr>;</expr_stmt>

				<return pos:line="345" pos:column="33">return <expr><name pos:line="345" pos:column="40">ret</name></expr>;</return>
			}</block>
		}</block></function>

		<function><type><specifier pos:line="349" pos:column="17">public</specifier> <name><name pos:line="349" pos:column="24">IEnumerable</name><argument_list pos:line="349" pos:column="35">&lt;<argument><name><name pos:line="349" pos:column="36">TraitPair</name><argument_list pos:line="349" pos:column="45">&lt;<argument><name pos:line="349" pos:column="46">T</name></argument>&gt;</argument_list></name></argument>&gt;</argument_list></name></type> <name><name pos:line="349" pos:column="50">ActorsWithTrait</name><argument_list pos:line="349" pos:column="65">&lt;<argument><name pos:line="349" pos:column="66">T</name></argument>&gt;</argument_list></name><parameter_list pos:line="349" pos:column="68">()</parameter_list>
		<block pos:line="350" pos:column="17">{
			<return pos:line="351" pos:column="25">return <expr><call><name><name pos:line="351" pos:column="32">TraitDict</name><op:operator pos:line="351" pos:column="41">.</op:operator><name><name pos:line="351" pos:column="42">ActorsWithTrait</name><argument_list pos:line="351" pos:column="57">&lt;<argument><name pos:line="351" pos:column="58">T</name></argument>&gt;</argument_list></name></name><argument_list pos:line="351" pos:column="60">()</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="354" pos:column="17">public</specifier> <name pos:line="354" pos:column="24">void</name></type> <name pos:line="354" pos:column="29">OnPlayerWinStateChanged</name><parameter_list pos:line="354" pos:column="52">(<param><decl><type><name pos:line="354" pos:column="53">Player</name></type> <name pos:line="354" pos:column="60">player</name></decl></param>)</parameter_list>
		<block pos:line="355" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="356" pos:column="25">var</name></type> <name pos:line="356" pos:column="29">pi</name> <init pos:line="356" pos:column="32">= <expr><call><name><name pos:line="356" pos:column="34">gameInfo</name><op:operator pos:line="356" pos:column="42">.</op:operator><name pos:line="356" pos:column="43">GetPlayer</name></name><argument_list pos:line="356" pos:column="52">(<argument><expr><name pos:line="356" pos:column="53">player</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="357" pos:column="25">if <condition pos:line="357" pos:column="28">(<expr><name pos:line="357" pos:column="29">pi</name> <op:operator pos:line="357" pos:column="32">!=</op:operator> <name pos:line="357" pos:column="35">null</name></expr>)</condition><then pos:line="357" pos:column="40">
			<block pos:line="358" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="359" pos:column="33">pi</name><op:operator pos:line="359" pos:column="35">.</op:operator><name pos:line="359" pos:column="36">Outcome</name></name> <op:operator pos:line="359" pos:column="44">=</op:operator> <name><name pos:line="359" pos:column="46">player</name><op:operator pos:line="359" pos:column="52">.</op:operator><name pos:line="359" pos:column="53">WinState</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="360" pos:column="33">pi</name><op:operator pos:line="360" pos:column="35">.</op:operator><name pos:line="360" pos:column="36">OutcomeTimestampUtc</name></name> <op:operator pos:line="360" pos:column="56">=</op:operator> <name><name pos:line="360" pos:column="58">DateTime</name><op:operator pos:line="360" pos:column="66">.</op:operator><name pos:line="360" pos:column="67">UtcNow</name></name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="364" pos:column="17">public</specifier> <name pos:line="364" pos:column="24">bool</name></type> <name pos:line="364" pos:column="29">Disposing</name></decl>;</decl_stmt>

		<function><type><specifier pos:line="366" pos:column="17">public</specifier> <name pos:line="366" pos:column="24">void</name></type> <name pos:line="366" pos:column="29">Dispose</name><parameter_list pos:line="366" pos:column="36">()</parameter_list>
		<block pos:line="367" pos:column="17">{
			<expr_stmt><expr><name pos:line="368" pos:column="25">Disposing</name> <op:operator pos:line="368" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="368" pos:column="37">true</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="370" pos:column="25">frameEndActions</name><op:operator pos:line="370" pos:column="40">.</op:operator><name pos:line="370" pos:column="41">Clear</name></name><argument_list pos:line="370" pos:column="46">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="372" pos:column="25">Sound</name><op:operator pos:line="372" pos:column="30">.</op:operator><name pos:line="372" pos:column="31">StopAudio</name></name><argument_list pos:line="372" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="373" pos:column="25">Sound</name><op:operator pos:line="373" pos:column="30">.</op:operator><name pos:line="373" pos:column="31">StopVideo</name></name><argument_list pos:line="373" pos:column="40">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="375" pos:column="25">// Dispose newer actors first, and the world actor last</comment>
			<foreach pos:line="376" pos:column="25">foreach (<init><decl><type><name pos:line="376" pos:column="34">var</name></type> <name pos:line="376" pos:column="38">a</name> <range pos:line="376" pos:column="40">in <expr><call><name><name pos:line="376" pos:column="43">actors</name><op:operator pos:line="376" pos:column="49">.</op:operator><name pos:line="376" pos:column="50">Values</name><op:operator pos:line="376" pos:column="56">.</op:operator><name pos:line="376" pos:column="57">Reverse</name></name><argument_list pos:line="376" pos:column="64">()</argument_list></call></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="377" pos:column="33">a</name><op:operator pos:line="377" pos:column="34">.</op:operator><name pos:line="377" pos:column="35">Dispose</name></name><argument_list pos:line="377" pos:column="42">()</argument_list></call></expr>;</expr_stmt></foreach>

			<comment type="line" pos:line="379" pos:column="25">// Actor disposals are done in a FrameEndTask</comment>
			<while pos:line="380" pos:column="25">while <condition pos:line="380" pos:column="31">(<expr><name><name pos:line="380" pos:column="32">frameEndActions</name><op:operator pos:line="380" pos:column="47">.</op:operator><name pos:line="380" pos:column="48">Count</name></name> <op:operator pos:line="380" pos:column="54">!=</op:operator> <lit:literal type="number" pos:line="380" pos:column="57">0</lit:literal></expr>)</condition>
				<expr_stmt><expr><call><call><name><name pos:line="381" pos:column="33">frameEndActions</name><op:operator pos:line="381" pos:column="48">.</op:operator><name pos:line="381" pos:column="49">Dequeue</name></name><argument_list pos:line="381" pos:column="56">()</argument_list></call><argument_list pos:line="381" pos:column="58">(<argument><expr><name pos:line="381" pos:column="59">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></while>
		}</block></function>
	}</block></decl>

	<decl pos:line="385" pos:column="9">public struct <name><name pos:line="385" pos:column="23">TraitPair</name><argument_list pos:line="385" pos:column="32">&lt;<argument><name pos:line="385" pos:column="33">T</name></argument>&gt;</argument_list></name>
	<block pos:line="386" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="387" pos:column="17">public</specifier> <name pos:line="387" pos:column="24">Actor</name></type> <name pos:line="387" pos:column="30">Actor</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="388" pos:column="17">public</specifier> <name pos:line="388" pos:column="24">T</name></type> <name pos:line="388" pos:column="26">Trait</name></decl>;</decl_stmt>

		<function><type><specifier pos:line="390" pos:column="17">public</specifier> <specifier pos:line="390" pos:column="24">override</specifier> <name pos:line="390" pos:column="33">string</name></type> <name pos:line="390" pos:column="40">ToString</name><parameter_list pos:line="390" pos:column="48">()</parameter_list>
		<block pos:line="391" pos:column="17">{
			<return pos:line="392" pos:column="25">return <expr><lit:literal type="string" pos:line="392" pos:column="32">"{0}-&gt;{1}"</lit:literal><op:operator pos:line="392" pos:column="42">.</op:operator><call><name pos:line="392" pos:column="43">F</name><argument_list pos:line="392" pos:column="44">(<argument><expr><name><name pos:line="392" pos:column="45">Actor</name><op:operator pos:line="392" pos:column="50">.</op:operator><name pos:line="392" pos:column="51">Info</name><op:operator pos:line="392" pos:column="55">.</op:operator><name pos:line="392" pos:column="56">Name</name></name></expr></argument>, <argument><expr><call><name><name pos:line="392" pos:column="62">Trait</name><op:operator pos:line="392" pos:column="67">.</op:operator><name pos:line="392" pos:column="68">GetType</name></name><argument_list pos:line="392" pos:column="75">()</argument_list></call><op:operator pos:line="392" pos:column="77">.</op:operator><name pos:line="392" pos:column="78">Name</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>
	}</block></decl>
<decl/></enum>}</block></namespace>
</unit>
