<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\GameInformation.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Collections</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">Generic</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Linq</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">OpenRA</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Graphics</name></name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">OpenRA</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">Network</name></name>;</using>

<namespace pos:line="17" pos:column="1">namespace <name pos:line="17" pos:column="11">OpenRA</name>
<block pos:line="18" pos:column="1">{
	<class><specifier pos:line="19" pos:column="9">public</specifier> class <name pos:line="19" pos:column="22">GameInformation</name>
	<block pos:line="20" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="21" pos:column="17">public</specifier> <name pos:line="21" pos:column="24">string</name></type> <name pos:line="21" pos:column="31">Mod</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">public</specifier> <name pos:line="22" pos:column="24">string</name></type> <name pos:line="22" pos:column="31">Version</name></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="24" pos:column="17">public</specifier> <name pos:line="24" pos:column="24">string</name></type> <name pos:line="24" pos:column="31">MapUid</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="25" pos:column="17">public</specifier> <name pos:line="25" pos:column="24">string</name></type> <name pos:line="25" pos:column="31">MapTitle</name></decl>;</decl_stmt>

		<comment type="line" pos:line="27" pos:column="17">/// &lt;summary&gt;Game start timestamp (when the recoding started).&lt;/summary&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="28" pos:column="17">public</specifier> <name pos:line="28" pos:column="24">DateTime</name></type> <name pos:line="28" pos:column="33">StartTimeUtc</name></decl>;</decl_stmt>

		<comment type="line" pos:line="30" pos:column="17">/// &lt;summary&gt;Game end timestamp (when the recoding stopped).&lt;/summary&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="31" pos:column="17">public</specifier> <name pos:line="31" pos:column="24">DateTime</name></type> <name pos:line="31" pos:column="33">EndTimeUtc</name></decl>;</decl_stmt>

		<comment type="line" pos:line="33" pos:column="17">/// &lt;summary&gt;Gets the game's duration, from the time the game started until the replay recording stopped.&lt;/summary&gt;</comment>
		<decl_stmt><decl><type><specifier pos:line="34" pos:column="17">public</specifier> <name pos:line="34" pos:column="24">TimeSpan</name></type> <name pos:line="34" pos:column="33">Duration</name> <block pos:line="34" pos:column="42">{ <function><name pos:line="34" pos:column="44">get</name> <block pos:line="34" pos:column="48">{ <return pos:line="34" pos:column="50">return <expr><name pos:line="34" pos:column="57">EndTimeUtc</name> <op:operator pos:line="34" pos:column="68">&gt;</op:operator> <name pos:line="34" pos:column="70">StartTimeUtc</name> <op:operator pos:line="34" pos:column="83">?</op:operator> <name pos:line="34" pos:column="85">EndTimeUtc</name> <op:operator pos:line="34" pos:column="96">-</op:operator> <name pos:line="34" pos:column="98">StartTimeUtc</name> <op:operator pos:line="34" pos:column="111">:</op:operator> <name><name pos:line="34" pos:column="113">TimeSpan</name><op:operator pos:line="34" pos:column="121">.</op:operator><name pos:line="34" pos:column="122">Zero</name></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="35" pos:column="17">public</specifier> <name><name pos:line="35" pos:column="24">IList</name><argument_list pos:line="35" pos:column="29">&lt;<argument><name pos:line="35" pos:column="30">Player</name></argument>&gt;</argument_list></name></type> <name pos:line="35" pos:column="38">Players</name> <block pos:line="35" pos:column="46">{ <function_decl><name pos:line="35" pos:column="48">get</name>;</function_decl> <function_decl><specifier pos:line="35" pos:column="53">private</specifier> <name pos:line="35" pos:column="61">set</name>;</function_decl> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="36" pos:column="17">public</specifier> <name pos:line="36" pos:column="24">MapPreview</name></type> <name pos:line="36" pos:column="35">MapPreview</name> <block pos:line="36" pos:column="46">{ <function><name pos:line="36" pos:column="48">get</name> <block pos:line="36" pos:column="52">{ <return pos:line="36" pos:column="54">return <expr><name><name pos:line="36" pos:column="61">Game</name><op:operator pos:line="36" pos:column="65">.</op:operator><name pos:line="36" pos:column="66">ModData</name><op:operator pos:line="36" pos:column="73">.</op:operator><name pos:line="36" pos:column="74">MapCache</name><index pos:line="36" pos:column="82">[<expr><name pos:line="36" pos:column="83">MapUid</name></expr>]</index></name></expr>;</return> }</block></function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="37" pos:column="17">public</specifier> <name><name pos:line="37" pos:column="24">IEnumerable</name><argument_list pos:line="37" pos:column="35">&lt;<argument><name pos:line="37" pos:column="36">Player</name></argument>&gt;</argument_list></name></type> <name pos:line="37" pos:column="44">HumanPlayers</name> <block pos:line="37" pos:column="57">{ <function><name pos:line="37" pos:column="59">get</name> <block pos:line="37" pos:column="63">{ <return pos:line="37" pos:column="65">return <expr><call><name><name pos:line="37" pos:column="72">Players</name><op:operator pos:line="37" pos:column="79">.</op:operator><name pos:line="37" pos:column="80">Where</name></name><argument_list pos:line="37" pos:column="85">(<argument><expr><lambda><name pos:line="37" pos:column="86">p</name> <op:operator pos:line="37" pos:column="88">=&gt;</op:operator> <name><name pos:line="37" pos:column="91">p</name><op:operator pos:line="37" pos:column="92">.</op:operator><name pos:line="37" pos:column="93">IsHuman</name></name></lambda></expr></argument>)</argument_list></call></expr>;</return> }</block></function> }</block></decl></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="38" pos:column="17">public</specifier> <name pos:line="38" pos:column="24">bool</name></type> <name pos:line="38" pos:column="29">IsSinglePlayer</name> <block pos:line="38" pos:column="44">{ <function><name pos:line="38" pos:column="46">get</name> <block pos:line="38" pos:column="50">{ <return pos:line="38" pos:column="52">return <expr><call><name><name pos:line="38" pos:column="59">HumanPlayers</name><op:operator pos:line="38" pos:column="71">.</op:operator><name pos:line="38" pos:column="72">Count</name></name><argument_list pos:line="38" pos:column="77">()</argument_list></call> <op:operator pos:line="38" pos:column="80">==</op:operator> <lit:literal type="number" pos:line="38" pos:column="83">1</lit:literal></expr>;</return> }</block></function> }</block></decl></decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="40" pos:column="17">readonly</specifier> <name><name pos:line="40" pos:column="26">Dictionary</name><argument_list pos:line="40" pos:column="36">&lt;<argument><name><name pos:line="40" pos:column="37">OpenRA</name><op:operator pos:line="40" pos:column="43">.</op:operator><name pos:line="40" pos:column="44">Player</name></name></argument>, <argument><name pos:line="40" pos:column="52">Player</name></argument>&gt;</argument_list></name></type> <name pos:line="40" pos:column="60">playersByRuntime</name></decl>;</decl_stmt>

		<constructor><specifier pos:line="42" pos:column="17">public</specifier> <name pos:line="42" pos:column="24">GameInformation</name><parameter_list pos:line="42" pos:column="39">()</parameter_list>
		<block pos:line="43" pos:column="17">{
			<expr_stmt><expr><name pos:line="44" pos:column="25">Players</name> <op:operator pos:line="44" pos:column="33">=</op:operator> <op:operator pos:line="44" pos:column="35">new</op:operator> <call><name><name pos:line="44" pos:column="39">List</name><argument_list pos:line="44" pos:column="43">&lt;<argument><name pos:line="44" pos:column="44">Player</name></argument>&gt;</argument_list></name><argument_list pos:line="44" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="45" pos:column="25">playersByRuntime</name> <op:operator pos:line="45" pos:column="42">=</op:operator> <op:operator pos:line="45" pos:column="44">new</op:operator> <call><name><name pos:line="45" pos:column="48">Dictionary</name><argument_list pos:line="45" pos:column="58">&lt;<argument><name><name pos:line="45" pos:column="59">OpenRA</name><op:operator pos:line="45" pos:column="65">.</op:operator><name pos:line="45" pos:column="66">Player</name></name></argument>, <argument><name pos:line="45" pos:column="74">Player</name></argument>&gt;</argument_list></name><argument_list pos:line="45" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
		}</block></constructor>

		<function><type><specifier pos:line="48" pos:column="17">public</specifier> <specifier pos:line="48" pos:column="24">static</specifier> <name pos:line="48" pos:column="31">GameInformation</name></type> <name pos:line="48" pos:column="47">Deserialize</name><parameter_list pos:line="48" pos:column="58">(<param><decl><type><name pos:line="48" pos:column="59">string</name></type> <name pos:line="48" pos:column="66">data</name></decl></param>)</parameter_list>
		<block pos:line="49" pos:column="17">{
			<try pos:line="50" pos:column="25">try
			<block pos:line="51" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="52" pos:column="33">var</name></type> <name pos:line="52" pos:column="37">info</name> <init pos:line="52" pos:column="42">= <expr><op:operator pos:line="52" pos:column="44">new</op:operator> <call><name pos:line="52" pos:column="48">GameInformation</name><argument_list pos:line="52" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="54" pos:column="33">var</name></type> <name pos:line="54" pos:column="37">nodes</name> <init pos:line="54" pos:column="43">= <expr><call><name><name pos:line="54" pos:column="45">MiniYaml</name><op:operator pos:line="54" pos:column="53">.</op:operator><name pos:line="54" pos:column="54">FromString</name></name><argument_list pos:line="54" pos:column="64">(<argument><expr><name pos:line="54" pos:column="65">data</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<foreach pos:line="55" pos:column="33">foreach (<init><decl><type><name pos:line="55" pos:column="42">var</name></type> <name pos:line="55" pos:column="46">node</name> <range pos:line="55" pos:column="51">in <expr><name pos:line="55" pos:column="54">nodes</name></expr></range></decl></init>)
				<block pos:line="56" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="57" pos:column="41">var</name></type> <name pos:line="57" pos:column="45">keyParts</name> <init pos:line="57" pos:column="54">= <expr><call><name><name pos:line="57" pos:column="56">node</name><op:operator pos:line="57" pos:column="60">.</op:operator><name pos:line="57" pos:column="61">Key</name><op:operator pos:line="57" pos:column="64">.</op:operator><name pos:line="57" pos:column="65">Split</name></name><argument_list pos:line="57" pos:column="70">(<argument><expr><lit:literal type="char" pos:line="57" pos:column="71">'@'</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<switch pos:line="59" pos:column="41">switch <condition pos:line="59" pos:column="48">(<expr><name><name pos:line="59" pos:column="49">keyParts</name><index pos:line="59" pos:column="57">[<expr><lit:literal type="number" pos:line="59" pos:column="58">0</lit:literal></expr>]</index></name></expr>)</condition>
					<block pos:line="60" pos:column="41">{
						<case pos:line="61" pos:column="49">case <expr><lit:literal type="string" pos:line="61" pos:column="54">"Root"</lit:literal></expr>:
							<expr_stmt><expr><call><name><name pos:line="62" pos:column="57">FieldLoader</name><op:operator pos:line="62" pos:column="68">.</op:operator><name pos:line="62" pos:column="69">Load</name></name><argument_list pos:line="62" pos:column="73">(<argument><expr><name pos:line="62" pos:column="74">info</name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="80">node</name><op:operator pos:line="62" pos:column="84">.</op:operator><name pos:line="62" pos:column="85">Value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<break pos:line="63" pos:column="57">break;</break>

						</case><case pos:line="65" pos:column="49">case <expr><lit:literal type="string" pos:line="65" pos:column="54">"Player"</lit:literal></expr>:
							<expr_stmt><expr><call><name><name pos:line="66" pos:column="57">info</name><op:operator pos:line="66" pos:column="61">.</op:operator><name pos:line="66" pos:column="62">Players</name><op:operator pos:line="66" pos:column="69">.</op:operator><name pos:line="66" pos:column="70">Add</name></name><argument_list pos:line="66" pos:column="73">(<argument><expr><call><name><name pos:line="66" pos:column="74">FieldLoader</name><op:operator pos:line="66" pos:column="85">.</op:operator><name><name pos:line="66" pos:column="86">Load</name><argument_list pos:line="66" pos:column="90">&lt;<argument><name pos:line="66" pos:column="91">Player</name></argument>&gt;</argument_list></name></name><argument_list pos:line="66" pos:column="98">(<argument><expr><name><name pos:line="66" pos:column="99">node</name><op:operator pos:line="66" pos:column="103">.</op:operator><name pos:line="66" pos:column="104">Value</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<break pos:line="67" pos:column="57">break;</break>
					</case>}</block></switch>
				}</block></foreach>

				<return pos:line="71" pos:column="33">return <expr><name pos:line="71" pos:column="40">info</name></expr>;</return>
			}</block>
			<catch pos:line="73" pos:column="25">catch <parameter_list pos:line="73" pos:column="31">(<param><decl><type><name pos:line="73" pos:column="32">InvalidOperationException</name></type></decl></param>)</parameter_list>
			<block pos:line="74" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="75" pos:column="33">Log</name><op:operator pos:line="75" pos:column="36">.</op:operator><name pos:line="75" pos:column="37">Write</name></name><argument_list pos:line="75" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="43">"debug"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="52">"GameInformation deserialized invalid MiniYaml:\n{0}"</lit:literal><op:operator pos:line="75" pos:column="105">.</op:operator><call><name pos:line="75" pos:column="106">F</name><argument_list pos:line="75" pos:column="107">(<argument><expr><name pos:line="75" pos:column="108">data</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<throw pos:line="76" pos:column="33">throw;</throw>
			}</block></catch></try>
		}</block></function>

		<function><type><specifier pos:line="80" pos:column="17">public</specifier> <name pos:line="80" pos:column="24">string</name></type> <name pos:line="80" pos:column="31">Serialize</name><parameter_list pos:line="80" pos:column="40">()</parameter_list>
		<block pos:line="81" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="82" pos:column="25">var</name></type> <name pos:line="82" pos:column="29">nodes</name> <init pos:line="82" pos:column="35">= <expr><op:operator pos:line="82" pos:column="37">new</op:operator> <name><name pos:line="82" pos:column="41">List</name><argument_list pos:line="82" pos:column="45">&lt;<argument><name pos:line="82" pos:column="46">MiniYamlNode</name></argument>&gt;</argument_list></name>
			<block pos:line="83" pos:column="25">{
				<expr><op:operator pos:line="84" pos:column="33">new</op:operator> <call><name pos:line="84" pos:column="37">MiniYamlNode</name><argument_list pos:line="84" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="50">"Root"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="84" pos:column="58">FieldSaver</name><op:operator pos:line="84" pos:column="68">.</op:operator><name pos:line="84" pos:column="69">Save</name></name><argument_list pos:line="84" pos:column="73">(<argument><expr><name pos:line="84" pos:column="74">this</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>
			}</block></expr></init></decl>;</decl_stmt>

			<for pos:line="87" pos:column="25">for (<init><decl><type><name pos:line="87" pos:column="30">var</name></type> <name pos:line="87" pos:column="34">i</name> <init pos:line="87" pos:column="36">= <expr><lit:literal type="number" pos:line="87" pos:column="38">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="87" pos:column="41">i</name> <op:operator pos:line="87" pos:column="43">&lt;</op:operator> <name><name pos:line="87" pos:column="45">Players</name><op:operator pos:line="87" pos:column="52">.</op:operator><name pos:line="87" pos:column="53">Count</name></name></expr>;</condition> <incr><expr><name pos:line="87" pos:column="60">i</name><op:operator pos:line="87" pos:column="61">++</op:operator></expr></incr>)
				<expr_stmt><expr><call><name><name pos:line="88" pos:column="33">nodes</name><op:operator pos:line="88" pos:column="38">.</op:operator><name pos:line="88" pos:column="39">Add</name></name><argument_list pos:line="88" pos:column="42">(<argument><expr><op:operator pos:line="88" pos:column="43">new</op:operator> <call><name pos:line="88" pos:column="47">MiniYamlNode</name><argument_list pos:line="88" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="60">"Player@{0}"</lit:literal><op:operator pos:line="88" pos:column="72">.</op:operator><call><name pos:line="88" pos:column="73">F</name><argument_list pos:line="88" pos:column="74">(<argument><expr><name pos:line="88" pos:column="75">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="88" pos:column="79">FieldSaver</name><op:operator pos:line="88" pos:column="89">.</op:operator><name pos:line="88" pos:column="90">Save</name></name><argument_list pos:line="88" pos:column="94">(<argument><expr><name><name pos:line="88" pos:column="95">Players</name><index pos:line="88" pos:column="102">[<expr><name pos:line="88" pos:column="103">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>

			<return pos:line="90" pos:column="25">return <expr><call><name><name pos:line="90" pos:column="32">nodes</name><op:operator pos:line="90" pos:column="37">.</op:operator><name pos:line="90" pos:column="38">WriteToString</name></name><argument_list pos:line="90" pos:column="51">()</argument_list></call></expr>;</return>
		}</block></function>

		<comment type="line" pos:line="93" pos:column="17">/// &lt;summary&gt;Adds the player information at start-up.&lt;/summary&gt;</comment>
		<function><type><specifier pos:line="94" pos:column="17">public</specifier> <name pos:line="94" pos:column="24">void</name></type> <name pos:line="94" pos:column="29">AddPlayer</name><parameter_list pos:line="94" pos:column="38">(<param><decl><type><name><name pos:line="94" pos:column="39">OpenRA</name><op:operator pos:line="94" pos:column="45">.</op:operator><name pos:line="94" pos:column="46">Player</name></name></type> <name pos:line="94" pos:column="53">runtimePlayer</name></decl></param>, <param><decl><type><name pos:line="94" pos:column="68">Session</name></type> <name pos:line="94" pos:column="76">lobbyInfo</name></decl></param>)</parameter_list>
		<block pos:line="95" pos:column="17">{
			<if pos:line="96" pos:column="25">if <condition pos:line="96" pos:column="28">(<expr><name pos:line="96" pos:column="29">runtimePlayer</name> <op:operator pos:line="96" pos:column="43">==</op:operator> <name pos:line="96" pos:column="46">null</name></expr>)</condition><then pos:line="96" pos:column="51">
				<throw pos:line="97" pos:column="33">throw <expr><op:operator pos:line="97" pos:column="39">new</op:operator> <call><name pos:line="97" pos:column="43">ArgumentNullException</name><argument_list pos:line="97" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="97" pos:column="65">"runtimePlayer"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<if pos:line="99" pos:column="25">if <condition pos:line="99" pos:column="28">(<expr><name pos:line="99" pos:column="29">lobbyInfo</name> <op:operator pos:line="99" pos:column="39">==</op:operator> <name pos:line="99" pos:column="42">null</name></expr>)</condition><then pos:line="99" pos:column="47">
				<throw pos:line="100" pos:column="33">throw <expr><op:operator pos:line="100" pos:column="39">new</op:operator> <call><name pos:line="100" pos:column="43">ArgumentNullException</name><argument_list pos:line="100" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="65">"lobbyInfo"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<comment type="line" pos:line="102" pos:column="25">// We don't care about spectators and map players</comment>
			<if pos:line="103" pos:column="25">if <condition pos:line="103" pos:column="28">(<expr><name><name pos:line="103" pos:column="29">runtimePlayer</name><op:operator pos:line="103" pos:column="42">.</op:operator><name pos:line="103" pos:column="43">NonCombatant</name></name> <op:operator pos:line="103" pos:column="56">||</op:operator> <op:operator pos:line="103" pos:column="59">!</op:operator><name><name pos:line="103" pos:column="60">runtimePlayer</name><op:operator pos:line="103" pos:column="73">.</op:operator><name pos:line="103" pos:column="74">Playable</name></name></expr>)</condition><then pos:line="103" pos:column="83">
				<return pos:line="104" pos:column="33">return;</return></then></if>

			<comment type="line" pos:line="106" pos:column="25">// Find the lobby client that created the runtime player</comment>
			<decl_stmt><decl><type><name pos:line="107" pos:column="25">var</name></type> <name pos:line="107" pos:column="29">client</name> <init pos:line="107" pos:column="36">= <expr><call><name><name pos:line="107" pos:column="38">lobbyInfo</name><op:operator pos:line="107" pos:column="47">.</op:operator><name pos:line="107" pos:column="48">ClientWithIndex</name></name><argument_list pos:line="107" pos:column="63">(<argument><expr><name><name pos:line="107" pos:column="64">runtimePlayer</name><op:operator pos:line="107" pos:column="77">.</op:operator><name pos:line="107" pos:column="78">ClientIndex</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="108" pos:column="25">if <condition pos:line="108" pos:column="28">(<expr><name pos:line="108" pos:column="29">client</name> <op:operator pos:line="108" pos:column="36">==</op:operator> <name pos:line="108" pos:column="39">null</name></expr>)</condition><then pos:line="108" pos:column="44">
				<return pos:line="109" pos:column="33">return;</return></then></if>

			<decl_stmt><decl><type><name pos:line="111" pos:column="25">var</name></type> <name pos:line="111" pos:column="29">player</name> <init pos:line="111" pos:column="36">= <expr><op:operator pos:line="111" pos:column="38">new</op:operator> <name pos:line="111" pos:column="42">Player</name>
			<block pos:line="112" pos:column="25">{
				<expr><name pos:line="113" pos:column="33">ClientIndex</name> <op:operator pos:line="113" pos:column="45">=</op:operator> <name><name pos:line="113" pos:column="47">runtimePlayer</name><op:operator pos:line="113" pos:column="60">.</op:operator><name pos:line="113" pos:column="61">ClientIndex</name></name></expr>,
				<expr><name pos:line="114" pos:column="33">Name</name> <op:operator pos:line="114" pos:column="38">=</op:operator> <name><name pos:line="114" pos:column="40">runtimePlayer</name><op:operator pos:line="114" pos:column="53">.</op:operator><name pos:line="114" pos:column="54">PlayerName</name></name></expr>,
				<expr><name pos:line="115" pos:column="33">IsHuman</name> <op:operator pos:line="115" pos:column="41">=</op:operator> <op:operator pos:line="115" pos:column="43">!</op:operator><name><name pos:line="115" pos:column="44">runtimePlayer</name><op:operator pos:line="115" pos:column="57">.</op:operator><name pos:line="115" pos:column="58">IsBot</name></name></expr>,
				<expr><name pos:line="116" pos:column="33">IsBot</name> <op:operator pos:line="116" pos:column="39">=</op:operator> <name><name pos:line="116" pos:column="41">runtimePlayer</name><op:operator pos:line="116" pos:column="54">.</op:operator><name pos:line="116" pos:column="55">IsBot</name></name></expr>,
				<expr><name pos:line="117" pos:column="33">FactionName</name> <op:operator pos:line="117" pos:column="45">=</op:operator> <name><name pos:line="117" pos:column="47">runtimePlayer</name><op:operator pos:line="117" pos:column="60">.</op:operator><name pos:line="117" pos:column="61">Faction</name><op:operator pos:line="117" pos:column="68">.</op:operator><name pos:line="117" pos:column="69">Name</name></name></expr>,
				<expr><name pos:line="118" pos:column="33">FactionId</name> <op:operator pos:line="118" pos:column="43">=</op:operator> <name><name pos:line="118" pos:column="45">runtimePlayer</name><op:operator pos:line="118" pos:column="58">.</op:operator><name pos:line="118" pos:column="59">Faction</name><op:operator pos:line="118" pos:column="66">.</op:operator><name pos:line="118" pos:column="67">InternalName</name></name></expr>,
				<expr><name pos:line="119" pos:column="33">Color</name> <op:operator pos:line="119" pos:column="39">=</op:operator> <name><name pos:line="119" pos:column="41">runtimePlayer</name><op:operator pos:line="119" pos:column="54">.</op:operator><name pos:line="119" pos:column="55">Color</name></name></expr>,
				<expr><name pos:line="120" pos:column="33">Team</name> <op:operator pos:line="120" pos:column="38">=</op:operator> <name><name pos:line="120" pos:column="40">client</name><op:operator pos:line="120" pos:column="46">.</op:operator><name pos:line="120" pos:column="47">Team</name></name></expr>,
				<expr><name pos:line="121" pos:column="33">SpawnPoint</name> <op:operator pos:line="121" pos:column="44">=</op:operator> <name><name pos:line="121" pos:column="46">runtimePlayer</name><op:operator pos:line="121" pos:column="59">.</op:operator><name pos:line="121" pos:column="60">SpawnPoint</name></name></expr>,
				<expr><name pos:line="122" pos:column="33">IsRandomFaction</name> <op:operator pos:line="122" pos:column="49">=</op:operator> <name><name pos:line="122" pos:column="51">runtimePlayer</name><op:operator pos:line="122" pos:column="64">.</op:operator><name pos:line="122" pos:column="65">Faction</name><op:operator pos:line="122" pos:column="72">.</op:operator><name pos:line="122" pos:column="73">InternalName</name></name> <op:operator pos:line="122" pos:column="86">!=</op:operator> <name><name pos:line="122" pos:column="89">client</name><op:operator pos:line="122" pos:column="95">.</op:operator><name pos:line="122" pos:column="96">Faction</name></name></expr>,
				<expr><name pos:line="123" pos:column="33">IsRandomSpawnPoint</name> <op:operator pos:line="123" pos:column="52">=</op:operator> <name><name pos:line="123" pos:column="54">runtimePlayer</name><op:operator pos:line="123" pos:column="67">.</op:operator><name pos:line="123" pos:column="68">SpawnPoint</name></name> <op:operator pos:line="123" pos:column="79">!=</op:operator> <name><name pos:line="123" pos:column="82">client</name><op:operator pos:line="123" pos:column="88">.</op:operator><name pos:line="123" pos:column="89">SpawnPoint</name></name></expr>
			}</block></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="126" pos:column="25">playersByRuntime</name><op:operator pos:line="126" pos:column="41">.</op:operator><name pos:line="126" pos:column="42">Add</name></name><argument_list pos:line="126" pos:column="45">(<argument><expr><name pos:line="126" pos:column="46">runtimePlayer</name></expr></argument>, <argument><expr><name pos:line="126" pos:column="61">player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="127" pos:column="25">Players</name><op:operator pos:line="127" pos:column="32">.</op:operator><name pos:line="127" pos:column="33">Add</name></name><argument_list pos:line="127" pos:column="36">(<argument><expr><name pos:line="127" pos:column="37">player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></function>

		<comment type="line" pos:line="130" pos:column="17">/// &lt;summary&gt;Gets the player information for the specified runtime player instance.&lt;/summary&gt;</comment>
		<function><type><specifier pos:line="131" pos:column="17">public</specifier> <name pos:line="131" pos:column="24">Player</name></type> <name pos:line="131" pos:column="31">GetPlayer</name><parameter_list pos:line="131" pos:column="40">(<param><decl><type><name><name pos:line="131" pos:column="41">OpenRA</name><op:operator pos:line="131" pos:column="47">.</op:operator><name pos:line="131" pos:column="48">Player</name></name></type> <name pos:line="131" pos:column="55">runtimePlayer</name></decl></param>)</parameter_list>
		<block pos:line="132" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="133" pos:column="25">Player</name></type> <name pos:line="133" pos:column="32">player</name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="135" pos:column="25">playersByRuntime</name><op:operator pos:line="135" pos:column="41">.</op:operator><name pos:line="135" pos:column="42">TryGetValue</name></name><argument_list pos:line="135" pos:column="53">(<argument><expr><name pos:line="135" pos:column="54">runtimePlayer</name></expr></argument>, <argument><expr pos:line="135" pos:column="69">out <name pos:line="135" pos:column="73">player</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<return pos:line="137" pos:column="25">return <expr><name pos:line="137" pos:column="32">player</name></expr>;</return>
		}</block></function>

		<class><specifier pos:line="140" pos:column="17">public</specifier> class <name pos:line="140" pos:column="30">Player</name>
		<block pos:line="141" pos:column="17">{
			<cpp:region pos:line="142" pos:column="25">#<cpp:directive pos:line="142" pos:column="26">region</cpp:directive> Start-up information</cpp:region>

			<decl_stmt><decl><type><specifier pos:line="144" pos:column="25">public</specifier> <name pos:line="144" pos:column="32">int</name></type> <name pos:line="144" pos:column="36">ClientIndex</name></decl>;</decl_stmt>

			<comment type="line" pos:line="146" pos:column="25">/// &lt;summary&gt;The player name, not guaranteed to be unique.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="147" pos:column="25">public</specifier> <name pos:line="147" pos:column="32">string</name></type> <name pos:line="147" pos:column="39">Name</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="148" pos:column="25">public</specifier> <name pos:line="148" pos:column="32">bool</name></type> <name pos:line="148" pos:column="37">IsHuman</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="149" pos:column="25">public</specifier> <name pos:line="149" pos:column="32">bool</name></type> <name pos:line="149" pos:column="37">IsBot</name></decl>;</decl_stmt>

			<comment type="line" pos:line="151" pos:column="25">/// &lt;summary&gt;The faction's display name.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="152" pos:column="25">public</specifier> <name pos:line="152" pos:column="32">string</name></type> <name pos:line="152" pos:column="39">FactionName</name></decl>;</decl_stmt>

			<comment type="line" pos:line="154" pos:column="25">/// &lt;summary&gt;The faction ID, a.k.a. the faction's internal name.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="155" pos:column="25">public</specifier> <name pos:line="155" pos:column="32">string</name></type> <name pos:line="155" pos:column="39">FactionId</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="156" pos:column="25">public</specifier> <name pos:line="156" pos:column="32">HSLColor</name></type> <name pos:line="156" pos:column="41">Color</name></decl>;</decl_stmt>

			<comment type="line" pos:line="158" pos:column="25">/// &lt;summary&gt;The team ID on start-up, or 0 if the player is not part of a team.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="159" pos:column="25">public</specifier> <name pos:line="159" pos:column="32">int</name></type> <name pos:line="159" pos:column="36">Team</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="160" pos:column="25">public</specifier> <name pos:line="160" pos:column="32">int</name></type> <name pos:line="160" pos:column="36">SpawnPoint</name></decl>;</decl_stmt>

			<comment type="line" pos:line="162" pos:column="25">/// &lt;summary&gt;True if the faction was chosen at random; otherwise, false.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="163" pos:column="25">public</specifier> <name pos:line="163" pos:column="32">bool</name></type> <name pos:line="163" pos:column="37">IsRandomFaction</name></decl>;</decl_stmt>

			<comment type="line" pos:line="165" pos:column="25">/// &lt;summary&gt;True if the spawn point was chosen at random; otherwise, false.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="166" pos:column="25">public</specifier> <name pos:line="166" pos:column="32">bool</name></type> <name pos:line="166" pos:column="37">IsRandomSpawnPoint</name></decl>;</decl_stmt>

			<cpp:endregion pos:line="168" pos:column="25">#<cpp:directive pos:line="168" pos:column="26">endregion</cpp:directive></cpp:endregion>

			<cpp:region pos:line="170" pos:column="25">#<cpp:directive pos:line="170" pos:column="26">region</cpp:directive></cpp:region>

			<comment type="line" pos:line="172" pos:column="25">/// &lt;summary&gt;The game outcome for this player.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="173" pos:column="25">public</specifier> <name pos:line="173" pos:column="32">WinState</name></type> <name pos:line="173" pos:column="41">Outcome</name></decl>;</decl_stmt>

			<comment type="line" pos:line="175" pos:column="25">/// &lt;summary&gt;The time when this player won or lost the game.&lt;/summary&gt;</comment>
			<decl_stmt><decl><type><specifier pos:line="176" pos:column="25">public</specifier> <name pos:line="176" pos:column="32">DateTime</name></type> <name pos:line="176" pos:column="41">OutcomeTimestampUtc</name></decl>;</decl_stmt>

			<cpp:endregion pos:line="178" pos:column="25">#<cpp:directive pos:line="178" pos:column="26">endregion</cpp:directive></cpp:endregion>
		}</block></class>
	}</block></class>
}</block></namespace>
</unit>
