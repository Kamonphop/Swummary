<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\GameSpeed.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Collections</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">Generic</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Linq</name></name>;</using>
<using pos:line="14" pos:column="1">using <name><name pos:line="14" pos:column="7">OpenRA</name><op:operator pos:line="14" pos:column="13">.</op:operator><name pos:line="14" pos:column="14">Graphics</name></name>;</using>

<namespace pos:line="16" pos:column="1">namespace <name pos:line="16" pos:column="11">OpenRA</name>
<block pos:line="17" pos:column="1">{
	<class><specifier pos:line="18" pos:column="9">public</specifier> class <name pos:line="18" pos:column="22">GameSpeed</name>
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><attribute pos:line="20" pos:column="17">[<expr><name pos:line="20" pos:column="18">Translate</name></expr>]</attribute>
		<specifier pos:line="21" pos:column="17">public</specifier> <specifier pos:line="21" pos:column="24">readonly</specifier> <name pos:line="21" pos:column="33">string</name></type> <name pos:line="21" pos:column="40">Name</name> <init pos:line="21" pos:column="45">= <expr><lit:literal type="string" pos:line="21" pos:column="47">"Default"</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="22" pos:column="17">public</specifier> <specifier pos:line="22" pos:column="24">readonly</specifier> <name pos:line="22" pos:column="33">int</name></type> <name pos:line="22" pos:column="37">Timestep</name> <init pos:line="22" pos:column="46">= <expr><lit:literal type="number" pos:line="22" pos:column="48">40</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="23" pos:column="17">public</specifier> <specifier pos:line="23" pos:column="24">readonly</specifier> <name pos:line="23" pos:column="33">int</name></type> <name pos:line="23" pos:column="37">OrderLatency</name> <init pos:line="23" pos:column="50">= <expr><lit:literal type="number" pos:line="23" pos:column="52">3</lit:literal></expr></init></decl>;</decl_stmt>
	}</block></class>

	<class><specifier pos:line="26" pos:column="9">public</specifier> class <name pos:line="26" pos:column="22">GameSpeeds</name> <super pos:line="26" pos:column="33">: <name pos:line="26" pos:column="35">IGlobalModData</name></super>
	<block pos:line="27" pos:column="9">{
		<decl_stmt><decl><type><attribute pos:line="28" pos:column="17">[<expr><call><name><name pos:line="28" pos:column="18">FieldLoader</name><op:operator pos:line="28" pos:column="29">.</op:operator><name pos:line="28" pos:column="30">LoadUsing</name></name><argument_list pos:line="28" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="40">"LoadSpeeds"</lit:literal></expr></argument>)</argument_list></call></expr>]</attribute>
		<specifier pos:line="29" pos:column="17">public</specifier> <specifier pos:line="29" pos:column="24">readonly</specifier> <name><name pos:line="29" pos:column="33">Dictionary</name><argument_list pos:line="29" pos:column="43">&lt;<argument><name pos:line="29" pos:column="44">string</name></argument>, <argument><name pos:line="29" pos:column="52">GameSpeed</name></argument>&gt;</argument_list></name></type> <name pos:line="29" pos:column="63">Speeds</name></decl>;</decl_stmt>

		<function><type><specifier pos:line="31" pos:column="17">static</specifier> <name pos:line="31" pos:column="24">object</name></type> <name pos:line="31" pos:column="31">LoadSpeeds</name><parameter_list pos:line="31" pos:column="41">(<param><decl><type><name pos:line="31" pos:column="42">MiniYaml</name></type> <name pos:line="31" pos:column="51">y</name></decl></param>)</parameter_list>
		<block pos:line="32" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">var</name></type> <name pos:line="33" pos:column="29">ret</name> <init pos:line="33" pos:column="33">= <expr><op:operator pos:line="33" pos:column="35">new</op:operator> <call><name><name pos:line="33" pos:column="39">Dictionary</name><argument_list pos:line="33" pos:column="49">&lt;<argument><name pos:line="33" pos:column="50">string</name></argument>, <argument><name pos:line="33" pos:column="58">GameSpeed</name></argument>&gt;</argument_list></name><argument_list pos:line="33" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<foreach pos:line="34" pos:column="25">foreach (<init><decl><type><name pos:line="34" pos:column="34">var</name></type> <name pos:line="34" pos:column="38">node</name> <range pos:line="34" pos:column="43">in <expr><name><name pos:line="34" pos:column="46">y</name><op:operator pos:line="34" pos:column="47">.</op:operator><name pos:line="34" pos:column="48">Nodes</name></name></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="35" pos:column="33">ret</name><op:operator pos:line="35" pos:column="36">.</op:operator><name pos:line="35" pos:column="37">Add</name></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name><name pos:line="35" pos:column="41">node</name><op:operator pos:line="35" pos:column="45">.</op:operator><name pos:line="35" pos:column="46">Key</name></name></expr></argument>, <argument><expr><call><name><name pos:line="35" pos:column="51">FieldLoader</name><op:operator pos:line="35" pos:column="62">.</op:operator><name><name pos:line="35" pos:column="63">Load</name><argument_list pos:line="35" pos:column="67">&lt;<argument><name pos:line="35" pos:column="68">GameSpeed</name></argument>&gt;</argument_list></name></name><argument_list pos:line="35" pos:column="78">(<argument><expr><name><name pos:line="35" pos:column="79">node</name><op:operator pos:line="35" pos:column="83">.</op:operator><name pos:line="35" pos:column="84">Value</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>

			<return pos:line="37" pos:column="25">return <expr><name pos:line="37" pos:column="32">ret</name></expr>;</return>
		}</block></function>
	}</block></class>
}</block></namespace>
</unit>
