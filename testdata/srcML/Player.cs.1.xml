<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\Player.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">Collections</name><op:operator pos:line="12" pos:column="25">.</op:operator><name pos:line="12" pos:column="26">Generic</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Linq</name></name>;</using>
<using pos:line="14" pos:column="1">using <name pos:line="14" pos:column="7">Eluant</name>;</using>
<using pos:line="15" pos:column="1">using <name><name pos:line="15" pos:column="7">Eluant</name><op:operator pos:line="15" pos:column="13">.</op:operator><name pos:line="15" pos:column="14">ObjectBinding</name></name>;</using>
<using pos:line="16" pos:column="1">using <name><name pos:line="16" pos:column="7">OpenRA</name><op:operator pos:line="16" pos:column="13">.</op:operator><name pos:line="16" pos:column="14">Graphics</name></name>;</using>
<using pos:line="17" pos:column="1">using <name><name pos:line="17" pos:column="7">OpenRA</name><op:operator pos:line="17" pos:column="13">.</op:operator><name pos:line="17" pos:column="14">Network</name></name>;</using>
<using pos:line="18" pos:column="1">using <name><name pos:line="18" pos:column="7">OpenRA</name><op:operator pos:line="18" pos:column="13">.</op:operator><name pos:line="18" pos:column="14">Primitives</name></name>;</using>
<using pos:line="19" pos:column="1">using <name><name pos:line="19" pos:column="7">OpenRA</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">Scripting</name></name>;</using>
<using pos:line="20" pos:column="1">using <name><name pos:line="20" pos:column="7">OpenRA</name><op:operator pos:line="20" pos:column="13">.</op:operator><name pos:line="20" pos:column="14">Traits</name></name>;</using>

<namespace pos:line="22" pos:column="1">namespace <name pos:line="22" pos:column="11">OpenRA</name>
<block pos:line="23" pos:column="1">{
	<enum><specifier pos:line="24" pos:column="9">public</specifier> enum <macro><name pos:line="24" pos:column="21">PowerState</name></macro> <block pos:line="24" pos:column="32">{ <decl><name pos:line="24" pos:column="34">Normal</name></decl><op:operator pos:line="24" pos:column="40">,</op:operator> <decl><name pos:line="24" pos:column="42">Low</name></decl><op:operator pos:line="24" pos:column="45">,</op:operator> <decl><name pos:line="24" pos:column="47">Critical</name></decl> }</block>
	<decl pos:line="25" pos:column="9">public enum <name pos:line="25" pos:column="21">WinState</name> <block pos:line="25" pos:column="30">{ <expr_stmt><expr><name pos:line="25" pos:column="32">Undefined</name></expr><op:operator pos:line="25" pos:column="41">,</op:operator> <expr><name pos:line="25" pos:column="43">Won</name></expr><op:operator pos:line="25" pos:column="46">,</op:operator> <expr><name pos:line="25" pos:column="48">Lost</name></expr></expr_stmt> }</block></decl>

	<decl pos:line="27" pos:column="9">public <name pos:line="27" pos:column="16">class</name> <name pos:line="27" pos:column="22">Player</name> <op:operator pos:line="27" pos:column="29">:</op:operator> <name pos:line="27" pos:column="31">IScriptBindable</name></decl><op:operator pos:line="27" pos:column="46">,</op:operator> <expr_stmt><expr><name pos:line="27" pos:column="48">IScriptNotifyBind</name></expr><op:operator pos:line="27" pos:column="65">,</op:operator> <expr><name pos:line="27" pos:column="67">ILuaTableBinding</name></expr><op:operator pos:line="27" pos:column="83">,</op:operator> <expr><name pos:line="27" pos:column="85">ILuaEqualityBinding</name></expr><op:operator pos:line="27" pos:column="104">,</op:operator> <expr><name pos:line="27" pos:column="106">ILuaToStringBinding</name>
	<block pos:line="28" pos:column="9">{
		<expr pos:line="29" pos:column="17">public readonly <name pos:line="29" pos:column="33">Actor</name> <name pos:line="29" pos:column="39">PlayerActor</name></expr>;
		<expr pos:line="30" pos:column="17">public readonly <name pos:line="30" pos:column="33">HSLColor</name> <name pos:line="30" pos:column="42">Color</name></expr>;

		<expr pos:line="32" pos:column="17">public readonly <name pos:line="32" pos:column="33">string</name> <name pos:line="32" pos:column="40">PlayerName</name></expr>;
		<expr pos:line="33" pos:column="17">public readonly <name pos:line="33" pos:column="33">string</name> <name pos:line="33" pos:column="40">InternalName</name></expr>;
		<expr pos:line="34" pos:column="17">public readonly <name pos:line="34" pos:column="33">FactionInfo</name> <name pos:line="34" pos:column="45">Faction</name></expr>;
		<expr pos:line="35" pos:column="17">public readonly <name pos:line="35" pos:column="33">bool</name> <name pos:line="35" pos:column="38">NonCombatant</name> <op:operator pos:line="35" pos:column="51">=</op:operator> <lit:literal type="boolean" pos:line="35" pos:column="53">false</lit:literal></expr>;
		<expr pos:line="36" pos:column="17">public readonly <name pos:line="36" pos:column="33">bool</name> <name pos:line="36" pos:column="38">Playable</name> <op:operator pos:line="36" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="36" pos:column="49">true</lit:literal></expr>;
		<expr pos:line="37" pos:column="17">public readonly <name pos:line="37" pos:column="33">int</name> <name pos:line="37" pos:column="37">ClientIndex</name></expr>;
		<expr pos:line="38" pos:column="17">public readonly <name pos:line="38" pos:column="33">PlayerReference</name> <name pos:line="38" pos:column="49">PlayerReference</name></expr>;

		<comment type="line" pos:line="40" pos:column="17">/// &lt;summary&gt;The faction (including Random, etc) that was selected in the lobby.&lt;/summary&gt;</comment>
		<expr pos:line="41" pos:column="17">public readonly <name pos:line="41" pos:column="33">FactionInfo</name> <name pos:line="41" pos:column="45">DisplayFaction</name></expr>;

		<expr pos:line="43" pos:column="17">public <name pos:line="43" pos:column="24">WinState</name> <name pos:line="43" pos:column="33">WinState</name> <op:operator pos:line="43" pos:column="42">=</op:operator> <name><name pos:line="43" pos:column="44">WinState</name><op:operator pos:line="43" pos:column="52">.</op:operator><name pos:line="43" pos:column="53">Undefined</name></name></expr>;
		<expr pos:line="44" pos:column="17">public <name pos:line="44" pos:column="24">bool</name> <name pos:line="44" pos:column="29">IsBot</name></expr>;
		<expr pos:line="45" pos:column="17">public <name pos:line="45" pos:column="24">int</name> <name pos:line="45" pos:column="28">SpawnPoint</name></expr>;
		<expr pos:line="46" pos:column="17">public <name pos:line="46" pos:column="24">bool</name> <name pos:line="46" pos:column="29">HasObjectives</name> <op:operator pos:line="46" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="46" pos:column="45">false</lit:literal></expr>;
		<expr pos:line="47" pos:column="17">public <name pos:line="47" pos:column="24">bool</name> <name pos:line="47" pos:column="29">Spectating</name></expr>;

		<expr pos:line="49" pos:column="17">public <name pos:line="49" pos:column="24">Shroud</name> <name pos:line="49" pos:column="31">Shroud</name></expr>;
		<expr pos:line="50" pos:column="17">public <name pos:line="50" pos:column="24">World</name> <name pos:line="50" pos:column="30">World</name> <block pos:line="50" pos:column="36">{ <expr><name pos:line="50" pos:column="38">get</name></expr>; <expr pos:line="50" pos:column="43">private <name pos:line="50" pos:column="51">set</name></expr>; }</block>

		readonly <name><name pos:line="52" pos:column="26">IFogVisibilityModifier</name><index pos:line="52" pos:column="48">[]</index></name> <name pos:line="52" pos:column="51">fogVisibilities</name></expr>;

		<expr pos:line="54" pos:column="17">static <name pos:line="54" pos:column="24">FactionInfo</name> <macro><name pos:line="54" pos:column="36">ChooseFaction</name><argument_list pos:line="54" pos:column="49">(<argument pos:line="54" pos:column="50">World world</argument>, <argument pos:line="54" pos:column="63">string name</argument>, <argument pos:line="54" pos:column="76">bool requireSelectable = true</argument>)</argument_list></macro>
		<block pos:line="55" pos:column="17">{
			<expr><name pos:line="56" pos:column="25">var</name> <name pos:line="56" pos:column="29">selectableFactions</name> <op:operator pos:line="56" pos:column="48">=</op:operator> <name><name pos:line="56" pos:column="50">world</name><op:operator pos:line="56" pos:column="55">.</op:operator><name pos:line="56" pos:column="56">Map</name><op:operator pos:line="56" pos:column="59">.</op:operator><name pos:line="56" pos:column="60">Rules</name><op:operator pos:line="56" pos:column="65">.</op:operator><name pos:line="56" pos:column="66">Actors</name><index pos:line="56" pos:column="72">[<expr><lit:literal type="string" pos:line="56" pos:column="73">"world"</lit:literal></expr>]</index></name><op:operator pos:line="56" pos:column="81">.</op:operator><call><name><name pos:line="56" pos:column="82">Traits</name>
				<op:operator pos:line="57" pos:column="33">.</op:operator><name><name pos:line="57" pos:column="34">WithInterface</name><argument_list pos:line="57" pos:column="47">&lt;<argument><name pos:line="57" pos:column="48">FactionInfo</name></argument>&gt;</argument_list></name></name><argument_list pos:line="57" pos:column="60">()</argument_list></call><op:operator pos:line="57" pos:column="62">.</op:operator><call><name pos:line="57" pos:column="63">Where</name><argument_list pos:line="57" pos:column="68">(<argument><expr><lambda><name pos:line="57" pos:column="69">f</name> <op:operator pos:line="57" pos:column="71">=&gt;</op:operator> <op:operator pos:line="57" pos:column="74">!</op:operator><name pos:line="57" pos:column="75">requireSelectable</name> <op:operator pos:line="57" pos:column="93">||</op:operator> <name><name pos:line="57" pos:column="96">f</name><op:operator pos:line="57" pos:column="97">.</op:operator><name pos:line="57" pos:column="98">Selectable</name></name></lambda></expr></argument>)</argument_list></call>
				<op:operator pos:line="58" pos:column="33">.</op:operator><call><name pos:line="58" pos:column="34">ToList</name><argument_list pos:line="58" pos:column="40">()</argument_list></call></expr>;

			<expr><name pos:line="60" pos:column="25">var</name> <name pos:line="60" pos:column="29">selected</name> <op:operator pos:line="60" pos:column="38">=</op:operator> <call><name><name pos:line="60" pos:column="40">selectableFactions</name><op:operator pos:line="60" pos:column="58">.</op:operator><name pos:line="60" pos:column="59">FirstOrDefault</name></name><argument_list pos:line="60" pos:column="73">(<argument><expr><lambda><name pos:line="60" pos:column="74">f</name> <op:operator pos:line="60" pos:column="76">=&gt;</op:operator> <name><name pos:line="60" pos:column="79">f</name><op:operator pos:line="60" pos:column="80">.</op:operator><name pos:line="60" pos:column="81">InternalName</name></name> <op:operator pos:line="60" pos:column="94">==</op:operator> <name pos:line="60" pos:column="97">name</name></lambda></expr></argument>)</argument_list></call>
				<op:operator pos:line="61" pos:column="33">??</op:operator> <call><name><name pos:line="61" pos:column="36">selectableFactions</name><op:operator pos:line="61" pos:column="54">.</op:operator><name pos:line="61" pos:column="55">Random</name></name><argument_list pos:line="61" pos:column="61">(<argument><expr><name><name pos:line="61" pos:column="62">world</name><op:operator pos:line="61" pos:column="67">.</op:operator><name pos:line="61" pos:column="68">SharedRandom</name></name></expr></argument>)</argument_list></call></expr>;

			<comment type="line" pos:line="63" pos:column="25">// Don't loop infinite</comment>
			<for pos:line="64" pos:column="25">for (<init><decl><type><name pos:line="64" pos:column="30">var</name></type> <name pos:line="64" pos:column="34">i</name> <init pos:line="64" pos:column="36">= <expr><lit:literal type="number" pos:line="64" pos:column="38">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="64" pos:column="41">i</name> <op:operator pos:line="64" pos:column="43">&lt;=</op:operator> <lit:literal type="number" pos:line="64" pos:column="46">10</lit:literal> <op:operator pos:line="64" pos:column="49">&amp;&amp;</op:operator> <call><name><name pos:line="64" pos:column="52">selected</name><op:operator pos:line="64" pos:column="60">.</op:operator><name pos:line="64" pos:column="61">RandomFactionMembers</name><op:operator pos:line="64" pos:column="81">.</op:operator><name pos:line="64" pos:column="82">Any</name></name><argument_list pos:line="64" pos:column="85">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="64" pos:column="89">i</name><op:operator pos:line="64" pos:column="90">++</op:operator></expr></incr>)
			<block pos:line="65" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="66" pos:column="33">var</name></type> <name pos:line="66" pos:column="37">faction</name> <init pos:line="66" pos:column="45">= <expr><call><name><name pos:line="66" pos:column="47">selected</name><op:operator pos:line="66" pos:column="55">.</op:operator><name pos:line="66" pos:column="56">RandomFactionMembers</name><op:operator pos:line="66" pos:column="76">.</op:operator><name pos:line="66" pos:column="77">Random</name></name><argument_list pos:line="66" pos:column="83">(<argument><expr><name><name pos:line="66" pos:column="84">world</name><op:operator pos:line="66" pos:column="89">.</op:operator><name pos:line="66" pos:column="90">SharedRandom</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="67" pos:column="33">selected</name> <op:operator pos:line="67" pos:column="42">=</op:operator> <call><name><name pos:line="67" pos:column="44">selectableFactions</name><op:operator pos:line="67" pos:column="62">.</op:operator><name pos:line="67" pos:column="63">FirstOrDefault</name></name><argument_list pos:line="67" pos:column="77">(<argument><expr><lambda><name pos:line="67" pos:column="78">f</name> <op:operator pos:line="67" pos:column="80">=&gt;</op:operator> <name><name pos:line="67" pos:column="83">f</name><op:operator pos:line="67" pos:column="84">.</op:operator><name pos:line="67" pos:column="85">InternalName</name></name> <op:operator pos:line="67" pos:column="98">==</op:operator> <name pos:line="67" pos:column="101">faction</name></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if pos:line="69" pos:column="33">if <condition pos:line="69" pos:column="36">(<expr><name pos:line="69" pos:column="37">selected</name> <op:operator pos:line="69" pos:column="46">==</op:operator> <name pos:line="69" pos:column="49">null</name></expr>)</condition><then pos:line="69" pos:column="54">
					<throw pos:line="70" pos:column="41">throw <expr><op:operator pos:line="70" pos:column="47">new</op:operator> <call><name pos:line="70" pos:column="51">YamlException</name><argument_list pos:line="70" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="65">"Unknown faction: {0}"</lit:literal><op:operator pos:line="70" pos:column="87">.</op:operator><call><name pos:line="70" pos:column="88">F</name><argument_list pos:line="70" pos:column="89">(<argument><expr><name pos:line="70" pos:column="90">faction</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</throw></then></if>
			<expr_stmt/></block></for>}</block></expr>

			<return pos:line="73" pos:column="25">return <expr><name pos:line="73" pos:column="32">selected</name></expr>;</return>
		}</block></expr></expr_stmt>

		<decl pos:line="76" pos:column="17">static <name pos:line="76" pos:column="24">FactionInfo</name> <name pos:line="76" pos:column="36">ChooseDisplayFaction</name><argument_list pos:line="76" pos:column="56">(<argument><expr><name pos:line="76" pos:column="57">World</name> <name pos:line="76" pos:column="63">world</name></expr></argument>, <argument><expr><name pos:line="76" pos:column="70">string</name> <name pos:line="76" pos:column="77">factionName</name></expr></argument>)</argument_list>
		<block pos:line="77" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="78" pos:column="25">var</name></type> <name pos:line="78" pos:column="29">factions</name> <init pos:line="78" pos:column="38">= <expr><name><name pos:line="78" pos:column="40">world</name><op:operator pos:line="78" pos:column="45">.</op:operator><name pos:line="78" pos:column="46">Map</name><op:operator pos:line="78" pos:column="49">.</op:operator><name pos:line="78" pos:column="50">Rules</name><op:operator pos:line="78" pos:column="55">.</op:operator><name pos:line="78" pos:column="56">Actors</name><index pos:line="78" pos:column="62">[<expr><lit:literal type="string" pos:line="78" pos:column="63">"world"</lit:literal></expr>]</index></name><op:operator pos:line="78" pos:column="71">.</op:operator><call><name><name pos:line="78" pos:column="72">Traits</name><op:operator pos:line="78" pos:column="78">.</op:operator><name><name pos:line="78" pos:column="79">WithInterface</name><argument_list pos:line="78" pos:column="92">&lt;<argument><name pos:line="78" pos:column="93">FactionInfo</name></argument>&gt;</argument_list></name></name><argument_list pos:line="78" pos:column="105">()</argument_list></call><op:operator pos:line="78" pos:column="107">.</op:operator><call><name pos:line="78" pos:column="108">ToArray</name><argument_list pos:line="78" pos:column="115">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<return pos:line="80" pos:column="25">return <expr><call><name><name pos:line="80" pos:column="32">factions</name><op:operator pos:line="80" pos:column="40">.</op:operator><name pos:line="80" pos:column="41">FirstOrDefault</name></name><argument_list pos:line="80" pos:column="55">(<argument><expr><lambda><name pos:line="80" pos:column="56">f</name> <op:operator pos:line="80" pos:column="58">=&gt;</op:operator> <name><name pos:line="80" pos:column="61">f</name><op:operator pos:line="80" pos:column="62">.</op:operator><name pos:line="80" pos:column="63">InternalName</name></name> <op:operator pos:line="80" pos:column="76">==</op:operator> <name pos:line="80" pos:column="79">factionName</name></lambda></expr></argument>)</argument_list></call> <op:operator pos:line="80" pos:column="92">??</op:operator> <call><name><name pos:line="80" pos:column="95">factions</name><op:operator pos:line="80" pos:column="103">.</op:operator><name pos:line="80" pos:column="104">First</name></name><argument_list pos:line="80" pos:column="109">()</argument_list></call></expr>;</return>
		}</block></decl>

		<decl pos:line="83" pos:column="17">public <name pos:line="83" pos:column="24">Player</name><argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">World</name> <name pos:line="83" pos:column="37">world</name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="44">Session</name><op:operator pos:line="83" pos:column="51">.</op:operator><name pos:line="83" pos:column="52">Client</name></name> <name pos:line="83" pos:column="59">client</name></expr></argument>, <argument><expr><name pos:line="83" pos:column="67">PlayerReference</name> <name pos:line="83" pos:column="83">pr</name></expr></argument>)</argument_list>
		<block pos:line="84" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="85" pos:column="25">string</name></type> <name pos:line="85" pos:column="32">botType</name></decl>;</decl_stmt>

			<expr_stmt><expr><name pos:line="87" pos:column="25">World</name> <op:operator pos:line="87" pos:column="31">=</op:operator> <name pos:line="87" pos:column="33">world</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="88" pos:column="25">InternalName</name> <op:operator pos:line="88" pos:column="38">=</op:operator> <name><name pos:line="88" pos:column="40">pr</name><op:operator pos:line="88" pos:column="42">.</op:operator><name pos:line="88" pos:column="43">Name</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="89" pos:column="25">PlayerReference</name> <op:operator pos:line="89" pos:column="41">=</op:operator> <name pos:line="89" pos:column="43">pr</name></expr>;</expr_stmt>

			<comment type="line" pos:line="91" pos:column="25">// Real player or host-created bot</comment>
			<if pos:line="92" pos:column="25">if <condition pos:line="92" pos:column="28">(<expr><name pos:line="92" pos:column="29">client</name> <op:operator pos:line="92" pos:column="36">!=</op:operator> <name pos:line="92" pos:column="39">null</name></expr>)</condition><then pos:line="92" pos:column="44">
			<block pos:line="93" pos:column="25">{
				<expr_stmt><expr><name pos:line="94" pos:column="33">ClientIndex</name> <op:operator pos:line="94" pos:column="45">=</op:operator> <name><name pos:line="94" pos:column="47">client</name><op:operator pos:line="94" pos:column="53">.</op:operator><name pos:line="94" pos:column="54">Index</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="95" pos:column="33">Color</name> <op:operator pos:line="95" pos:column="39">=</op:operator> <name><name pos:line="95" pos:column="41">client</name><op:operator pos:line="95" pos:column="47">.</op:operator><name pos:line="95" pos:column="48">Color</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="96" pos:column="33">PlayerName</name> <op:operator pos:line="96" pos:column="44">=</op:operator> <name><name pos:line="96" pos:column="46">client</name><op:operator pos:line="96" pos:column="52">.</op:operator><name pos:line="96" pos:column="53">Name</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="97" pos:column="33">botType</name> <op:operator pos:line="97" pos:column="41">=</op:operator> <name><name pos:line="97" pos:column="43">client</name><op:operator pos:line="97" pos:column="49">.</op:operator><name pos:line="97" pos:column="50">Bot</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="98" pos:column="33">Faction</name> <op:operator pos:line="98" pos:column="41">=</op:operator> <call><name pos:line="98" pos:column="43">ChooseFaction</name><argument_list pos:line="98" pos:column="56">(<argument><expr><name pos:line="98" pos:column="57">world</name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="64">client</name><op:operator pos:line="98" pos:column="70">.</op:operator><name pos:line="98" pos:column="71">Faction</name></name></expr></argument>, <argument><expr><op:operator pos:line="98" pos:column="80">!</op:operator><name><name pos:line="98" pos:column="81">pr</name><op:operator pos:line="98" pos:column="83">.</op:operator><name pos:line="98" pos:column="84">LockFaction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="99" pos:column="33">DisplayFaction</name> <op:operator pos:line="99" pos:column="48">=</op:operator> <call><name pos:line="99" pos:column="50">ChooseDisplayFaction</name><argument_list pos:line="99" pos:column="70">(<argument><expr><name pos:line="99" pos:column="71">world</name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="78">client</name><op:operator pos:line="99" pos:column="84">.</op:operator><name pos:line="99" pos:column="85">Faction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="101" pos:column="25">else
			<block pos:line="102" pos:column="25">{
				<comment type="line" pos:line="103" pos:column="33">// Map player</comment>
				<expr_stmt><expr><name pos:line="104" pos:column="33">ClientIndex</name> <op:operator pos:line="104" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="104" pos:column="47">0</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="104" pos:column="50">// Owned by the host (TODO: fix this)</comment>
				<expr_stmt><expr><name pos:line="105" pos:column="33">Color</name> <op:operator pos:line="105" pos:column="39">=</op:operator> <name><name pos:line="105" pos:column="41">pr</name><op:operator pos:line="105" pos:column="43">.</op:operator><name pos:line="105" pos:column="44">Color</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="106" pos:column="33">PlayerName</name> <op:operator pos:line="106" pos:column="44">=</op:operator> <name><name pos:line="106" pos:column="46">pr</name><op:operator pos:line="106" pos:column="48">.</op:operator><name pos:line="106" pos:column="49">Name</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="107" pos:column="33">NonCombatant</name> <op:operator pos:line="107" pos:column="46">=</op:operator> <name><name pos:line="107" pos:column="48">pr</name><op:operator pos:line="107" pos:column="50">.</op:operator><name pos:line="107" pos:column="51">NonCombatant</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="108" pos:column="33">Playable</name> <op:operator pos:line="108" pos:column="42">=</op:operator> <name><name pos:line="108" pos:column="44">pr</name><op:operator pos:line="108" pos:column="46">.</op:operator><name pos:line="108" pos:column="47">Playable</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="109" pos:column="33">Spectating</name> <op:operator pos:line="109" pos:column="44">=</op:operator> <name><name pos:line="109" pos:column="46">pr</name><op:operator pos:line="109" pos:column="48">.</op:operator><name pos:line="109" pos:column="49">Spectating</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="110" pos:column="33">botType</name> <op:operator pos:line="110" pos:column="41">=</op:operator> <name><name pos:line="110" pos:column="43">pr</name><op:operator pos:line="110" pos:column="45">.</op:operator><name pos:line="110" pos:column="46">Bot</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="111" pos:column="33">Faction</name> <op:operator pos:line="111" pos:column="41">=</op:operator> <call><name pos:line="111" pos:column="43">ChooseFaction</name><argument_list pos:line="111" pos:column="56">(<argument><expr><name pos:line="111" pos:column="57">world</name></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="64">pr</name><op:operator pos:line="111" pos:column="66">.</op:operator><name pos:line="111" pos:column="67">Faction</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="111" pos:column="76">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="112" pos:column="33">DisplayFaction</name> <op:operator pos:line="112" pos:column="48">=</op:operator> <call><name pos:line="112" pos:column="50">ChooseDisplayFaction</name><argument_list pos:line="112" pos:column="70">(<argument><expr><name pos:line="112" pos:column="71">world</name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="78">pr</name><op:operator pos:line="112" pos:column="80">.</op:operator><name pos:line="112" pos:column="81">Faction</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>

			<expr_stmt><expr><name pos:line="115" pos:column="25">PlayerActor</name> <op:operator pos:line="115" pos:column="37">=</op:operator> <call><name><name pos:line="115" pos:column="39">world</name><op:operator pos:line="115" pos:column="44">.</op:operator><name pos:line="115" pos:column="45">CreateActor</name></name><argument_list pos:line="115" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="57">"Player"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="115" pos:column="67">new</op:operator> <name pos:line="115" pos:column="71">TypeDictionary</name> <block pos:line="115" pos:column="86">{ <expr><op:operator pos:line="115" pos:column="88">new</op:operator> <call><name pos:line="115" pos:column="92">OwnerInit</name><argument_list pos:line="115" pos:column="101">(<argument><expr><name pos:line="115" pos:column="102">this</name></expr></argument>)</argument_list></call></expr> }</block></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="116" pos:column="25">Shroud</name> <op:operator pos:line="116" pos:column="32">=</op:operator> <call><name><name pos:line="116" pos:column="34">PlayerActor</name><op:operator pos:line="116" pos:column="45">.</op:operator><name><name pos:line="116" pos:column="46">Trait</name><argument_list pos:line="116" pos:column="51">&lt;<argument><name pos:line="116" pos:column="52">Shroud</name></argument>&gt;</argument_list></name></name><argument_list pos:line="116" pos:column="59">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="118" pos:column="25">fogVisibilities</name> <op:operator pos:line="118" pos:column="41">=</op:operator> <call><name><name pos:line="118" pos:column="43">PlayerActor</name><op:operator pos:line="118" pos:column="54">.</op:operator><name><name pos:line="118" pos:column="55">TraitsImplementing</name><argument_list pos:line="118" pos:column="73">&lt;<argument><name pos:line="118" pos:column="74">IFogVisibilityModifier</name></argument>&gt;</argument_list></name></name><argument_list pos:line="118" pos:column="97">()</argument_list></call><op:operator pos:line="118" pos:column="99">.</op:operator><call><name pos:line="118" pos:column="100">ToArray</name><argument_list pos:line="118" pos:column="107">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="120" pos:column="25">// Enable the bot logic on the host</comment>
			<expr_stmt><expr><name pos:line="121" pos:column="25">IsBot</name> <op:operator pos:line="121" pos:column="31">=</op:operator> <name pos:line="121" pos:column="33">botType</name> <op:operator pos:line="121" pos:column="41">!=</op:operator> <name pos:line="121" pos:column="44">null</name></expr>;</expr_stmt>
			<if pos:line="122" pos:column="25">if <condition pos:line="122" pos:column="28">(<expr><name pos:line="122" pos:column="29">IsBot</name> <op:operator pos:line="122" pos:column="35">&amp;&amp;</op:operator> <name><name pos:line="122" pos:column="38">Game</name><op:operator pos:line="122" pos:column="42">.</op:operator><name pos:line="122" pos:column="43">IsHost</name></name></expr>)</condition><then pos:line="122" pos:column="50">
			<block pos:line="123" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="124" pos:column="33">var</name></type> <name pos:line="124" pos:column="37">logic</name> <init pos:line="124" pos:column="43">= <expr><call><name><name pos:line="124" pos:column="45">PlayerActor</name><op:operator pos:line="124" pos:column="56">.</op:operator><name><name pos:line="124" pos:column="57">TraitsImplementing</name><argument_list pos:line="124" pos:column="75">&lt;<argument><name pos:line="124" pos:column="76">IBot</name></argument>&gt;</argument_list></name></name><argument_list pos:line="124" pos:column="81">()</argument_list></call><op:operator pos:line="124" pos:column="83">.</op:operator><call><name pos:line="124" pos:column="84">FirstOrDefault</name><argument_list pos:line="124" pos:column="98">(<argument><expr><lambda><name pos:line="124" pos:column="99">b</name> <op:operator pos:line="124" pos:column="101">=&gt;</op:operator> <name><name pos:line="124" pos:column="104">b</name><op:operator pos:line="124" pos:column="105">.</op:operator><name pos:line="124" pos:column="106">Info</name><op:operator pos:line="124" pos:column="110">.</op:operator><name pos:line="124" pos:column="111">Name</name></name> <op:operator pos:line="124" pos:column="116">==</op:operator> <name pos:line="124" pos:column="119">botType</name></lambda></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="125" pos:column="33">if <condition pos:line="125" pos:column="36">(<expr><name pos:line="125" pos:column="37">logic</name> <op:operator pos:line="125" pos:column="43">==</op:operator> <name pos:line="125" pos:column="46">null</name></expr>)</condition><then pos:line="125" pos:column="51">
					<expr_stmt><expr><call><name><name pos:line="126" pos:column="41">Log</name><op:operator pos:line="126" pos:column="44">.</op:operator><name pos:line="126" pos:column="45">Write</name></name><argument_list pos:line="126" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="51">"debug"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="126" pos:column="60">"Invalid bot type: {0}"</lit:literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="85">botType</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="127" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="128" pos:column="41">logic</name><op:operator pos:line="128" pos:column="46">.</op:operator><name pos:line="128" pos:column="47">Activate</name></name><argument_list pos:line="128" pos:column="55">(<argument><expr><name pos:line="128" pos:column="56">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then></if>
		}</block></decl>

		<decl pos:line="132" pos:column="17">public <name pos:line="132" pos:column="24">override</name> <name pos:line="132" pos:column="33">string</name> <name pos:line="132" pos:column="40">ToString</name><argument_list pos:line="132" pos:column="48">()</argument_list>
		<block pos:line="133" pos:column="17">{
			<return pos:line="134" pos:column="25">return <expr><lit:literal type="string" pos:line="134" pos:column="32">"{0} ({1})"</lit:literal><op:operator pos:line="134" pos:column="43">.</op:operator><call><name pos:line="134" pos:column="44">F</name><argument_list pos:line="134" pos:column="45">(<argument><expr><name pos:line="134" pos:column="46">PlayerName</name></expr></argument>, <argument><expr><name pos:line="134" pos:column="58">ClientIndex</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></decl>

		<decl pos:line="137" pos:column="17">public <name><name pos:line="137" pos:column="24">Dictionary</name><argument_list pos:line="137" pos:column="34">&lt;<argument><name pos:line="137" pos:column="35">Player</name></argument>, <argument><name pos:line="137" pos:column="43">Stance</name></argument>&gt;</argument_list></name> <name pos:line="137" pos:column="51">Stances</name> <init pos:line="137" pos:column="59">= <expr><op:operator pos:line="137" pos:column="61">new</op:operator> <call><name><name pos:line="137" pos:column="65">Dictionary</name><argument_list pos:line="137" pos:column="75">&lt;<argument><name pos:line="137" pos:column="76">Player</name></argument>, <argument><name pos:line="137" pos:column="84">Stance</name></argument>&gt;</argument_list></name><argument_list pos:line="137" pos:column="91">()</argument_list></call></expr></init></decl>;</enum>
		<function><type><specifier pos:line="138" pos:column="17">public</specifier> <name pos:line="138" pos:column="24">bool</name></type> <name pos:line="138" pos:column="29">IsAlliedWith</name><parameter_list pos:line="138" pos:column="41">(<param><decl><type><name pos:line="138" pos:column="42">Player</name></type> <name pos:line="138" pos:column="49">p</name></decl></param>)</parameter_list>
		<block pos:line="139" pos:column="17">{
			<comment type="line" pos:line="140" pos:column="25">// Observers are considered allies to active combatants</comment>
			<return pos:line="141" pos:column="25">return <expr><name pos:line="141" pos:column="32">p</name> <op:operator pos:line="141" pos:column="34">==</op:operator> <name pos:line="141" pos:column="37">null</name> <op:operator pos:line="141" pos:column="42">||</op:operator> <name><name pos:line="141" pos:column="45">Stances</name><index pos:line="141" pos:column="52">[<expr><name pos:line="141" pos:column="53">p</name></expr>]</index></name> <op:operator pos:line="141" pos:column="56">==</op:operator> <name><name pos:line="141" pos:column="59">Stance</name><op:operator pos:line="141" pos:column="65">.</op:operator><name pos:line="141" pos:column="66">Ally</name></name> <op:operator pos:line="141" pos:column="71">||</op:operator> <op:operator pos:line="141" pos:column="74">(</op:operator><name><name pos:line="141" pos:column="75">p</name><op:operator pos:line="141" pos:column="76">.</op:operator><name pos:line="141" pos:column="77">Spectating</name> <type:modifier pos:line="141" pos:column="88">&amp;&amp;</type:modifier></name> <op:operator pos:line="141" pos:column="91">!</op:operator><name pos:line="141" pos:column="92">NonCombatant</name><op:operator pos:line="141" pos:column="104">)</op:operator></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="144" pos:column="17">public</specifier> <name pos:line="144" pos:column="24">void</name></type> <name pos:line="144" pos:column="29">SetStance</name><parameter_list pos:line="144" pos:column="38">(<param><decl><type><name pos:line="144" pos:column="39">Player</name></type> <name pos:line="144" pos:column="46">target</name></decl></param>, <param><decl><type><name pos:line="144" pos:column="54">Stance</name></type> <name pos:line="144" pos:column="61">s</name></decl></param>)</parameter_list>
		<block pos:line="145" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="146" pos:column="25">var</name></type> <name pos:line="146" pos:column="29">oldStance</name> <init pos:line="146" pos:column="39">= <expr><name><name pos:line="146" pos:column="41">Stances</name><index pos:line="146" pos:column="48">[<expr><name pos:line="146" pos:column="49">target</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="147" pos:column="25">Stances</name><index pos:line="147" pos:column="32">[<expr><name pos:line="147" pos:column="33">target</name></expr>]</index></name> <op:operator pos:line="147" pos:column="41">=</op:operator> <name pos:line="147" pos:column="43">s</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="148" pos:column="25">target</name><op:operator pos:line="148" pos:column="31">.</op:operator><name pos:line="148" pos:column="32">Shroud</name><op:operator pos:line="148" pos:column="38">.</op:operator><name pos:line="148" pos:column="39">UpdatePlayerStance</name></name><argument_list pos:line="148" pos:column="57">(<argument><expr><name pos:line="148" pos:column="58">World</name></expr></argument>, <argument><expr><name pos:line="148" pos:column="65">this</name></expr></argument>, <argument><expr><name pos:line="148" pos:column="71">oldStance</name></expr></argument>, <argument><expr><name pos:line="148" pos:column="82">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="149" pos:column="25">Shroud</name><op:operator pos:line="149" pos:column="31">.</op:operator><name pos:line="149" pos:column="32">UpdatePlayerStance</name></name><argument_list pos:line="149" pos:column="50">(<argument><expr><name pos:line="149" pos:column="51">World</name></expr></argument>, <argument><expr><name pos:line="149" pos:column="58">target</name></expr></argument>, <argument><expr><name pos:line="149" pos:column="66">oldStance</name></expr></argument>, <argument><expr><name pos:line="149" pos:column="77">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<foreach pos:line="151" pos:column="25">foreach (<init><decl><type><name pos:line="151" pos:column="34">var</name></type> <name pos:line="151" pos:column="38">nsc</name> <range pos:line="151" pos:column="42">in <expr><call><name><name pos:line="151" pos:column="45">World</name><op:operator pos:line="151" pos:column="50">.</op:operator><name><name pos:line="151" pos:column="51">ActorsWithTrait</name><argument_list pos:line="151" pos:column="66">&lt;<argument><name pos:line="151" pos:column="67">INotifyStanceChanged</name></argument>&gt;</argument_list></name></name><argument_list pos:line="151" pos:column="88">()</argument_list></call></expr></range></decl></init>)
				<expr_stmt><expr><call><name><name pos:line="152" pos:column="33">nsc</name><op:operator pos:line="152" pos:column="36">.</op:operator><name pos:line="152" pos:column="37">Trait</name><op:operator pos:line="152" pos:column="42">.</op:operator><name pos:line="152" pos:column="43">StanceChanged</name></name><argument_list pos:line="152" pos:column="56">(<argument><expr><name><name pos:line="152" pos:column="57">nsc</name><op:operator pos:line="152" pos:column="60">.</op:operator><name pos:line="152" pos:column="61">Actor</name></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="68">this</name></expr></argument>, <argument><expr><name pos:line="152" pos:column="74">target</name></expr></argument>, <argument><expr><name pos:line="152" pos:column="82">oldStance</name></expr></argument>, <argument><expr><name pos:line="152" pos:column="93">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></foreach>
		}</block></function>

		<function><type><specifier pos:line="155" pos:column="17">public</specifier> <name pos:line="155" pos:column="24">bool</name></type> <name pos:line="155" pos:column="29">CanViewActor</name><parameter_list pos:line="155" pos:column="41">(<param><decl><type><name pos:line="155" pos:column="42">Actor</name></type> <name pos:line="155" pos:column="48">a</name></decl></param>)</parameter_list>
		<block pos:line="156" pos:column="17">{
			<return pos:line="157" pos:column="25">return <expr><call><name><name pos:line="157" pos:column="32">a</name><op:operator pos:line="157" pos:column="33">.</op:operator><name pos:line="157" pos:column="34">CanBeViewedByPlayer</name></name><argument_list pos:line="157" pos:column="53">(<argument><expr><name pos:line="157" pos:column="54">this</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="160" pos:column="17">public</specifier> <name pos:line="160" pos:column="24">bool</name></type> <name pos:line="160" pos:column="29">CanTargetActor</name><parameter_list pos:line="160" pos:column="43">(<param><decl><type><name pos:line="160" pos:column="44">Actor</name></type> <name pos:line="160" pos:column="50">a</name></decl></param>)</parameter_list>
		<block pos:line="161" pos:column="17">{
			<if pos:line="162" pos:column="25">if <condition pos:line="162" pos:column="28">(<expr><name pos:line="162" pos:column="29">HasFogVisibility</name></expr>)</condition><then pos:line="162" pos:column="46">
				<return pos:line="163" pos:column="33">return <expr><lit:literal type="boolean" pos:line="163" pos:column="40">true</lit:literal></expr>;</return></then></if>

			<return pos:line="165" pos:column="25">return <expr><call><name pos:line="165" pos:column="32">CanViewActor</name><argument_list pos:line="165" pos:column="44">(<argument><expr><name pos:line="165" pos:column="45">a</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="168" pos:column="17">public</specifier> <name pos:line="168" pos:column="24">bool</name></type> <name pos:line="168" pos:column="29">HasFogVisibility</name> <block pos:line="168" pos:column="46">{ <function><name pos:line="168" pos:column="48">get</name> <block pos:line="168" pos:column="52">{ <return pos:line="168" pos:column="54">return <expr><call><name><name pos:line="168" pos:column="61">fogVisibilities</name><op:operator pos:line="168" pos:column="76">.</op:operator><name pos:line="168" pos:column="77">Any</name></name><argument_list pos:line="168" pos:column="80">(<argument><expr><lambda><name pos:line="168" pos:column="81">f</name> <op:operator pos:line="168" pos:column="83">=&gt;</op:operator> <call><name><name pos:line="168" pos:column="86">f</name><op:operator pos:line="168" pos:column="87">.</op:operator><name pos:line="168" pos:column="88">HasFogVisibility</name></name><argument_list pos:line="168" pos:column="104">(<argument><expr><name pos:line="168" pos:column="105">this</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</return> }</block></function> }</block></decl></decl_stmt>

		<cpp:region pos:line="170" pos:column="17">#<cpp:directive pos:line="170" pos:column="18">region</cpp:directive> Scripting interface</cpp:region>

		<decl_stmt><decl><type><name><name pos:line="172" pos:column="17">Lazy</name><argument_list pos:line="172" pos:column="21">&lt;<argument><name pos:line="172" pos:column="22">ScriptPlayerInterface</name></argument>&gt;</argument_list></name></type> <name pos:line="172" pos:column="45">luaInterface</name></decl>;</decl_stmt>
		<function><type><specifier pos:line="173" pos:column="17">public</specifier> <name pos:line="173" pos:column="24">void</name></type> <name pos:line="173" pos:column="29">OnScriptBind</name><parameter_list pos:line="173" pos:column="41">(<param><decl><type><name pos:line="173" pos:column="42">ScriptContext</name></type> <name pos:line="173" pos:column="56">context</name></decl></param>)</parameter_list>
		<block pos:line="174" pos:column="17">{
			<if pos:line="175" pos:column="25">if <condition pos:line="175" pos:column="28">(<expr><name pos:line="175" pos:column="29">luaInterface</name> <op:operator pos:line="175" pos:column="42">==</op:operator> <name pos:line="175" pos:column="45">null</name></expr>)</condition><then pos:line="175" pos:column="50">
				<expr_stmt><expr><name pos:line="176" pos:column="33">luaInterface</name> <op:operator pos:line="176" pos:column="46">=</op:operator> <call><name><name pos:line="176" pos:column="48">Exts</name><op:operator pos:line="176" pos:column="52">.</op:operator><name pos:line="176" pos:column="53">Lazy</name></name><argument_list pos:line="176" pos:column="57">(<argument><expr><lambda><parameter_list pos:line="176" pos:column="58">()</parameter_list> <op:operator pos:line="176" pos:column="61">=&gt;</op:operator> <op:operator pos:line="176" pos:column="64">new</op:operator> <call><name pos:line="176" pos:column="68">ScriptPlayerInterface</name><argument_list pos:line="176" pos:column="89">(<argument><expr><name pos:line="176" pos:column="90">context</name></expr></argument>, <argument><expr><name pos:line="176" pos:column="99">this</name></expr></argument>)</argument_list></call></lambda></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></function>

		<decl_stmt><decl><type><specifier pos:line="179" pos:column="17">public</specifier> <name pos:line="179" pos:column="24">LuaValue</name></type> <name pos:line="179" pos:column="33">this</name><parameter_list pos:line="179" pos:column="37">[<param><decl><type><name pos:line="179" pos:column="38">LuaRuntime</name></type> <name pos:line="179" pos:column="49">runtime</name></decl></param><op:operator pos:line="179" pos:column="56">,</op:operator> <param><decl><type><name pos:line="179" pos:column="58">LuaValue</name></type> <name pos:line="179" pos:column="67">keyValue</name></decl></param>]</parameter_list>
		<block pos:line="180" pos:column="17">{
			<function><name pos:line="181" pos:column="25">get</name> <block pos:line="181" pos:column="29">{ <return pos:line="181" pos:column="31">return <expr><name><name pos:line="181" pos:column="38">luaInterface</name><op:operator pos:line="181" pos:column="50">.</op:operator><name pos:line="181" pos:column="51">Value</name><index pos:line="181" pos:column="56">[<expr><name pos:line="181" pos:column="57">runtime</name></expr>, <expr><name pos:line="181" pos:column="66">keyValue</name></expr>]</index></name></expr>;</return> }</block></function>
			<function><name pos:line="182" pos:column="25">set</name> <block pos:line="182" pos:column="29">{ <expr_stmt><expr><name><name pos:line="182" pos:column="31">luaInterface</name><op:operator pos:line="182" pos:column="43">.</op:operator><name pos:line="182" pos:column="44">Value</name><index pos:line="182" pos:column="49">[<expr><name pos:line="182" pos:column="50">runtime</name></expr>, <expr><name pos:line="182" pos:column="59">keyValue</name></expr>]</index></name> <op:operator pos:line="182" pos:column="69">=</op:operator> <name pos:line="182" pos:column="71">value</name></expr>;</expr_stmt> }</block></function>
		}</block></decl></decl_stmt>

		<function><type><specifier pos:line="185" pos:column="17">public</specifier> <name pos:line="185" pos:column="24">LuaValue</name></type> <name pos:line="185" pos:column="33">Equals</name><parameter_list pos:line="185" pos:column="39">(<param><decl><type><name pos:line="185" pos:column="40">LuaRuntime</name></type> <name pos:line="185" pos:column="51">runtime</name></decl></param>, <param><decl><type><name pos:line="185" pos:column="60">LuaValue</name></type> <name pos:line="185" pos:column="69">left</name></decl></param>, <param><decl><type><name pos:line="185" pos:column="75">LuaValue</name></type> <name pos:line="185" pos:column="84">right</name></decl></param>)</parameter_list>
		<block pos:line="186" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="187" pos:column="25">Player</name></type> <name pos:line="187" pos:column="32">a</name></decl><op:operator pos:line="187" pos:column="33">,</op:operator> <decl><type ref="prev"/><name pos:line="187" pos:column="35">b</name></decl>;</decl_stmt>
			<if pos:line="188" pos:column="25">if <condition pos:line="188" pos:column="28">(<expr><op:operator pos:line="188" pos:column="29">!</op:operator><call><name><name pos:line="188" pos:column="30">left</name><op:operator pos:line="188" pos:column="34">.</op:operator><name pos:line="188" pos:column="35">TryGetClrValue</name></name><argument_list pos:line="188" pos:column="49">(<argument><expr pos:line="188" pos:column="50">out <name pos:line="188" pos:column="54">a</name></expr></argument>)</argument_list></call> <op:operator pos:line="188" pos:column="57">||</op:operator> <op:operator pos:line="188" pos:column="60">!</op:operator><call><name><name pos:line="188" pos:column="61">right</name><op:operator pos:line="188" pos:column="66">.</op:operator><name pos:line="188" pos:column="67">TryGetClrValue</name></name><argument_list pos:line="188" pos:column="81">(<argument><expr pos:line="188" pos:column="82">out <name pos:line="188" pos:column="86">b</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="188" pos:column="89">
				<return pos:line="189" pos:column="33">return <expr><lit:literal type="boolean" pos:line="189" pos:column="40">false</lit:literal></expr>;</return></then></if>

			<return pos:line="191" pos:column="25">return <expr><name pos:line="191" pos:column="32">a</name> <op:operator pos:line="191" pos:column="34">==</op:operator> <name pos:line="191" pos:column="37">b</name></expr>;</return>
		}</block></function>

		<function><type><specifier pos:line="194" pos:column="17">public</specifier> <name pos:line="194" pos:column="24">LuaValue</name></type> <name pos:line="194" pos:column="33">ToString</name><parameter_list pos:line="194" pos:column="41">(<param><decl><type><name pos:line="194" pos:column="42">LuaRuntime</name></type> <name pos:line="194" pos:column="53">runtime</name></decl></param>)</parameter_list>
		<block pos:line="195" pos:column="17">{
			<return pos:line="196" pos:column="25">return <expr><lit:literal type="string" pos:line="196" pos:column="32">"Player ({0})"</lit:literal><op:operator pos:line="196" pos:column="46">.</op:operator><call><name pos:line="196" pos:column="47">F</name><argument_list pos:line="196" pos:column="48">(<argument><expr><name pos:line="196" pos:column="49">PlayerName</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></function>

		<cpp:endregion pos:line="199" pos:column="17">#<cpp:directive pos:line="199" pos:column="18">endregion</cpp:directive></cpp:endregion>
	}</block></namespace>
}
</unit>
