<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C#" filename="C:\Users\kh\Documents\GitHubVisualStudio\Swummary\testData\OpenRA\Download.cs" pos:tabs="8"><cpp:region pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">region</cpp:directive> Copyright &amp; License Information</cpp:region>
<comment type="block" pos:line="2" pos:column="1">/*
 * Copyright 2007-2015 The OpenRA Developers (see AUTHORS)
 * This file is part of OpenRA, which is free software. It is made
 * available to you under the terms of the GNU General Public License
 * as published by the Free Software Foundation. For more information,
 * see COPYING.
 */</comment>
<cpp:endregion pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endregion</cpp:directive></cpp:endregion>

<using pos:line="11" pos:column="1">using <name pos:line="11" pos:column="7">System</name>;</using>
<using pos:line="12" pos:column="1">using <name><name pos:line="12" pos:column="7">System</name><op:operator pos:line="12" pos:column="13">.</op:operator><name pos:line="12" pos:column="14">ComponentModel</name></name>;</using>
<using pos:line="13" pos:column="1">using <name><name pos:line="13" pos:column="7">System</name><op:operator pos:line="13" pos:column="13">.</op:operator><name pos:line="13" pos:column="14">Net</name></name>;</using>

<namespace pos:line="15" pos:column="1">namespace <name pos:line="15" pos:column="11">OpenRA</name>
<block pos:line="16" pos:column="1">{
	<class><specifier pos:line="17" pos:column="9">public</specifier> class <name pos:line="17" pos:column="22">Download</name>
	<block pos:line="18" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">WebClient</name></type> <name pos:line="19" pos:column="27">wc</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">bool</name></type> <name pos:line="20" pos:column="22">cancelled</name></decl>;</decl_stmt>

		<function><type><specifier pos:line="22" pos:column="17">public</specifier> <specifier pos:line="22" pos:column="24">static</specifier> <name pos:line="22" pos:column="31">string</name></type> <name pos:line="22" pos:column="38">FormatErrorMessage</name><parameter_list pos:line="22" pos:column="56">(<param><decl><type><name pos:line="22" pos:column="57">Exception</name></type> <name pos:line="22" pos:column="67">e</name></decl></param>)</parameter_list>
		<block pos:line="23" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="24" pos:column="25">var</name></type> <name pos:line="24" pos:column="29">ex</name> <init pos:line="24" pos:column="32">= <expr><name pos:line="24" pos:column="34">e</name> <op:operator pos:line="24" pos:column="36">as</op:operator> <name pos:line="24" pos:column="39">WebException</name></expr></init></decl>;</decl_stmt>
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><name pos:line="25" pos:column="29">ex</name> <op:operator pos:line="25" pos:column="32">==</op:operator> <name pos:line="25" pos:column="35">null</name></expr>)</condition><then pos:line="25" pos:column="40">
				<return pos:line="26" pos:column="33">return <expr><name><name pos:line="26" pos:column="40">e</name><op:operator pos:line="26" pos:column="41">.</op:operator><name pos:line="26" pos:column="42">Message</name></name></expr>;</return></then></if>

			<switch pos:line="28" pos:column="25">switch <condition pos:line="28" pos:column="32">(<expr><name><name pos:line="28" pos:column="33">ex</name><op:operator pos:line="28" pos:column="35">.</op:operator><name pos:line="28" pos:column="36">Status</name></name></expr>)</condition>
			<block pos:line="29" pos:column="25">{
				<case pos:line="30" pos:column="33">case <expr><name><name pos:line="30" pos:column="38">WebExceptionStatus</name><op:operator pos:line="30" pos:column="56">.</op:operator><name pos:line="30" pos:column="57">NameResolutionFailure</name></name></expr>:
					<return pos:line="31" pos:column="41">return <expr><lit:literal type="string" pos:line="31" pos:column="48">"DNS lookup failed"</lit:literal></expr>;</return>
				</case><case pos:line="32" pos:column="33">case <expr><name><name pos:line="32" pos:column="38">WebExceptionStatus</name><op:operator pos:line="32" pos:column="56">.</op:operator><name pos:line="32" pos:column="57">Timeout</name></name></expr>:
					<return pos:line="33" pos:column="41">return <expr><lit:literal type="string" pos:line="33" pos:column="48">"Connection timeout"</lit:literal></expr>;</return>
				</case><case pos:line="34" pos:column="33">case <expr><name><name pos:line="34" pos:column="38">WebExceptionStatus</name><op:operator pos:line="34" pos:column="56">.</op:operator><name pos:line="34" pos:column="57">ConnectFailure</name></name></expr>:
					<return pos:line="35" pos:column="41">return <expr><lit:literal type="string" pos:line="35" pos:column="48">"Cannot connect to remote server"</lit:literal></expr>;</return>
				</case><case pos:line="36" pos:column="33">case <expr><name><name pos:line="36" pos:column="38">WebExceptionStatus</name><op:operator pos:line="36" pos:column="56">.</op:operator><name pos:line="36" pos:column="57">ProtocolError</name></name></expr>:
					<return pos:line="37" pos:column="41">return <expr><lit:literal type="string" pos:line="37" pos:column="48">"File not found on remote server"</lit:literal></expr>;</return>
				</case><default pos:line="38" pos:column="33">default:
					<return pos:line="39" pos:column="41">return <expr><name><name pos:line="39" pos:column="48">ex</name><op:operator pos:line="39" pos:column="50">.</op:operator><name pos:line="39" pos:column="51">Message</name></name></expr>;</return>
			</default>}</block></switch>
		}</block></function>

		<constructor><specifier pos:line="43" pos:column="17">public</specifier> <name pos:line="43" pos:column="24">Download</name><parameter_list pos:line="43" pos:column="32">(<param><decl><type><name pos:line="43" pos:column="33">string</name></type> <name pos:line="43" pos:column="40">url</name></decl></param>, <param><decl><type><name pos:line="43" pos:column="45">string</name></type> <name pos:line="43" pos:column="52">path</name></decl></param>, <param><decl><type><name><name pos:line="43" pos:column="58">Action</name><argument_list pos:line="43" pos:column="64">&lt;<argument><name pos:line="43" pos:column="65">DownloadProgressChangedEventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="43" pos:column="99">onProgress</name></decl></param>, <param><decl><type><name><name pos:line="43" pos:column="111">Action</name><argument_list pos:line="43" pos:column="117">&lt;<argument><name pos:line="43" pos:column="118">AsyncCompletedEventArgs</name></argument>, <argument><name pos:line="43" pos:column="143">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="43" pos:column="149">onComplete</name></decl></param>)</parameter_list>
		<block pos:line="44" pos:column="17">{
			<expr_stmt><expr><name pos:line="45" pos:column="25">wc</name> <op:operator pos:line="45" pos:column="28">=</op:operator> <op:operator pos:line="45" pos:column="30">new</op:operator> <call><name pos:line="45" pos:column="34">WebClient</name><argument_list pos:line="45" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="46" pos:column="25">wc</name><op:operator pos:line="46" pos:column="27">.</op:operator><name pos:line="46" pos:column="28">Proxy</name></name> <op:operator pos:line="46" pos:column="34">=</op:operator> <name pos:line="46" pos:column="36">null</name></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="48" pos:column="25">wc</name><op:operator pos:line="48" pos:column="27">.</op:operator><name pos:line="48" pos:column="28">DownloadProgressChanged</name></name> <op:operator pos:line="48" pos:column="52">+=</op:operator> <lambda><parameter_list pos:line="48" pos:column="55">(<param><decl><name pos:line="48" pos:column="56">_</name></decl></param>, <param><decl><name pos:line="48" pos:column="59">a</name></decl></param>)</parameter_list> <op:operator pos:line="48" pos:column="62">=&gt;</op:operator> <call><name pos:line="48" pos:column="65">onProgress</name><argument_list pos:line="48" pos:column="75">(<argument><expr><name pos:line="48" pos:column="76">a</name></expr></argument>)</argument_list></call></lambda></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="49" pos:column="25">wc</name><op:operator pos:line="49" pos:column="27">.</op:operator><name pos:line="49" pos:column="28">DownloadFileCompleted</name></name> <op:operator pos:line="49" pos:column="50">+=</op:operator> <lambda><parameter_list pos:line="49" pos:column="53">(<param><decl><name pos:line="49" pos:column="54">_</name></decl></param>, <param><decl><name pos:line="49" pos:column="57">a</name></decl></param>)</parameter_list> <op:operator pos:line="49" pos:column="60">=&gt;</op:operator> <call><name pos:line="49" pos:column="63">onComplete</name><argument_list pos:line="49" pos:column="73">(<argument><expr><name pos:line="49" pos:column="74">a</name></expr></argument>, <argument><expr><name pos:line="49" pos:column="77">cancelled</name></expr></argument>)</argument_list></call></lambda></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="51" pos:column="25">Game</name><op:operator pos:line="51" pos:column="29">.</op:operator><name pos:line="51" pos:column="30">OnQuit</name></name> <op:operator pos:line="51" pos:column="37">+=</op:operator> <name pos:line="51" pos:column="40">Cancel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">wc</name><op:operator pos:line="52" pos:column="27">.</op:operator><name pos:line="52" pos:column="28">DownloadFileCompleted</name></name> <op:operator pos:line="52" pos:column="50">+=</op:operator> <lambda><parameter_list pos:line="52" pos:column="53">(<param><decl><name pos:line="52" pos:column="54">_</name></decl></param>, <param><decl><name pos:line="52" pos:column="57">a</name></decl></param>)</parameter_list> <op:operator pos:line="52" pos:column="60">=&gt;</op:operator> <block pos:line="52" pos:column="63">{ <expr_stmt><expr><name><name pos:line="52" pos:column="65">Game</name><op:operator pos:line="52" pos:column="69">.</op:operator><name pos:line="52" pos:column="70">OnQuit</name></name> <op:operator pos:line="52" pos:column="77">-=</op:operator> <name pos:line="52" pos:column="80">Cancel</name></expr>;</expr_stmt> }</block></lambda></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="54" pos:column="25">wc</name><op:operator pos:line="54" pos:column="27">.</op:operator><name pos:line="54" pos:column="28">DownloadFileAsync</name></name><argument_list pos:line="54" pos:column="45">(<argument><expr><op:operator pos:line="54" pos:column="46">new</op:operator> <call><name pos:line="54" pos:column="50">Uri</name><argument_list pos:line="54" pos:column="53">(<argument><expr><name pos:line="54" pos:column="54">url</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="60">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></constructor>

		<constructor><specifier pos:line="57" pos:column="17">public</specifier> <name pos:line="57" pos:column="24">Download</name><parameter_list pos:line="57" pos:column="32">(<param><decl><type><name pos:line="57" pos:column="33">string</name></type> <name pos:line="57" pos:column="40">url</name></decl></param>, <param><decl><type><name><name pos:line="57" pos:column="45">Action</name><argument_list pos:line="57" pos:column="51">&lt;<argument><name pos:line="57" pos:column="52">DownloadProgressChangedEventArgs</name></argument>&gt;</argument_list></name></type> <name pos:line="57" pos:column="86">onProgress</name></decl></param>, <param><decl><type><name><name pos:line="57" pos:column="98">Action</name><argument_list pos:line="57" pos:column="104">&lt;<argument><name pos:line="57" pos:column="105">DownloadDataCompletedEventArgs</name></argument>, <argument><name pos:line="57" pos:column="137">bool</name></argument>&gt;</argument_list></name></type> <name pos:line="57" pos:column="143">onComplete</name></decl></param>)</parameter_list>
		<block pos:line="58" pos:column="17">{
			<expr_stmt><expr><name pos:line="59" pos:column="25">wc</name> <op:operator pos:line="59" pos:column="28">=</op:operator> <op:operator pos:line="59" pos:column="30">new</op:operator> <call><name pos:line="59" pos:column="34">WebClient</name><argument_list pos:line="59" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="60" pos:column="25">wc</name><op:operator pos:line="60" pos:column="27">.</op:operator><name pos:line="60" pos:column="28">Proxy</name></name> <op:operator pos:line="60" pos:column="34">=</op:operator> <name pos:line="60" pos:column="36">null</name></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="62" pos:column="25">wc</name><op:operator pos:line="62" pos:column="27">.</op:operator><name pos:line="62" pos:column="28">DownloadProgressChanged</name></name> <op:operator pos:line="62" pos:column="52">+=</op:operator> <lambda><parameter_list pos:line="62" pos:column="55">(<param><decl><name pos:line="62" pos:column="56">_</name></decl></param>, <param><decl><name pos:line="62" pos:column="59">a</name></decl></param>)</parameter_list> <op:operator pos:line="62" pos:column="62">=&gt;</op:operator> <call><name pos:line="62" pos:column="65">onProgress</name><argument_list pos:line="62" pos:column="75">(<argument><expr><name pos:line="62" pos:column="76">a</name></expr></argument>)</argument_list></call></lambda></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="63" pos:column="25">wc</name><op:operator pos:line="63" pos:column="27">.</op:operator><name pos:line="63" pos:column="28">DownloadDataCompleted</name></name> <op:operator pos:line="63" pos:column="50">+=</op:operator> <lambda><parameter_list pos:line="63" pos:column="53">(<param><decl><name pos:line="63" pos:column="54">_</name></decl></param>, <param><decl><name pos:line="63" pos:column="57">a</name></decl></param>)</parameter_list> <op:operator pos:line="63" pos:column="60">=&gt;</op:operator> <call><name pos:line="63" pos:column="63">onComplete</name><argument_list pos:line="63" pos:column="73">(<argument><expr><name pos:line="63" pos:column="74">a</name></expr></argument>, <argument><expr><name pos:line="63" pos:column="77">cancelled</name></expr></argument>)</argument_list></call></lambda></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="65" pos:column="25">Game</name><op:operator pos:line="65" pos:column="29">.</op:operator><name pos:line="65" pos:column="30">OnQuit</name></name> <op:operator pos:line="65" pos:column="37">+=</op:operator> <name pos:line="65" pos:column="40">Cancel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="66" pos:column="25">wc</name><op:operator pos:line="66" pos:column="27">.</op:operator><name pos:line="66" pos:column="28">DownloadDataCompleted</name></name> <op:operator pos:line="66" pos:column="50">+=</op:operator> <lambda><parameter_list pos:line="66" pos:column="53">(<param><decl><name pos:line="66" pos:column="54">_</name></decl></param>, <param><decl><name pos:line="66" pos:column="57">a</name></decl></param>)</parameter_list> <op:operator pos:line="66" pos:column="60">=&gt;</op:operator> <block pos:line="66" pos:column="63">{ <expr_stmt><expr><name><name pos:line="66" pos:column="65">Game</name><op:operator pos:line="66" pos:column="69">.</op:operator><name pos:line="66" pos:column="70">OnQuit</name></name> <op:operator pos:line="66" pos:column="77">-=</op:operator> <name pos:line="66" pos:column="80">Cancel</name></expr>;</expr_stmt> }</block></lambda></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="68" pos:column="25">wc</name><op:operator pos:line="68" pos:column="27">.</op:operator><name pos:line="68" pos:column="28">DownloadDataAsync</name></name><argument_list pos:line="68" pos:column="45">(<argument><expr><op:operator pos:line="68" pos:column="46">new</op:operator> <call><name pos:line="68" pos:column="50">Uri</name><argument_list pos:line="68" pos:column="53">(<argument><expr><name pos:line="68" pos:column="54">url</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></constructor>

		<function><type><specifier pos:line="71" pos:column="17">public</specifier> <name pos:line="71" pos:column="24">void</name></type> <name pos:line="71" pos:column="29">Cancel</name><parameter_list pos:line="71" pos:column="35">()</parameter_list>
		<block pos:line="72" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">Game</name><op:operator pos:line="73" pos:column="29">.</op:operator><name pos:line="73" pos:column="30">OnQuit</name></name> <op:operator pos:line="73" pos:column="37">-=</op:operator> <name pos:line="73" pos:column="40">Cancel</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="74" pos:column="25">wc</name><op:operator pos:line="74" pos:column="27">.</op:operator><name pos:line="74" pos:column="28">CancelAsync</name></name><argument_list pos:line="74" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="75" pos:column="25">wc</name><op:operator pos:line="75" pos:column="27">.</op:operator><name pos:line="75" pos:column="28">Dispose</name></name><argument_list pos:line="75" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="76" pos:column="25">cancelled</name> <op:operator pos:line="76" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="76" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></function>
	}</block></class>
}</block></namespace>
</unit>
